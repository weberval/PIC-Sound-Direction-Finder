

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Oct 23 15:34:50 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29  0000                     
    30                           ; Version 1.44
    31                           ; Generated 14/09/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4520 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	smallconst
    66  000600                     __psmallconst:
    67                           	opt stack 0
    68  000600  00                 	db	0
    69  000601                     _dpowers:
    70                           	opt stack 0
    71  000601  0001               	dw	1
    72  000603  000A               	dw	10
    73  000605  0064               	dw	100
    74  000607  03E8               	dw	1000
    75  000609  2710               	dw	10000
    76  00060B                     __end_of_dpowers:
    77                           	opt stack 0
    78  0000                     _TRISB	set	3987
    79  0000                     _PORTB	set	3969
    80  0000                     _LATAbits	set	3977
    81  0000                     _TRISAbits	set	3986
    82  0000                     _LATB	set	3978
    83  0000                     _LATA	set	3977
    84  0000                     _ADRESL	set	4035
    85  0000                     _ADRESH	set	4036
    86  0000                     _PIR1bits	set	3998
    87  0000                     _ADCON1	set	4033
    88  0000                     _ADCON2	set	4032
    89  0000                     _ADCON0	set	4034
    90  0000                     _PIE1bits	set	3997
    91  0000                     _ADCON0bits	set	4034
    92  0000                     _INTCONbits	set	4082
    93  00060B                     STR_1:
    94  00060B  25                 	db	37
    95  00060C  64                 	db	100	;'d'
    96  00060D  00                 	db	0
    97                           
    98                           ; #config settings
    99  00060E  00                 	db	0	; dummy byte at the end
   100  0000                     
   101                           	psect	cinit
   102  000B4A                     __pcinit:
   103                           	opt stack 0
   104  000B4A                     start_initialization:
   105                           	opt stack 0
   106  000B4A                     __initialization:
   107                           	opt stack 0
   108  000B4A                     end_of_initialization:
   109                           	opt stack 0
   110  000B4A                     __end_of__initialization:
   111                           	opt stack 0
   112  000B4A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   113  000B4C  6EF8               	movwf	tblptru,c
   114  000B4E  0100               	movlb	0
   115  000B50  EFAC  F003         	goto	_main	;jump to C main() function
   116                           tblptru	equ	0xFF8
   117                           
   118                           	psect	cstackCOMRAM
   119  000001                     __pcstackCOMRAM:
   120                           	opt stack 0
   121  000001                     ??_Delay10KTCYx:
   122  000001                     ??_SetDDRamAddr:
   123  000001                     ??_DelayPORXLCD:
   124  000001                     ?_ReadADC:
   125                           	opt stack 0
   126  000001                     ?___lwdiv:
   127                           	opt stack 0
   128  000001                     WriteCmdXLCD@cmd:
   129                           	opt stack 0
   130  000001                     WriteDataXLCD@data:
   131                           	opt stack 0
   132  000001                     OpenADC@config2:
   133                           	opt stack 0
   134  000001                     ___lwdiv@dividend:
   135                           	opt stack 0
   136                           
   137                           ; 2 bytes @ 0x0
   138  000001                     	ds	1
   139  000002                     OpenADC@portconfig:
   140                           	opt stack 0
   141  000002                     Delay10KTCYx@unit:
   142                           	opt stack 0
   143  000002                     putrsXLCD@buffer:
   144                           	opt stack 0
   145                           
   146                           ; 2 bytes @ 0x1
   147  000002                     	ds	1
   148  000003                     ??_OpenADC:
   149  000003                     ??_ReadADC:
   150  000003                     ___lwdiv@divisor:
   151                           	opt stack 0
   152                           
   153                           ; 2 bytes @ 0x2
   154  000003                     	ds	1
   155  000004                     SetDDRamAddr@DDaddr:
   156                           	opt stack 0
   157                           
   158                           ; 1 bytes @ 0x3
   159  000004                     	ds	1
   160  000005                     OpenXLCD@lcdtype:
   161                           	opt stack 0
   162  000005                     OpenADC@config:
   163                           	opt stack 0
   164  000005                     ___lwdiv@quotient:
   165                           	opt stack 0
   166                           
   167                           ; 2 bytes @ 0x4
   168  000005                     	ds	1
   169  000006                     
   170                           ; 1 bytes @ 0x5
   171  000006                     	ds	1
   172  000007                     ___lwdiv@counter:
   173                           	opt stack 0
   174                           
   175                           ; 1 bytes @ 0x6
   176  000007                     	ds	1
   177  000008                     ?___lwmod:
   178                           	opt stack 0
   179  000008                     ___lwmod@dividend:
   180                           	opt stack 0
   181                           
   182                           ; 2 bytes @ 0x7
   183  000008                     	ds	2
   184  00000A                     ___lwmod@divisor:
   185                           	opt stack 0
   186                           
   187                           ; 2 bytes @ 0x9
   188  00000A                     	ds	2
   189  00000C                     ___lwmod@counter:
   190                           	opt stack 0
   191                           
   192                           ; 1 bytes @ 0xB
   193  00000C                     	ds	1
   194  00000D                     ?_sprintf:
   195                           	opt stack 0
   196  00000D                     sprintf@sp:
   197                           	opt stack 0
   198                           
   199                           ; 2 bytes @ 0xC
   200  00000D                     	ds	2
   201  00000F                     sprintf@f:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0xE
   205  00000F                     	ds	4
   206  000013                     ??_sprintf:
   207                           
   208                           ; 1 bytes @ 0x12
   209  000013                     	ds	1
   210  000014                     sprintf@ap:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0x13
   214  000014                     	ds	2
   215  000016                     sprintf@flag:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0x15
   219  000016                     	ds	1
   220  000017                     sprintf@prec:
   221                           	opt stack 0
   222                           
   223                           ; 1 bytes @ 0x16
   224  000017                     	ds	1
   225  000018                     sprintf@val:
   226                           	opt stack 0
   227                           
   228                           ; 2 bytes @ 0x17
   229  000018                     	ds	2
   230  00001A                     sprintf@c:
   231                           	opt stack 0
   232                           
   233                           ; 1 bytes @ 0x19
   234  00001A                     	ds	1
   235  00001B                     ??_main:
   236                           
   237                           ; 1 bytes @ 0x1A
   238  00001B                     	ds	1
   239  00001C                     main@buffer:
   240                           	opt stack 0
   241                           
   242                           ; 10 bytes @ 0x1B
   243  00001C                     	ds	10
   244  000026                     main@channel:
   245                           	opt stack 0
   246                           
   247                           ; 1 bytes @ 0x25
   248  000026                     	ds	1
   249  000027                     main@config3:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x26
   253  000027                     	ds	1
   254  000028                     main@i:
   255                           	opt stack 0
   256                           
   257                           ; 1 bytes @ 0x27
   258  000028                     	ds	1
   259  000029                     main@testbuffer:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x28
   263  000029                     	ds	2
   264  00002B                     main@config1:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0x2A
   268  00002B                     	ds	1
   269  00002C                     main@config2:
   270                           	opt stack 0
   271                           
   272                           ; 1 bytes @ 0x2B
   273  00002C                     	ds	1
   274  00002D                     main@portconfig:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x2C
   278  00002D                     	ds	1
   279  00002E                     main@tmp:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x2D
   283  00002E                     	ds	2
   284                           tblptru	equ	0xFF8
   285                           
   286 ;;
   287 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   288 ;;
   289 ;; *************** function _main *****************
   290 ;; Defined at:
   291 ;;		line 6 in file "main.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;  buffer         10   27[COMRAM] unsigned char [10]
   296 ;;  tmp             2   45[COMRAM] int 
   297 ;;  testbuffer      2   40[COMRAM] int 
   298 ;;  portconfig      1   44[COMRAM] unsigned char 
   299 ;;  config2         1   43[COMRAM] unsigned char 
   300 ;;  config1         1   42[COMRAM] unsigned char 
   301 ;;  i               1   39[COMRAM] unsigned char 
   302 ;;  config3         1   38[COMRAM] unsigned char 
   303 ;;  channel         1   37[COMRAM] unsigned char 
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   313 ;;      Params:         0       0       0       0       0       0       0
   314 ;;      Locals:        20       0       0       0       0       0       0
   315 ;;      Temps:          1       0       0       0       0       0       0
   316 ;;      Totals:        21       0       0       0       0       0       0
   317 ;;Total ram usage:       21 bytes
   318 ;; Hardware stack levels required when called:    4
   319 ;; This function calls:
   320 ;;		_BusyADC
   321 ;;		_BusyXLCD
   322 ;;		_CloseADC
   323 ;;		_ConvertADC
   324 ;;		_OpenADC
   325 ;;		_ReadADC
   326 ;;		_init_XLCD
   327 ;;		_putrsXLCD
   328 ;;		_sprintf
   329 ;; This function is called by:
   330 ;;		Startup code after reset
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text0
   335  000758                     __ptext0:
   336                           	opt stack 0
   337  000758                     _main:
   338                           	opt stack 27
   339                           
   340                           ;main.c: 8: LATA = 0xFF;
   341                           
   342                           ;incstack = 0
   343  000758  6889               	setf	3977,c	;volatile
   344                           
   345                           ;main.c: 9: LATB = 0xFF;
   346  00075A  688A               	setf	3978,c	;volatile
   347                           
   348                           ;main.c: 10: init_XLCD();
   349  00075C  EC76  F005         	call	_init_XLCD	;wreg free
   350                           
   351                           ;main.c: 12: int tmp;
   352                           ;main.c: 13: int testbuffer;
   353                           ;main.c: 14: unsigned char channel=0x00,config1=0x00,config2=0x00,config3=0x00,portconfi
      +                          g=0x00,i=0;
   354  000760  0E00               	movlw	0
   355  000762  6E26               	movwf	main@channel,c
   356  000764  0E00               	movlw	0
   357  000766  6E2B               	movwf	main@config1,c
   358  000768  0E00               	movlw	0
   359  00076A  6E2C               	movwf	main@config2,c
   360  00076C  0E00               	movlw	0
   361  00076E  6E27               	movwf	main@config3,c
   362  000770  0E00               	movlw	0
   363  000772  6E2D               	movwf	main@portconfig,c
   364  000774  0E00               	movlw	0
   365  000776  6E28               	movwf	main@i,c
   366                           
   367                           ;main.c: 15: TRISAbits.RA1 = 1;
   368  000778  8292               	bsf	3986,1,c	;volatile
   369                           
   370                           ;main.c: 16: config1 = 0b01000000 | 0b10000000 | 0b00001000 ;
   371  00077A  0EC8               	movlw	200
   372  00077C  6E2B               	movwf	main@config1,c
   373                           
   374                           ;main.c: 17: config2 = 0b00001000 | 0b00000000 | 0b00000000 ;
   375  00077E  0E08               	movlw	8
   376  000780  6E2C               	movwf	main@config2,c
   377                           
   378                           ;main.c: 18: portconfig = 0b00001101 ;
   379  000782  0E0D               	movlw	13
   380  000784  6E2D               	movwf	main@portconfig,c
   381                           
   382                           ;main.c: 19: OpenADC( config1,config2,portconfig);
   383  000786  C02C  F001         	movff	main@config2,OpenADC@config2
   384  00078A  C02D  F002         	movff	main@portconfig,OpenADC@portconfig
   385  00078E  502B               	movf	main@config1,w,c
   386  000790  EC62  F004         	call	_OpenADC
   387                           
   388                           ;main.c: 21: __nop();
   389  000794  F000               	nop	
   390  000796                     
   391                           ;main.c: 25: ConvertADC();
   392  000796  ECB2  F005         	call	_ConvertADC	;wreg free
   393  00079A  EC9F  F005         	call	_BusyADC	;wreg free
   394  00079E  0900               	iorlw	0
   395  0007A0  A4D8               	btfss	status,2,c
   396  0007A2  D7FB               	goto	l39
   397                           
   398                           ;main.c: 27: tmp = ReadADC();
   399  0007A4  EC98  F005         	call	_ReadADC	;wreg free
   400  0007A8  C001  F02E         	movff	?_ReadADC,main@tmp
   401  0007AC  C002  F02F         	movff	?_ReadADC+1,main@tmp+1
   402                           
   403                           ;main.c: 28: char buffer[10];
   404                           ;main.c: 30: if(testbuffer != tmp) {
   405  0007B0  502E               	movf	main@tmp,w,c
   406  0007B2  1829               	xorwf	main@testbuffer,w,c
   407  0007B4  E104               	bnz	u550
   408  0007B6  502F               	movf	main@tmp+1,w,c
   409  0007B8  182A               	xorwf	main@testbuffer+1,w,c
   410  0007BA  B4D8               	btfsc	status,2,c
   411  0007BC  D025               	goto	u580
   412  0007BE                     u550:
   413                           
   414                           ;main.c: 32: sprintf(buffer, "%d", tmp);
   415  0007BE  0E1C               	movlw	low main@buffer
   416  0007C0  6E0D               	movwf	sprintf@sp,c
   417  0007C2  0E00               	movlw	high main@buffer
   418  0007C4  6E0E               	movwf	sprintf@sp+1,c
   419  0007C6  0E0B               	movlw	low STR_1
   420  0007C8  6E0F               	movwf	sprintf@f,c
   421  0007CA  0E06               	movlw	high STR_1
   422  0007CC  6E10               	movwf	sprintf@f+1,c
   423  0007CE  C02E  F011         	movff	main@tmp,?_sprintf+4
   424  0007D2  C02F  F012         	movff	main@tmp+1,?_sprintf+5
   425  0007D6  EC08  F003         	call	_sprintf	;wreg free
   426  0007DA  EC42  F005         	call	_BusyXLCD	;wreg free
   427  0007DE  0900               	iorlw	0
   428  0007E0  A4D8               	btfss	status,2,c
   429  0007E2  D7FB               	goto	l43
   430                           
   431                           ;main.c: 34: init_XLCD();
   432  0007E4  EC76  F005         	call	_init_XLCD	;wreg free
   433  0007E8  EC42  F005         	call	_BusyXLCD	;wreg free
   434  0007EC  0900               	iorlw	0
   435  0007EE  A4D8               	btfss	status,2,c
   436  0007F0  D7FB               	goto	l46
   437                           
   438                           ;main.c: 36: putrsXLCD(buffer);
   439  0007F2  0E1C               	movlw	low main@buffer
   440  0007F4  6E02               	movwf	putrsXLCD@buffer,c
   441  0007F6  0E00               	movlw	high main@buffer
   442  0007F8  6E03               	movwf	putrsXLCD@buffer+1,c
   443  0007FA  EC5F  F005         	call	_putrsXLCD	;wreg free
   444  0007FE  EC42  F005         	call	_BusyXLCD	;wreg free
   445  000802  0900               	iorlw	0
   446  000804  A4D8               	btfss	status,2,c
   447  000806  D7FB               	goto	l49
   448  000808                     u580:
   449                           
   450                           ;main.c: 38: }
   451                           ;main.c: 41: testbuffer = tmp;
   452  000808  C02E  F029         	movff	main@tmp,main@testbuffer
   453  00080C  C02F  F02A         	movff	main@tmp+1,main@testbuffer+1
   454                           
   455                           ;main.c: 42: _delay((unsigned long)((100)*(4000000/4000.0)));
   456  000810  0E82               	movlw	130
   457  000812  6E1B               	movwf	??_main& (0+255),c
   458  000814  0EDE               	movlw	222
   459  000816                     u597:
   460  000816  2EE8               	decfsz	wreg,f,c
   461  000818  D7FE               	bra	u597
   462  00081A  2E1B               	decfsz	??_main& (0+255),f,c
   463  00081C  D7FC               	bra	u597
   464  00081E  D7BB               	goto	l37
   465  000820                     __end_of_main:
   466                           	opt stack 0
   467                           tblptru	equ	0xFF8
   468                           wreg	equ	0xFE8
   469                           status	equ	0xFD8
   470                           
   471 ;; *************** function _sprintf *****************
   472 ;; Defined at:
   473 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;  sp              2   12[COMRAM] PTR unsigned char 
   476 ;;		 -> main@buffer(10), 
   477 ;;  f               2   14[COMRAM] PTR const unsigned char 
   478 ;;		 -> STR_1(3), 
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  tmpval          4    0        struct .
   481 ;;  cp              3    0        PTR const unsigned char 
   482 ;;  val             2   23[COMRAM] unsigned int 
   483 ;;  ap              2   19[COMRAM] PTR void [1]
   484 ;;		 -> ?_sprintf(2), 
   485 ;;  len             2    0        unsigned int 
   486 ;;  c               1   25[COMRAM] char 
   487 ;;  prec            1   22[COMRAM] char 
   488 ;;  flag            1   21[COMRAM] unsigned char 
   489 ;; Return value:  Size  Location     Type
   490 ;;                  2   12[COMRAM] int 
   491 ;; Registers used:
   492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   498 ;;      Params:         6       0       0       0       0       0       0
   499 ;;      Locals:         7       0       0       0       0       0       0
   500 ;;      Temps:          1       0       0       0       0       0       0
   501 ;;      Totals:        14       0       0       0       0       0       0
   502 ;;Total ram usage:       14 bytes
   503 ;; Hardware stack levels used:    1
   504 ;; Hardware stack levels required when called:    1
   505 ;; This function calls:
   506 ;;		___lwdiv
   507 ;;		___lwmod
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text1
   514  000610                     __ptext1:
   515                           	opt stack 0
   516  000610                     _sprintf:
   517                           	opt stack 29
   518                           
   519                           ;doprnt.c: 494: va_list ap;
   520                           ;doprnt.c: 499: signed char c;
   521                           ;doprnt.c: 506: signed char prec;
   522                           ;doprnt.c: 508: unsigned char flag;
   523                           ;doprnt.c: 523: union {
   524                           ;doprnt.c: 524: unsigned long vd;
   525                           ;doprnt.c: 525: double integ;
   526                           ;doprnt.c: 526: } tmpval;
   527                           ;doprnt.c: 528: unsigned int val;
   528                           ;doprnt.c: 529: unsigned len;
   529                           ;doprnt.c: 530: const char * cp;
   530                           ;doprnt.c: 533: *ap = __va_start();
   531                           
   532                           ;incstack = 0
   533  000610  0E11               	movlw	low (?_sprintf+4)
   534  000612  6E14               	movwf	sprintf@ap,c
   535  000614  0E00               	movlw	high (?_sprintf+4)
   536  000616  6E15               	movwf	sprintf@ap+1,c
   537                           
   538                           ;doprnt.c: 536: while(c = *f++) {
   539  000618  D08C               	goto	u500
   540  00061A                     
   541                           ;doprnt.c: 538: if(c != '%')
   542  00061A  0E25               	movlw	37
   543  00061C  181A               	xorwf	sprintf@c,w,c
   544  00061E  B4D8               	btfsc	status,2,c
   545  000620  D009               	goto	l274
   546                           
   547                           ;doprnt.c: 540: {
   548                           ;doprnt.c: 541: ((*sp++ = (c)));
   549  000622  C00D  FFD9         	movff	sprintf@sp,fsr2l
   550  000626  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   551  00062A  C01A  FFDF         	movff	sprintf@c,indf2
   552  00062E  4A0D               	infsnz	sprintf@sp,f,c
   553  000630  2A0E               	incf	sprintf@sp+1,f,c
   554                           
   555                           ;doprnt.c: 542: continue;
   556  000632  D07F               	goto	u500
   557  000634                     l274:
   558                           
   559                           ;doprnt.c: 543: }
   560                           ;doprnt.c: 548: flag = 0;
   561  000634  0E00               	movlw	0
   562  000636  6E16               	movwf	sprintf@flag,c
   563                           
   564                           ;doprnt.c: 822: }
   565                           
   566                           ;doprnt.c: 813: continue;
   567                           
   568                           ;doprnt.c: 802: default:
   569                           
   570                           ;doprnt.c: 698: case 'i':
   571                           ;doprnt.c: 699: break;
   572                           
   573                           ;doprnt.c: 697: case 'd':
   574                           
   575                           ;doprnt.c: 638: goto alldone;
   576                           
   577                           ;doprnt.c: 637: case 0:
   578                           
   579                           ;doprnt.c: 635: switch(c = *f++) {
   580  000638  C00F  FFF6         	movff	sprintf@f,tblptrl
   581  00063C  C010  FFF7         	movff	sprintf@f+1,tblptrh
   582  000640  4A0F               	infsnz	sprintf@f,f,c
   583  000642  2A10               	incf	sprintf@f+1,f,c
   584  000644                     	if	0	;tblptru may be non-zero
   585  000644                     	endif
   586  000644                     	if	0	;tblptru may be non-zero
   587  000644                     	endif
   588  000644  0008               	tblrd		*
   589  000646  CFF5 F01A          	movff	tablat,sprintf@c
   590  00064A  501A               	movf	sprintf@c,w,c
   591                           
   592                           ; Switch size 1, requested type "space"
   593                           ; Number of cases is 3, Range of values is 0 to 105
   594                           ; switch strategies available:
   595                           ; Name         Instructions Cycles
   596                           ; simple_byte           10     6 (average)
   597                           ;	Chosen strategy is simple_byte
   598  00064C  0A00               	xorlw	0	; case 0
   599  00064E  B4D8               	btfsc	status,2,c
   600  000650  D07C               	goto	u510
   601  000652  0A64               	xorlw	100	; case 100
   602  000654  B4D8               	btfsc	status,2,c
   603  000656  D003               	goto	l280
   604  000658  0A0D               	xorlw	13	; case 105
   605  00065A  A4D8               	btfss	status,2,c
   606  00065C  D06A               	goto	u500
   607  00065E                     l280:
   608                           
   609                           ;doprnt.c: 1253: {
   610                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   611  00065E  C014  FFD9         	movff	sprintf@ap,fsr2l
   612  000662  C015  FFDA         	movff	sprintf@ap+1,fsr2h
   613  000666  CFDE F018          	movff	postinc2,sprintf@val
   614  00066A  CFDD F019          	movff	postdec2,sprintf@val+1
   615  00066E  0E02               	movlw	2
   616  000670  2614               	addwf	sprintf@ap,f,c
   617  000672  0E00               	movlw	0
   618  000674  2215               	addwfc	sprintf@ap+1,f,c
   619                           
   620                           ;doprnt.c: 1261: if((int)val < 0) {
   621  000676  AE19               	btfss	sprintf@val+1,7,c
   622  000678  D006               	goto	l282
   623                           
   624                           ;doprnt.c: 1262: flag |= 0x03;
   625  00067A  0E03               	movlw	3
   626  00067C  1216               	iorwf	sprintf@flag,f,c
   627                           
   628                           ;doprnt.c: 1263: val = -val;
   629  00067E  6C18               	negf	sprintf@val,c
   630  000680  1E19               	comf	sprintf@val+1,f,c
   631  000682  B0D8               	btfsc	status,0,c
   632  000684  2A19               	incf	sprintf@val+1,f,c
   633  000686                     l282:
   634                           
   635                           ;doprnt.c: 1264: }
   636                           ;doprnt.c: 1266: }
   637                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   638  000686  0E01               	movlw	1
   639  000688  6E1A               	movwf	sprintf@c,c
   640  00068A                     l1456:
   641  00068A  0E05               	movlw	5
   642  00068C  181A               	xorwf	sprintf@c,w,c
   643  00068E  B4D8               	btfsc	status,2,c
   644  000690  D012               	goto	u480
   645                           
   646                           ;doprnt.c: 1306: if(val < dpowers[c])
   647  000692  501A               	movf	sprintf@c,w,c
   648  000694  0D02               	mullw	2
   649  000696  0E01               	movlw	low _dpowers
   650  000698  24F3               	addwf	prodl,w,c
   651  00069A  6EF6               	movwf	tblptrl,c
   652  00069C  0E06               	movlw	high _dpowers
   653  00069E  20F4               	addwfc	prodh,w,c
   654  0006A0  6EF7               	movwf	tblptrh,c
   655  0006A2                     	if	0	;There are less than 3 active tblptr bytes
   656  0006A2                     	endif
   657  0006A2  0009               	tblrd		*+
   658  0006A4  50F5               	movf	tablat,w,c
   659  0006A6  5C18               	subwf	sprintf@val,w,c
   660  0006A8  0009               	tblrd		*+
   661  0006AA  50F5               	movf	tablat,w,c
   662  0006AC  5819               	subwfb	sprintf@val+1,w,c
   663  0006AE  A0D8               	btfss	status,0,c
   664  0006B0  D002               	goto	u480
   665                           
   666                           ;doprnt.c: 1307: break;
   667  0006B2  2A1A               	incf	sprintf@c,f,c
   668  0006B4  D7EA               	goto	l1456
   669  0006B6                     u480:
   670                           
   671                           ;doprnt.c: 1422: {
   672                           ;doprnt.c: 1438: if(flag & 0x03)
   673  0006B6  C016  F013         	movff	sprintf@flag,??_sprintf
   674  0006BA  0E03               	movlw	3
   675  0006BC  1613               	andwf	??_sprintf,f,c
   676  0006BE  B4D8               	btfsc	status,2,c
   677  0006C0  D008               	goto	l286
   678                           
   679                           ;doprnt.c: 1439: ((*sp++ = ('-')));
   680  0006C2  C00D  FFD9         	movff	sprintf@sp,fsr2l
   681  0006C6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   682  0006CA  0E2D               	movlw	45
   683  0006CC  6EDF               	movwf	indf2,c
   684  0006CE  4A0D               	infsnz	sprintf@sp,f,c
   685  0006D0  2A0E               	incf	sprintf@sp+1,f,c
   686  0006D2                     l286:
   687                           
   688                           ;doprnt.c: 1469: }
   689                           ;doprnt.c: 1472: prec = c;
   690  0006D2  C01A  F017         	movff	sprintf@c,sprintf@prec
   691                           
   692                           ;doprnt.c: 1474: while(prec--) {
   693  0006D6  D029               	goto	l287
   694  0006D8                     
   695                           ;doprnt.c: 1478: {
   696                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   697  0006D8  5017               	movf	sprintf@prec,w,c
   698  0006DA  0D02               	mullw	2
   699  0006DC  0E01               	movlw	low _dpowers
   700  0006DE  24F3               	addwf	prodl,w,c
   701  0006E0  6EF6               	movwf	tblptrl,c
   702  0006E2  0E06               	movlw	high _dpowers
   703  0006E4  20F4               	addwfc	prodh,w,c
   704  0006E6  6EF7               	movwf	tblptrh,c
   705  0006E8                     	if	0	;There are less than 3 active tblptr bytes
   706  0006E8                     	endif
   707  0006E8  0009               	tblrd		*+
   708  0006EA  CFF5 F003          	movff	tablat,___lwdiv@divisor
   709  0006EE  000A               	tblrd		*-
   710  0006F0  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
   711  0006F4  C018  F001         	movff	sprintf@val,___lwdiv@dividend
   712  0006F8  C019  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
   713  0006FC  EC91  F004         	call	___lwdiv	;wreg free
   714  000700  C001  F008         	movff	?___lwdiv,___lwmod@dividend
   715  000704  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
   716  000708  0E00               	movlw	0
   717  00070A  6E0B               	movwf	___lwmod@divisor+1,c
   718  00070C  0E0A               	movlw	10
   719  00070E  6E0A               	movwf	___lwmod@divisor,c
   720  000710  ECE3  F004         	call	___lwmod	;wreg free
   721  000714  5008               	movf	?___lwmod,w,c
   722  000716  0F30               	addlw	48
   723  000718  6E1A               	movwf	sprintf@c,c
   724                           
   725                           ;doprnt.c: 1523: }
   726                           ;doprnt.c: 1524: ((*sp++ = (c)));
   727  00071A  C00D  FFD9         	movff	sprintf@sp,fsr2l
   728  00071E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   729  000722  C01A  FFDF         	movff	sprintf@c,indf2
   730  000726  4A0D               	infsnz	sprintf@sp,f,c
   731  000728  2A0E               	incf	sprintf@sp+1,f,c
   732  00072A                     l287:
   733  00072A  0617               	decf	sprintf@prec,f,c
   734  00072C  2817               	incf	sprintf@prec,w,c
   735  00072E  A4D8               	btfss	status,2,c
   736  000730  D7D3               	goto	l288
   737  000732                     u500:
   738  000732  C00F  FFF6         	movff	sprintf@f,tblptrl
   739  000736  C010  FFF7         	movff	sprintf@f+1,tblptrh
   740  00073A  4A0F               	infsnz	sprintf@f,f,c
   741  00073C  2A10               	incf	sprintf@f+1,f,c
   742  00073E                     	if	0	;tblptru may be non-zero
   743  00073E                     	endif
   744  00073E                     	if	0	;tblptru may be non-zero
   745  00073E                     	endif
   746  00073E  0008               	tblrd		*
   747  000740  CFF5 F01A          	movff	tablat,sprintf@c
   748  000744  501A               	movf	sprintf@c,w,c
   749  000746  A4D8               	btfss	status,2,c
   750  000748  D768               	goto	l273
   751  00074A                     u510:
   752                           
   753                           ;doprnt.c: 1538: *sp = 0;
   754                           
   755                           ;doprnt.c: 1525: }
   756                           ;doprnt.c: 1533: }
   757                           ;doprnt.c: 1535: alldone:
   758  00074A  C00D  FFD9         	movff	sprintf@sp,fsr2l
   759  00074E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   760  000752  0E00               	movlw	0
   761  000754  6EDF               	movwf	indf2,c
   762  000756  0012               	return	
   763  000758                     __end_of_sprintf:
   764                           	opt stack 0
   765                           tblptru	equ	0xFF8
   766                           tblptrh	equ	0xFF7
   767                           tblptrl	equ	0xFF6
   768                           tablat	equ	0xFF5
   769                           prodh	equ	0xFF4
   770                           prodl	equ	0xFF3
   771                           wreg	equ	0xFE8
   772                           indf2	equ	0xFDF
   773                           postinc2	equ	0xFDE
   774                           postdec2	equ	0xFDD
   775                           fsr2h	equ	0xFDA
   776                           fsr2l	equ	0xFD9
   777                           status	equ	0xFD8
   778                           
   779 ;; *************** function ___lwmod *****************
   780 ;; Defined at:
   781 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;  dividend        2    7[COMRAM] unsigned int 
   784 ;;  divisor         2    9[COMRAM] unsigned int 
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  counter         1   11[COMRAM] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  2    7[COMRAM] unsigned int 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   796 ;;      Params:         4       0       0       0       0       0       0
   797 ;;      Locals:         1       0       0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0       0       0
   799 ;;      Totals:         5       0       0       0       0       0       0
   800 ;;Total ram usage:        5 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_sprintf
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text2
   810  0009C6                     __ptext2:
   811                           	opt stack 0
   812  0009C6                     ___lwmod:
   813                           	opt stack 29
   814                           
   815                           ;incstack = 0
   816  0009C6  500A               	movf	___lwmod@divisor,w,c
   817  0009C8  100B               	iorwf	___lwmod@divisor+1,w,c
   818  0009CA  B4D8               	btfsc	status,2,c
   819  0009CC  D018               	goto	l717
   820  0009CE  0E01               	movlw	1
   821  0009D0  6E0C               	movwf	___lwmod@counter,c
   822  0009D2  D004               	goto	l712
   823  0009D4  90D8               	bcf	status,0,c
   824  0009D6  360A               	rlcf	___lwmod@divisor,f,c
   825  0009D8  360B               	rlcf	___lwmod@divisor+1,f,c
   826  0009DA  2A0C               	incf	___lwmod@counter,f,c
   827  0009DC                     l712:
   828  0009DC  AE0B               	btfss	___lwmod@divisor+1,7,c
   829  0009DE  D7FA               	goto	l713
   830  0009E0                     u410:
   831  0009E0  500A               	movf	___lwmod@divisor,w,c
   832  0009E2  5C08               	subwf	___lwmod@dividend,w,c
   833  0009E4  500B               	movf	___lwmod@divisor+1,w,c
   834  0009E6  5809               	subwfb	___lwmod@dividend+1,w,c
   835  0009E8  A0D8               	btfss	status,0,c
   836  0009EA  D004               	goto	l716
   837  0009EC  500A               	movf	___lwmod@divisor,w,c
   838  0009EE  5E08               	subwf	___lwmod@dividend,f,c
   839  0009F0  500B               	movf	___lwmod@divisor+1,w,c
   840  0009F2  5A09               	subwfb	___lwmod@dividend+1,f,c
   841  0009F4                     l716:
   842  0009F4  90D8               	bcf	status,0,c
   843  0009F6  320B               	rrcf	___lwmod@divisor+1,f,c
   844  0009F8  320A               	rrcf	___lwmod@divisor,f,c
   845  0009FA  2E0C               	decfsz	___lwmod@counter,f,c
   846  0009FC  D7F1               	goto	u410
   847  0009FE                     l717:
   848  0009FE  C008  F008         	movff	___lwmod@dividend,?___lwmod
   849  000A02  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
   850  000A06  0012               	return		;funcret
   851  000A08                     __end_of___lwmod:
   852                           	opt stack 0
   853                           tblptru	equ	0xFF8
   854                           tblptrh	equ	0xFF7
   855                           tblptrl	equ	0xFF6
   856                           tablat	equ	0xFF5
   857                           prodh	equ	0xFF4
   858                           prodl	equ	0xFF3
   859                           wreg	equ	0xFE8
   860                           indf2	equ	0xFDF
   861                           postinc2	equ	0xFDE
   862                           postdec2	equ	0xFDD
   863                           fsr2h	equ	0xFDA
   864                           fsr2l	equ	0xFD9
   865                           status	equ	0xFD8
   866                           
   867 ;; *************** function ___lwdiv *****************
   868 ;; Defined at:
   869 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  dividend        2    0[COMRAM] unsigned int 
   872 ;;  divisor         2    2[COMRAM] unsigned int 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  quotient        2    4[COMRAM] unsigned int 
   875 ;;  counter         1    6[COMRAM] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  2    0[COMRAM] unsigned int 
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   885 ;;      Params:         4       0       0       0       0       0       0
   886 ;;      Locals:         3       0       0       0       0       0       0
   887 ;;      Temps:          0       0       0       0       0       0       0
   888 ;;      Totals:         7       0       0       0       0       0       0
   889 ;;Total ram usage:        7 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; This function calls:
   892 ;;		Nothing
   893 ;; This function is called by:
   894 ;;		_sprintf
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text3
   899  000922                     __ptext3:
   900                           	opt stack 0
   901  000922                     ___lwdiv:
   902                           	opt stack 29
   903                           
   904                           ;incstack = 0
   905  000922  0E00               	movlw	0
   906  000924  6E06               	movwf	___lwdiv@quotient+1,c
   907  000926  0E00               	movlw	0
   908  000928  6E05               	movwf	___lwdiv@quotient,c
   909  00092A  5003               	movf	___lwdiv@divisor,w,c
   910  00092C  1004               	iorwf	___lwdiv@divisor+1,w,c
   911  00092E  B4D8               	btfsc	status,2,c
   912  000930  D01C               	goto	l707
   913  000932  0E01               	movlw	1
   914  000934  6E07               	movwf	___lwdiv@counter,c
   915  000936  D004               	goto	l702
   916  000938  90D8               	bcf	status,0,c
   917  00093A  3603               	rlcf	___lwdiv@divisor,f,c
   918  00093C  3604               	rlcf	___lwdiv@divisor+1,f,c
   919  00093E  2A07               	incf	___lwdiv@counter,f,c
   920  000940                     l702:
   921  000940  AE04               	btfss	___lwdiv@divisor+1,7,c
   922  000942  D7FA               	goto	l703
   923  000944                     u380:
   924  000944  90D8               	bcf	status,0,c
   925  000946  3605               	rlcf	___lwdiv@quotient,f,c
   926  000948  3606               	rlcf	___lwdiv@quotient+1,f,c
   927  00094A  5003               	movf	___lwdiv@divisor,w,c
   928  00094C  5C01               	subwf	___lwdiv@dividend,w,c
   929  00094E  5004               	movf	___lwdiv@divisor+1,w,c
   930  000950  5802               	subwfb	___lwdiv@dividend+1,w,c
   931  000952  A0D8               	btfss	status,0,c
   932  000954  D005               	goto	l706
   933  000956  5003               	movf	___lwdiv@divisor,w,c
   934  000958  5E01               	subwf	___lwdiv@dividend,f,c
   935  00095A  5004               	movf	___lwdiv@divisor+1,w,c
   936  00095C  5A02               	subwfb	___lwdiv@dividend+1,f,c
   937  00095E  8005               	bsf	___lwdiv@quotient,0,c
   938  000960                     l706:
   939  000960  90D8               	bcf	status,0,c
   940  000962  3204               	rrcf	___lwdiv@divisor+1,f,c
   941  000964  3203               	rrcf	___lwdiv@divisor,f,c
   942  000966  2E07               	decfsz	___lwdiv@counter,f,c
   943  000968  D7ED               	goto	u380
   944  00096A                     l707:
   945  00096A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
   946  00096E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
   947  000972  0012               	return		;funcret
   948  000974                     __end_of___lwdiv:
   949                           	opt stack 0
   950                           tblptru	equ	0xFF8
   951                           tblptrh	equ	0xFF7
   952                           tblptrl	equ	0xFF6
   953                           tablat	equ	0xFF5
   954                           prodh	equ	0xFF4
   955                           prodl	equ	0xFF3
   956                           wreg	equ	0xFE8
   957                           indf2	equ	0xFDF
   958                           postinc2	equ	0xFDE
   959                           postdec2	equ	0xFDD
   960                           fsr2h	equ	0xFDA
   961                           fsr2l	equ	0xFD9
   962                           status	equ	0xFD8
   963                           
   964 ;; *************** function _putrsXLCD *****************
   965 ;; Defined at:
   966 ;;		line 16 in file "putrxlcd.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  buffer          2    1[COMRAM] PTR const unsigned char 
   969 ;;		 -> main@buffer(10), 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;		None
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   981 ;;      Params:         2       0       0       0       0       0       0
   982 ;;      Locals:         0       0       0       0       0       0       0
   983 ;;      Temps:          0       0       0       0       0       0       0
   984 ;;      Totals:         2       0       0       0       0       0       0
   985 ;;Total ram usage:        2 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; Hardware stack levels required when called:    2
   988 ;; This function calls:
   989 ;;		_BusyXLCD
   990 ;;		_WriteDataXLCD
   991 ;; This function is called by:
   992 ;;		_main
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text4
   997  000ABE                     __ptext4:
   998                           	opt stack 0
   999  000ABE                     _putrsXLCD:
  1000                           	opt stack 28
  1001                           
  1002                           ;putrxlcd.c: 18: while(*buffer)
  1003                           
  1004                           ;incstack = 0
  1005  000ABE  D00E               	goto	l128
  1006  000AC0                     
  1007                           ;putrxlcd.c: 19: {
  1008                           ;putrxlcd.c: 20: while(BusyXLCD());
  1009  000AC0  EC42  F005         	call	_BusyXLCD	;wreg free
  1010  000AC4  0900               	iorlw	0
  1011  000AC6  A4D8               	btfss	status,2,c
  1012  000AC8  D7FB               	goto	l129
  1013                           
  1014                           ;putrxlcd.c: 21: WriteDataXLCD(*buffer);
  1015  000ACA  C002  FFD9         	movff	putrsXLCD@buffer,fsr2l
  1016  000ACE  C003  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
  1017  000AD2  50DF               	movf	indf2,w,c
  1018  000AD4  EC04  F005         	call	_WriteDataXLCD
  1019                           
  1020                           ;putrxlcd.c: 22: buffer++;
  1021  000AD8  4A02               	infsnz	putrsXLCD@buffer,f,c
  1022  000ADA  2A03               	incf	putrsXLCD@buffer+1,f,c
  1023  000ADC                     l128:
  1024  000ADC  C002  FFD9         	movff	putrsXLCD@buffer,fsr2l
  1025  000AE0  C003  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
  1026  000AE4  50DF               	movf	indf2,w,c
  1027  000AE6  B4D8               	btfsc	status,2,c
  1028  000AE8  0012               	return	
  1029  000AEA  D7EA               	goto	l129
  1030  000AEC                     __end_of_putrsXLCD:
  1031                           	opt stack 0
  1032                           tblptru	equ	0xFF8
  1033                           tblptrh	equ	0xFF7
  1034                           tblptrl	equ	0xFF6
  1035                           tablat	equ	0xFF5
  1036                           prodh	equ	0xFF4
  1037                           prodl	equ	0xFF3
  1038                           wreg	equ	0xFE8
  1039                           indf2	equ	0xFDF
  1040                           postinc2	equ	0xFDE
  1041                           postdec2	equ	0xFDD
  1042                           fsr2h	equ	0xFDA
  1043                           fsr2l	equ	0xFD9
  1044                           status	equ	0xFD8
  1045                           
  1046 ;; *************** function _WriteDataXLCD *****************
  1047 ;; Defined at:
  1048 ;;		line 16 in file "writdata.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  data            1    wreg     unsigned char 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;  data            1    0[COMRAM] unsigned char 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1062 ;;      Params:         0       0       0       0       0       0       0
  1063 ;;      Locals:         1       0       0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0
  1065 ;;      Totals:         1       0       0       0       0       0       0
  1066 ;;Total ram usage:        1 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    1
  1069 ;; This function calls:
  1070 ;;		_DelayFor18TCY
  1071 ;; This function is called by:
  1072 ;;		_putrsXLCD
  1073 ;;		_putsXLCD
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text5
  1078  000A08                     __ptext5:
  1079                           	opt stack 0
  1080  000A08                     _WriteDataXLCD:
  1081                           	opt stack 28
  1082                           
  1083                           ;incstack = 0
  1084                           ;WriteDataXLCD@data stored from wreg
  1085  000A08  6E01               	movwf	WriteDataXLCD@data,c
  1086                           
  1087                           ;writdata.c: 35: TRISB &= 0xf0;
  1088  000A0A  0EF0               	movlw	240
  1089  000A0C  1693               	andwf	3987,f,c	;volatile
  1090                           
  1091                           ;writdata.c: 36: PORTB &= 0xf0;
  1092  000A0E  0EF0               	movlw	240
  1093  000A10  1681               	andwf	3969,f,c	;volatile
  1094                           
  1095                           ;writdata.c: 37: PORTB |= ((data>>4)&0x0f);
  1096  000A12  3801               	swapf	WriteDataXLCD@data,w,c
  1097  000A14  0B0F               	andlw	15
  1098  000A16  0B0F               	andlw	15
  1099  000A18  1281               	iorwf	3969,f,c	;volatile
  1100                           
  1101                           ;writdata.c: 39: LATAbits.LATA3 = 1;
  1102  000A1A  8689               	bsf	3977,3,c	;volatile
  1103                           
  1104                           ;writdata.c: 40: LATAbits.LATA2 = 0;
  1105  000A1C  9489               	bcf	3977,2,c	;volatile
  1106                           
  1107                           ;writdata.c: 41: DelayFor18TCY();
  1108  000A1E  ECAA  F005         	call	_DelayFor18TCY	;wreg free
  1109                           
  1110                           ;writdata.c: 42: LATAbits.LATA1 = 1;
  1111  000A22  8289               	bsf	3977,1,c	;volatile
  1112                           
  1113                           ;writdata.c: 43: DelayFor18TCY();
  1114  000A24  ECAA  F005         	call	_DelayFor18TCY	;wreg free
  1115                           
  1116                           ;writdata.c: 44: LATAbits.LATA1 = 0;
  1117  000A28  9289               	bcf	3977,1,c	;volatile
  1118                           
  1119                           ;writdata.c: 49: PORTB &= 0xf0;
  1120  000A2A  0EF0               	movlw	240
  1121  000A2C  1681               	andwf	3969,f,c	;volatile
  1122                           
  1123                           ;writdata.c: 50: PORTB |= (data&0x0f);
  1124  000A2E  5001               	movf	WriteDataXLCD@data,w,c
  1125  000A30  0B0F               	andlw	15
  1126  000A32  1281               	iorwf	3969,f,c	;volatile
  1127                           
  1128                           ;writdata.c: 52: DelayFor18TCY();
  1129  000A34  ECAA  F005         	call	_DelayFor18TCY	;wreg free
  1130                           
  1131                           ;writdata.c: 53: LATAbits.LATA1 = 1;
  1132  000A38  8289               	bsf	3977,1,c	;volatile
  1133                           
  1134                           ;writdata.c: 54: DelayFor18TCY();
  1135  000A3A  ECAA  F005         	call	_DelayFor18TCY	;wreg free
  1136                           
  1137                           ;writdata.c: 55: LATAbits.LATA1 = 0;
  1138  000A3E  9289               	bcf	3977,1,c	;volatile
  1139                           
  1140                           ;writdata.c: 59: TRISB |= 0x0f;
  1141  000A40  0E0F               	movlw	15
  1142  000A42  1293               	iorwf	3987,f,c	;volatile
  1143  000A44  0012               	return	
  1144  000A46                     __end_of_WriteDataXLCD:
  1145                           	opt stack 0
  1146                           tblptru	equ	0xFF8
  1147                           tblptrh	equ	0xFF7
  1148                           tblptrl	equ	0xFF6
  1149                           tablat	equ	0xFF5
  1150                           prodh	equ	0xFF4
  1151                           prodl	equ	0xFF3
  1152                           wreg	equ	0xFE8
  1153                           indf2	equ	0xFDF
  1154                           postinc2	equ	0xFDE
  1155                           postdec2	equ	0xFDD
  1156                           fsr2h	equ	0xFDA
  1157                           fsr2l	equ	0xFD9
  1158                           status	equ	0xFD8
  1159                           
  1160 ;; *************** function _init_XLCD *****************
  1161 ;; Defined at:
  1162 ;;		line 67 in file "main.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;		None
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      void 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1176 ;;      Params:         0       0       0       0       0       0       0
  1177 ;;      Locals:         0       0       0       0       0       0       0
  1178 ;;      Temps:          0       0       0       0       0       0       0
  1179 ;;      Totals:         0       0       0       0       0       0       0
  1180 ;;Total ram usage:        0 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; Hardware stack levels required when called:    3
  1183 ;; This function calls:
  1184 ;;		_BusyXLCD
  1185 ;;		_OpenXLCD
  1186 ;;		_WriteCmdXLCD
  1187 ;; This function is called by:
  1188 ;;		_main
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text6
  1193  000AEC                     __ptext6:
  1194                           	opt stack 0
  1195  000AEC                     _init_XLCD:
  1196                           	opt stack 27
  1197                           
  1198                           ;main.c: 69: OpenXLCD(0b00101100&0b00111000);
  1199                           
  1200                           ;incstack = 0
  1201  000AEC  0E28               	movlw	40
  1202  000AEE  EC10  F004         	call	_OpenXLCD
  1203  000AF2  EC42  F005         	call	_BusyXLCD	;wreg free
  1204  000AF6  0900               	iorlw	0
  1205  000AF8  A4D8               	btfss	status,2,c
  1206  000AFA  D7FB               	goto	l66
  1207                           
  1208                           ;main.c: 73: WriteCmdXLCD(0x06);
  1209  000AFC  0E06               	movlw	6
  1210  000AFE  EC23  F005         	call	_WriteCmdXLCD
  1211                           
  1212                           ;main.c: 74: WriteCmdXLCD(0x0C);
  1213  000B02  0E0C               	movlw	12
  1214  000B04  EC23  F005         	call	_WriteCmdXLCD
  1215  000B08  0012               	return		;funcret
  1216  000B0A                     __end_of_init_XLCD:
  1217                           	opt stack 0
  1218                           tblptru	equ	0xFF8
  1219                           tblptrh	equ	0xFF7
  1220                           tblptrl	equ	0xFF6
  1221                           tablat	equ	0xFF5
  1222                           prodh	equ	0xFF4
  1223                           prodl	equ	0xFF3
  1224                           wreg	equ	0xFE8
  1225                           indf2	equ	0xFDF
  1226                           postinc2	equ	0xFDE
  1227                           postdec2	equ	0xFDD
  1228                           fsr2h	equ	0xFDA
  1229                           fsr2l	equ	0xFD9
  1230                           status	equ	0xFD8
  1231                           
  1232 ;; *************** function _OpenXLCD *****************
  1233 ;; Defined at:
  1234 ;;		line 19 in file "openxlcd.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  lcdtype         1    wreg     unsigned char 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  lcdtype         1    4[COMRAM] unsigned char 
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1248 ;;      Params:         0       0       0       0       0       0       0
  1249 ;;      Locals:         1       0       0       0       0       0       0
  1250 ;;      Temps:          0       0       0       0       0       0       0
  1251 ;;      Totals:         1       0       0       0       0       0       0
  1252 ;;Total ram usage:        1 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    2
  1255 ;; This function calls:
  1256 ;;		_BusyXLCD
  1257 ;;		_Delay10KTCYx
  1258 ;;		_DelayPORXLCD
  1259 ;;		_SetDDRamAddr
  1260 ;;		_WriteCmdXLCD
  1261 ;; This function is called by:
  1262 ;;		_init_XLCD
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text7
  1267  000820                     __ptext7:
  1268                           	opt stack 0
  1269  000820                     _OpenXLCD:
  1270                           	opt stack 27
  1271                           
  1272                           ;incstack = 0
  1273                           ;OpenXLCD@lcdtype stored from wreg
  1274  000820  6E05               	movwf	OpenXLCD@lcdtype,c
  1275                           
  1276                           ;openxlcd.c: 31: PORTB &= 0xf0;
  1277  000822  0EF0               	movlw	240
  1278  000824  1681               	andwf	3969,f,c	;volatile
  1279                           
  1280                           ;openxlcd.c: 32: TRISB &= 0xF0;
  1281  000826  0EF0               	movlw	240
  1282  000828  1693               	andwf	3987,f,c	;volatile
  1283                           
  1284                           ;openxlcd.c: 35: TRISAbits.TRISA2 = 0;
  1285  00082A  9492               	bcf	3986,2,c	;volatile
  1286                           
  1287                           ;openxlcd.c: 36: TRISAbits.TRISA3 = 0;
  1288  00082C  9692               	bcf	3986,3,c	;volatile
  1289                           
  1290                           ;openxlcd.c: 37: TRISAbits.TRISA1 = 0;
  1291  00082E  9292               	bcf	3986,1,c	;volatile
  1292                           
  1293                           ;openxlcd.c: 38: LATAbits.LATA2 = 0;
  1294  000830  9489               	bcf	3977,2,c	;volatile
  1295                           
  1296                           ;openxlcd.c: 39: LATAbits.LATA3 = 0;
  1297  000832  9689               	bcf	3977,3,c	;volatile
  1298                           
  1299                           ;openxlcd.c: 40: LATAbits.LATA1 = 0;
  1300  000834  9289               	bcf	3977,1,c	;volatile
  1301                           
  1302                           ;openxlcd.c: 43: DelayPORXLCD();
  1303  000836  EC90  F005         	call	_DelayPORXLCD	;wreg free
  1304                           
  1305                           ;openxlcd.c: 45: WriteCmdXLCD(0x30);
  1306  00083A  0E30               	movlw	48
  1307  00083C  EC23  F005         	call	_WriteCmdXLCD
  1308                           
  1309                           ;openxlcd.c: 46: Delay10KTCYx(0x05);
  1310  000840  0E05               	movlw	5
  1311  000842  EC85  F005         	call	_Delay10KTCYx
  1312                           
  1313                           ;openxlcd.c: 48: WriteCmdXLCD(0x30);
  1314  000846  0E30               	movlw	48
  1315  000848  EC23  F005         	call	_WriteCmdXLCD
  1316                           
  1317                           ;openxlcd.c: 49: Delay10KTCYx(0x01);
  1318  00084C  0E01               	movlw	1
  1319  00084E  EC85  F005         	call	_Delay10KTCYx
  1320                           
  1321                           ;openxlcd.c: 52: WriteCmdXLCD(0x32);
  1322  000852  0E32               	movlw	50
  1323  000854  EC23  F005         	call	_WriteCmdXLCD
  1324  000858  EC42  F005         	call	_BusyXLCD	;wreg free
  1325  00085C  0900               	iorlw	0
  1326  00085E  A4D8               	btfss	status,2,c
  1327  000860  D7FB               	goto	l101
  1328  000862                     u30:
  1329                           
  1330                           ;openxlcd.c: 58: while(BusyXLCD());
  1331  000862  EC42  F005         	call	_BusyXLCD	;wreg free
  1332  000866  0900               	iorlw	0
  1333  000868  A4D8               	btfss	status,2,c
  1334  00086A  D7FB               	goto	u30
  1335                           
  1336                           ;openxlcd.c: 59: WriteCmdXLCD(lcdtype);
  1337  00086C  5005               	movf	OpenXLCD@lcdtype,w,c
  1338  00086E  EC23  F005         	call	_WriteCmdXLCD
  1339  000872  EC42  F005         	call	_BusyXLCD	;wreg free
  1340  000876  0900               	iorlw	0
  1341  000878  A4D8               	btfss	status,2,c
  1342  00087A  D7FB               	goto	l107
  1343                           
  1344                           ;openxlcd.c: 63: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  1345  00087C  0E08               	movlw	8
  1346  00087E  EC23  F005         	call	_WriteCmdXLCD
  1347  000882  EC42  F005         	call	_BusyXLCD	;wreg free
  1348  000886  0900               	iorlw	0
  1349  000888  A4D8               	btfss	status,2,c
  1350  00088A  D7FB               	goto	l110
  1351                           
  1352                           ;openxlcd.c: 65: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  1353  00088C  0E0F               	movlw	15
  1354  00088E  EC23  F005         	call	_WriteCmdXLCD
  1355  000892  EC42  F005         	call	_BusyXLCD	;wreg free
  1356  000896  0900               	iorlw	0
  1357  000898  A4D8               	btfss	status,2,c
  1358  00089A  D7FB               	goto	l113
  1359                           
  1360                           ;openxlcd.c: 69: WriteCmdXLCD(0x01);
  1361  00089C  0E01               	movlw	1
  1362  00089E  EC23  F005         	call	_WriteCmdXLCD
  1363  0008A2  EC42  F005         	call	_BusyXLCD	;wreg free
  1364  0008A6  0900               	iorlw	0
  1365  0008A8  A4D8               	btfss	status,2,c
  1366  0008AA  D7FB               	goto	l116
  1367                           
  1368                           ;openxlcd.c: 73: WriteCmdXLCD(0b00000100);
  1369  0008AC  0E04               	movlw	4
  1370  0008AE  EC23  F005         	call	_WriteCmdXLCD
  1371  0008B2  EC42  F005         	call	_BusyXLCD	;wreg free
  1372  0008B6  0900               	iorlw	0
  1373  0008B8  A4D8               	btfss	status,2,c
  1374  0008BA  D7FB               	goto	l119
  1375                           
  1376                           ;openxlcd.c: 77: SetDDRamAddr(0x80);
  1377  0008BC  0E80               	movlw	128
  1378  0008BE  ECBA  F004         	call	_SetDDRamAddr
  1379  0008C2  0012               	return	
  1380  0008C4                     __end_of_OpenXLCD:
  1381                           	opt stack 0
  1382                           tblptru	equ	0xFF8
  1383                           tblptrh	equ	0xFF7
  1384                           tblptrl	equ	0xFF6
  1385                           tablat	equ	0xFF5
  1386                           prodh	equ	0xFF4
  1387                           prodl	equ	0xFF3
  1388                           wreg	equ	0xFE8
  1389                           indf2	equ	0xFDF
  1390                           postinc2	equ	0xFDE
  1391                           postdec2	equ	0xFDD
  1392                           fsr2h	equ	0xFDA
  1393                           fsr2l	equ	0xFD9
  1394                           status	equ	0xFD8
  1395                           
  1396 ;; *************** function _WriteCmdXLCD *****************
  1397 ;; Defined at:
  1398 ;;		line 13 in file "wcmdxlcd.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  cmd             1    wreg     unsigned char 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  cmd             1    0[COMRAM] unsigned char 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1412 ;;      Params:         0       0       0       0       0       0       0
  1413 ;;      Locals:         1       0       0       0       0       0       0
  1414 ;;      Temps:          0       0       0       0       0       0       0
  1415 ;;      Totals:         1       0       0       0       0       0       0
  1416 ;;Total ram usage:        1 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; Hardware stack levels required when called:    1
  1419 ;; This function calls:
  1420 ;;		_DelayFor18TCY
  1421 ;; This function is called by:
  1422 ;;		_init_XLCD
  1423 ;;		_OpenXLCD
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text8
  1428  000A46                     __ptext8:
  1429                           	opt stack 0
  1430  000A46                     _WriteCmdXLCD:
  1431                           	opt stack 28
  1432                           
  1433                           ;incstack = 0
  1434                           ;WriteCmdXLCD@cmd stored from wreg
  1435  000A46  6E01               	movwf	WriteCmdXLCD@cmd,c
  1436                           
  1437                           ;wcmdxlcd.c: 32: TRISB &= 0xf0;
  1438  000A48  0EF0               	movlw	240
  1439  000A4A  1693               	andwf	3987,f,c	;volatile
  1440                           
  1441                           ;wcmdxlcd.c: 33: PORTB &= 0xf0;
  1442  000A4C  0EF0               	movlw	240
  1443  000A4E  1681               	andwf	3969,f,c	;volatile
  1444                           
  1445                           ;wcmdxlcd.c: 34: PORTB |= (cmd>>4)&0x0f;
  1446  000A50  3801               	swapf	WriteCmdXLCD@cmd,w,c
  1447  000A52  0B0F               	andlw	15
  1448  000A54  0B0F               	andlw	15
  1449  000A56  1281               	iorwf	3969,f,c	;volatile
  1450                           
  1451                           ;wcmdxlcd.c: 36: LATAbits.LATA2 = 0;
  1452  000A58  9489               	bcf	3977,2,c	;volatile
  1453                           
  1454                           ;wcmdxlcd.c: 37: LATAbits.LATA3 = 0;
  1455  000A5A  9689               	bcf	3977,3,c	;volatile
  1456                           
  1457                           ;wcmdxlcd.c: 38: DelayFor18TCY();
  1458  000A5C  ECAA  F005         	call	_DelayFor18TCY	;wreg free
  1459                           
  1460                           ;wcmdxlcd.c: 39: LATAbits.LATA1 = 1;
  1461  000A60  8289               	bsf	3977,1,c	;volatile
  1462                           
  1463                           ;wcmdxlcd.c: 40: DelayFor18TCY();
  1464  000A62  ECAA  F005         	call	_DelayFor18TCY	;wreg free
  1465                           
  1466                           ;wcmdxlcd.c: 41: LATAbits.LATA1 = 0;
  1467  000A66  9289               	bcf	3977,1,c	;volatile
  1468                           
  1469                           ;wcmdxlcd.c: 46: PORTB &= 0xf0;
  1470  000A68  0EF0               	movlw	240
  1471  000A6A  1681               	andwf	3969,f,c	;volatile
  1472                           
  1473                           ;wcmdxlcd.c: 47: PORTB |= cmd&0x0f;
  1474  000A6C  5001               	movf	WriteCmdXLCD@cmd,w,c
  1475  000A6E  0B0F               	andlw	15
  1476  000A70  1281               	iorwf	3969,f,c	;volatile
  1477                           
  1478                           ;wcmdxlcd.c: 49: DelayFor18TCY();
  1479  000A72  ECAA  F005         	call	_DelayFor18TCY	;wreg free
  1480                           
  1481                           ;wcmdxlcd.c: 50: LATAbits.LATA1 = 1;
  1482  000A76  8289               	bsf	3977,1,c	;volatile
  1483                           
  1484                           ;wcmdxlcd.c: 51: DelayFor18TCY();
  1485  000A78  ECAA  F005         	call	_DelayFor18TCY	;wreg free
  1486                           
  1487                           ;wcmdxlcd.c: 52: LATAbits.LATA1 = 0;
  1488  000A7C  9289               	bcf	3977,1,c	;volatile
  1489                           
  1490                           ;wcmdxlcd.c: 56: TRISB |= 0x0f;
  1491  000A7E  0E0F               	movlw	15
  1492  000A80  1293               	iorwf	3987,f,c	;volatile
  1493  000A82  0012               	return	
  1494  000A84                     __end_of_WriteCmdXLCD:
  1495                           	opt stack 0
  1496                           tblptru	equ	0xFF8
  1497                           tblptrh	equ	0xFF7
  1498                           tblptrl	equ	0xFF6
  1499                           tablat	equ	0xFF5
  1500                           prodh	equ	0xFF4
  1501                           prodl	equ	0xFF3
  1502                           wreg	equ	0xFE8
  1503                           indf2	equ	0xFDF
  1504                           postinc2	equ	0xFDE
  1505                           postdec2	equ	0xFDD
  1506                           fsr2h	equ	0xFDA
  1507                           fsr2l	equ	0xFD9
  1508                           status	equ	0xFD8
  1509                           
  1510 ;; *************** function _SetDDRamAddr *****************
  1511 ;; Defined at:
  1512 ;;		line 13 in file "setddram.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  DDaddr          1    wreg     unsigned char 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  DDaddr          1    3[COMRAM] unsigned char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1526 ;;      Params:         0       0       0       0       0       0       0
  1527 ;;      Locals:         1       0       0       0       0       0       0
  1528 ;;      Temps:          3       0       0       0       0       0       0
  1529 ;;      Totals:         4       0       0       0       0       0       0
  1530 ;;Total ram usage:        4 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    1
  1533 ;; This function calls:
  1534 ;;		_DelayFor18TCY
  1535 ;; This function is called by:
  1536 ;;		_OpenXLCD
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text9
  1541  000974                     __ptext9:
  1542                           	opt stack 0
  1543  000974                     _SetDDRamAddr:
  1544                           	opt stack 27
  1545                           
  1546                           ;incstack = 0
  1547                           ;SetDDRamAddr@DDaddr stored from wreg
  1548  000974  6E04               	movwf	SetDDRamAddr@DDaddr,c
  1549                           
  1550                           ;setddram.c: 32: TRISB &= 0xf0;
  1551  000976  0EF0               	movlw	240
  1552  000978  1693               	andwf	3987,f,c	;volatile
  1553                           
  1554                           ;setddram.c: 33: PORTB &= 0xf0;
  1555  00097A  0EF0               	movlw	240
  1556  00097C  1681               	andwf	3969,f,c	;volatile
  1557                           
  1558                           ;setddram.c: 34: PORTB |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  1559  00097E  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1560  000980  6E01               	movwf	??_SetDDRamAddr& (0+255),c
  1561  000982  6A02               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  1562  000984  8E01               	bsf	??_SetDDRamAddr,7,c
  1563  000986  0E04               	movlw	4
  1564  000988  6E03               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  1565  00098A                     u25:
  1566  00098A  3402               	rlcf	??_SetDDRamAddr+1,w,c
  1567  00098C  3202               	rrcf	??_SetDDRamAddr+1,f,c
  1568  00098E  3201               	rrcf	??_SetDDRamAddr,f,c
  1569  000990  2E03               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  1570  000992  D7FB               	goto	u25
  1571  000994  5001               	movf	??_SetDDRamAddr,w,c
  1572  000996  0B0F               	andlw	15
  1573  000998  1281               	iorwf	3969,f,c	;volatile
  1574                           
  1575                           ;setddram.c: 36: LATAbits.LATA2 = 0;
  1576  00099A  9489               	bcf	3977,2,c	;volatile
  1577                           
  1578                           ;setddram.c: 37: LATAbits.LATA3 = 0;
  1579  00099C  9689               	bcf	3977,3,c	;volatile
  1580                           
  1581                           ;setddram.c: 38: DelayFor18TCY();
  1582  00099E  ECAA  F005         	call	_DelayFor18TCY	;wreg free
  1583                           
  1584                           ;setddram.c: 39: LATAbits.LATA1 = 1;
  1585  0009A2  8289               	bsf	3977,1,c	;volatile
  1586                           
  1587                           ;setddram.c: 40: DelayFor18TCY();
  1588  0009A4  ECAA  F005         	call	_DelayFor18TCY	;wreg free
  1589                           
  1590                           ;setddram.c: 41: LATAbits.LATA1 = 0;
  1591  0009A8  9289               	bcf	3977,1,c	;volatile
  1592                           
  1593                           ;setddram.c: 46: PORTB &= 0xf0;
  1594  0009AA  0EF0               	movlw	240
  1595  0009AC  1681               	andwf	3969,f,c	;volatile
  1596                           
  1597                           ;setddram.c: 47: PORTB |= (DDaddr&0x0f);
  1598  0009AE  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1599  0009B0  0B0F               	andlw	15
  1600  0009B2  1281               	iorwf	3969,f,c	;volatile
  1601                           
  1602                           ;setddram.c: 49: DelayFor18TCY();
  1603  0009B4  ECAA  F005         	call	_DelayFor18TCY	;wreg free
  1604                           
  1605                           ;setddram.c: 50: LATAbits.LATA1 = 1;
  1606  0009B8  8289               	bsf	3977,1,c	;volatile
  1607                           
  1608                           ;setddram.c: 51: DelayFor18TCY();
  1609  0009BA  ECAA  F005         	call	_DelayFor18TCY	;wreg free
  1610                           
  1611                           ;setddram.c: 52: LATAbits.LATA1 = 0;
  1612  0009BE  9289               	bcf	3977,1,c	;volatile
  1613                           
  1614                           ;setddram.c: 56: TRISB |= 0x0f;
  1615  0009C0  0E0F               	movlw	15
  1616  0009C2  1293               	iorwf	3987,f,c	;volatile
  1617  0009C4  0012               	return	
  1618  0009C6                     __end_of_SetDDRamAddr:
  1619                           	opt stack 0
  1620                           tblptru	equ	0xFF8
  1621                           tblptrh	equ	0xFF7
  1622                           tblptrl	equ	0xFF6
  1623                           tablat	equ	0xFF5
  1624                           prodh	equ	0xFF4
  1625                           prodl	equ	0xFF3
  1626                           wreg	equ	0xFE8
  1627                           indf2	equ	0xFDF
  1628                           postinc2	equ	0xFDE
  1629                           postdec2	equ	0xFDD
  1630                           fsr2h	equ	0xFDA
  1631                           fsr2l	equ	0xFD9
  1632                           status	equ	0xFD8
  1633                           
  1634 ;; *************** function _DelayPORXLCD *****************
  1635 ;; Defined at:
  1636 ;;		line 54 in file "main.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1650 ;;      Params:         0       0       0       0       0       0       0
  1651 ;;      Locals:         0       0       0       0       0       0       0
  1652 ;;      Temps:          1       0       0       0       0       0       0
  1653 ;;      Totals:         1       0       0       0       0       0       0
  1654 ;;Total ram usage:        1 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_OpenXLCD
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text10
  1664  000B20                     __ptext10:
  1665                           	opt stack 0
  1666  000B20                     _DelayPORXLCD:
  1667                           	opt stack 28
  1668                           
  1669                           ;main.c: 56: _delay((unsigned long)((15)*(4000000/4000.0)));
  1670                           
  1671                           ;incstack = 0
  1672  000B20  0E14               	movlw	20
  1673  000B22  6E01               	movwf	??_DelayPORXLCD& (0+255),c
  1674  000B24  0E7A               	movlw	122
  1675  000B26                     u607:
  1676  000B26  2EE8               	decfsz	wreg,f,c
  1677  000B28  D7FE               	bra	u607
  1678  000B2A  2E01               	decfsz	??_DelayPORXLCD& (0+255),f,c
  1679  000B2C  D7FC               	bra	u607
  1680  000B2E  0012               	return		;funcret
  1681  000B30                     __end_of_DelayPORXLCD:
  1682                           	opt stack 0
  1683                           tblptru	equ	0xFF8
  1684                           tblptrh	equ	0xFF7
  1685                           tblptrl	equ	0xFF6
  1686                           tablat	equ	0xFF5
  1687                           prodh	equ	0xFF4
  1688                           prodl	equ	0xFF3
  1689                           wreg	equ	0xFE8
  1690                           indf2	equ	0xFDF
  1691                           postinc2	equ	0xFDE
  1692                           postdec2	equ	0xFDD
  1693                           fsr2h	equ	0xFDA
  1694                           fsr2l	equ	0xFD9
  1695                           status	equ	0xFD8
  1696                           
  1697 ;; *************** function _Delay10KTCYx *****************
  1698 ;; Defined at:
  1699 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\pic18\d10ktcyx.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  unit            1    wreg     unsigned char 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  unit            1    1[COMRAM] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1713 ;;      Params:         0       0       0       0       0       0       0
  1714 ;;      Locals:         1       0       0       0       0       0       0
  1715 ;;      Temps:          1       0       0       0       0       0       0
  1716 ;;      Totals:         2       0       0       0       0       0       0
  1717 ;;Total ram usage:        2 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_OpenXLCD
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text11
  1727  000B0A                     __ptext11:
  1728                           	opt stack 0
  1729  000B0A                     _Delay10KTCYx:
  1730                           	opt stack 28
  1731                           
  1732                           ;incstack = 0
  1733                           ;Delay10KTCYx@unit stored from wreg
  1734  000B0A  6E02               	movwf	Delay10KTCYx@unit,c
  1735  000B0C                     l493:
  1736  000B0C  0E0D               	movlw	13
  1737  000B0E  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  1738  000B10  0EFC               	movlw	252
  1739  000B12                     u617:
  1740  000B12  2EE8               	decfsz	wreg,f,c
  1741  000B14  D7FE               	bra	u617
  1742  000B16  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1743  000B18  D7FC               	bra	u617
  1744  000B1A  2E02               	decfsz	Delay10KTCYx@unit,f,c
  1745  000B1C  D7F7               	goto	l493
  1746  000B1E  0012               	return	
  1747  000B20                     __end_of_Delay10KTCYx:
  1748                           	opt stack 0
  1749                           tblptru	equ	0xFF8
  1750                           tblptrh	equ	0xFF7
  1751                           tblptrl	equ	0xFF6
  1752                           tablat	equ	0xFF5
  1753                           prodh	equ	0xFF4
  1754                           prodl	equ	0xFF3
  1755                           wreg	equ	0xFE8
  1756                           indf2	equ	0xFDF
  1757                           postinc2	equ	0xFDE
  1758                           postdec2	equ	0xFDD
  1759                           fsr2h	equ	0xFDA
  1760                           fsr2l	equ	0xFD9
  1761                           status	equ	0xFD8
  1762                           
  1763 ;; *************** function _BusyXLCD *****************
  1764 ;; Defined at:
  1765 ;;		line 11 in file "busyxlcd.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      unsigned char 
  1772 ;; Registers used:
  1773 ;;		wreg, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1779 ;;      Params:         0       0       0       0       0       0       0
  1780 ;;      Locals:         0       0       0       0       0       0       0
  1781 ;;      Temps:          0       0       0       0       0       0       0
  1782 ;;      Totals:         0       0       0       0       0       0       0
  1783 ;;Total ram usage:        0 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:    1
  1786 ;; This function calls:
  1787 ;;		_DelayFor18TCY
  1788 ;; This function is called by:
  1789 ;;		_main
  1790 ;;		_init_XLCD
  1791 ;;		_OpenXLCD
  1792 ;;		_putrsXLCD
  1793 ;;		_putsXLCD
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text12
  1798  000A84                     __ptext12:
  1799                           	opt stack 0
  1800  000A84                     _BusyXLCD:
  1801                           	opt stack 28
  1802                           
  1803                           ;busyxlcd.c: 13: LATAbits.LATA2 = 1;
  1804                           
  1805                           ;incstack = 0
  1806  000A84  8489               	bsf	3977,2,c	;volatile
  1807                           
  1808                           ;busyxlcd.c: 14: LATAbits.LATA3 = 0;
  1809  000A86  9689               	bcf	3977,3,c	;volatile
  1810                           
  1811                           ;busyxlcd.c: 15: DelayFor18TCY();
  1812  000A88  ECAA  F005         	call	_DelayFor18TCY	;wreg free
  1813                           
  1814                           ;busyxlcd.c: 16: LATAbits.LATA1 = 1;
  1815  000A8C  8289               	bsf	3977,1,c	;volatile
  1816                           
  1817                           ;busyxlcd.c: 17: DelayFor18TCY();
  1818  000A8E  ECAA  F005         	call	_DelayFor18TCY	;wreg free
  1819                           
  1820                           ;busyxlcd.c: 35: if(PORTB&0x08)
  1821  000A92  A681               	btfss	3969,3,c	;volatile
  1822  000A94  D00A               	goto	l77
  1823                           
  1824                           ;busyxlcd.c: 37: {
  1825                           ;busyxlcd.c: 38: LATAbits.LATA1 = 0;
  1826  000A96  9289               	bcf	3977,1,c	;volatile
  1827                           
  1828                           ;busyxlcd.c: 39: DelayFor18TCY();
  1829  000A98  ECAA  F005         	call	_DelayFor18TCY	;wreg free
  1830                           
  1831                           ;busyxlcd.c: 40: LATAbits.LATA1 = 1;
  1832  000A9C  8289               	bsf	3977,1,c	;volatile
  1833                           
  1834                           ;busyxlcd.c: 41: DelayFor18TCY();
  1835  000A9E  ECAA  F005         	call	_DelayFor18TCY	;wreg free
  1836                           
  1837                           ;busyxlcd.c: 42: LATAbits.LATA1 = 0;
  1838  000AA2  9289               	bcf	3977,1,c	;volatile
  1839                           
  1840                           ;busyxlcd.c: 43: LATAbits.LATA2 = 0;
  1841  000AA4  9489               	bcf	3977,2,c	;volatile
  1842                           
  1843                           ;busyxlcd.c: 44: return 1;
  1844  000AA6  0E01               	movlw	1
  1845                           
  1846                           ;busyxlcd.c: 45: }
  1847  000AA8  0012               	return	
  1848  000AAA                     l77:
  1849                           
  1850                           ;busyxlcd.c: 46: else
  1851                           ;busyxlcd.c: 47: {
  1852                           ;busyxlcd.c: 48: LATAbits.LATA1 = 0;
  1853  000AAA  9289               	bcf	3977,1,c	;volatile
  1854                           
  1855                           ;busyxlcd.c: 49: DelayFor18TCY();
  1856  000AAC  ECAA  F005         	call	_DelayFor18TCY	;wreg free
  1857                           
  1858                           ;busyxlcd.c: 50: LATAbits.LATA1 = 1;
  1859  000AB0  8289               	bsf	3977,1,c	;volatile
  1860                           
  1861                           ;busyxlcd.c: 51: DelayFor18TCY();
  1862  000AB2  ECAA  F005         	call	_DelayFor18TCY	;wreg free
  1863                           
  1864                           ;busyxlcd.c: 52: LATAbits.LATA1 = 0;
  1865  000AB6  9289               	bcf	3977,1,c	;volatile
  1866                           
  1867                           ;busyxlcd.c: 53: LATAbits.LATA2 = 0;
  1868  000AB8  9489               	bcf	3977,2,c	;volatile
  1869                           
  1870                           ;busyxlcd.c: 54: return 0;
  1871  000ABA  0E00               	movlw	0
  1872  000ABC  0012               	return	
  1873  000ABE                     __end_of_BusyXLCD:
  1874                           	opt stack 0
  1875                           tblptru	equ	0xFF8
  1876                           tblptrh	equ	0xFF7
  1877                           tblptrl	equ	0xFF6
  1878                           tablat	equ	0xFF5
  1879                           prodh	equ	0xFF4
  1880                           prodl	equ	0xFF3
  1881                           wreg	equ	0xFE8
  1882                           indf2	equ	0xFDF
  1883                           postinc2	equ	0xFDE
  1884                           postdec2	equ	0xFDD
  1885                           fsr2h	equ	0xFDA
  1886                           fsr2l	equ	0xFD9
  1887                           status	equ	0xFD8
  1888                           
  1889 ;; *************** function _DelayFor18TCY *****************
  1890 ;; Defined at:
  1891 ;;		line 49 in file "main.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1905 ;;      Params:         0       0       0       0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0
  1908 ;;      Totals:         0       0       0       0       0       0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_BusyXLCD
  1915 ;;		_SetDDRamAddr
  1916 ;;		_WriteCmdXLCD
  1917 ;;		_WriteDataXLCD
  1918 ;;		_ReadAddrXLCD
  1919 ;;		_ReadDataXLCD
  1920 ;;		_SetCGRamAddr
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text13
  1925  000B54                     __ptext13:
  1926                           	opt stack 0
  1927  000B54                     _DelayFor18TCY:
  1928                           	opt stack 28
  1929                           
  1930                           ;incstack = 0
  1931  000B54  0E06               	movlw	6
  1932  000B56                     u627:
  1933  000B56  2EE8               	decfsz	wreg,f,c
  1934  000B58  D7FE               	bra	u627
  1935  000B5A  D000               	nop2	
  1936  000B5C  0012               	return	
  1937  000B5E                     __end_of_DelayFor18TCY:
  1938                           	opt stack 0
  1939                           tblptru	equ	0xFF8
  1940                           tblptrh	equ	0xFF7
  1941                           tblptrl	equ	0xFF6
  1942                           tablat	equ	0xFF5
  1943                           prodh	equ	0xFF4
  1944                           prodl	equ	0xFF3
  1945                           wreg	equ	0xFE8
  1946                           indf2	equ	0xFDF
  1947                           postinc2	equ	0xFDE
  1948                           postdec2	equ	0xFDD
  1949                           fsr2h	equ	0xFDA
  1950                           fsr2l	equ	0xFD9
  1951                           status	equ	0xFD8
  1952                           
  1953 ;; *************** function _ReadADC *****************
  1954 ;; Defined at:
  1955 ;;		line 24 in file "adcread.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  2    0[COMRAM] int 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1969 ;;      Params:         2       0       0       0       0       0       0
  1970 ;;      Locals:         0       0       0       0       0       0       0
  1971 ;;      Temps:          2       0       0       0       0       0       0
  1972 ;;      Totals:         4       0       0       0       0       0       0
  1973 ;;Total ram usage:        4 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_main
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text14
  1983  000B30                     __ptext14:
  1984                           	opt stack 0
  1985  000B30                     _ReadADC:
  1986                           	opt stack 30
  1987                           
  1988                           ;adcread.c: 26: return (((unsigned int)ADRESH)<<8)|(ADRESL);
  1989                           
  1990                           ;incstack = 0
  1991  000B30  50C4               	movf	4036,w,c	;volatile
  1992  000B32  6E03               	movwf	??_ReadADC& (0+255),c
  1993  000B34  50C3               	movf	4035,w,c	;volatile
  1994  000B36  6E01               	movwf	?_ReadADC,c
  1995  000B38  C003  F002         	movff	??_ReadADC,?_ReadADC+1
  1996  000B3C  0012               	return	
  1997  000B3E                     __end_of_ReadADC:
  1998                           	opt stack 0
  1999                           tblptru	equ	0xFF8
  2000                           tblptrh	equ	0xFF7
  2001                           tblptrl	equ	0xFF6
  2002                           tablat	equ	0xFF5
  2003                           prodh	equ	0xFF4
  2004                           prodl	equ	0xFF3
  2005                           wreg	equ	0xFE8
  2006                           indf2	equ	0xFDF
  2007                           postinc2	equ	0xFDE
  2008                           postdec2	equ	0xFDD
  2009                           fsr2h	equ	0xFDA
  2010                           fsr2l	equ	0xFD9
  2011                           status	equ	0xFD8
  2012                           
  2013 ;; *************** function _OpenADC *****************
  2014 ;; Defined at:
  2015 ;;		line 68 in file "adcopen.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  config          1    wreg     unsigned char 
  2018 ;;  config2         1    0[COMRAM] unsigned char 
  2019 ;;  portconfig      1    1[COMRAM] unsigned char 
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  config          1    4[COMRAM] unsigned char 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, status,2, status,0
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2031 ;;      Params:         2       0       0       0       0       0       0
  2032 ;;      Locals:         1       0       0       0       0       0       0
  2033 ;;      Temps:          2       0       0       0       0       0       0
  2034 ;;      Totals:         5       0       0       0       0       0       0
  2035 ;;Total ram usage:        5 bytes
  2036 ;; Hardware stack levels used:    1
  2037 ;; This function calls:
  2038 ;;		Nothing
  2039 ;; This function is called by:
  2040 ;;		_main
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           	psect	text15
  2045  0008C4                     __ptext15:
  2046                           	opt stack 0
  2047  0008C4                     _OpenADC:
  2048                           	opt stack 30
  2049                           
  2050                           ;incstack = 0
  2051                           ;OpenADC@config stored from wreg
  2052  0008C4  6E05               	movwf	OpenADC@config,c
  2053                           
  2054                           ;adcopen.c: 72: ADCON0 = 0;
  2055  0008C6  0E00               	movlw	0
  2056  0008C8  6EC2               	movwf	4034,c	;volatile
  2057                           
  2058                           ;adcopen.c: 73: ADCON2 = 0;
  2059  0008CA  0E00               	movlw	0
  2060  0008CC  6EC0               	movwf	4032,c	;volatile
  2061                           
  2062                           ;adcopen.c: 75: ADCON0 = (config2 >> 1) & 0b00111100;
  2063  0008CE  90D8               	bcf	status,0,c
  2064  0008D0  3001               	rrcf	OpenADC@config2,w,c
  2065  0008D2  0B3C               	andlw	60
  2066  0008D4  6EC2               	movwf	4034,c	;volatile
  2067                           
  2068                           ;adcopen.c: 76: ADCON1 = (portconfig & 0b00001111) |
  2069                           ;adcopen.c: 77: ((config2 << 4) & 0b00110000);
  2070  0008D6  C001  F003         	movff	OpenADC@config2,??_OpenADC
  2071  0008DA  3A03               	swapf	??_OpenADC,f,c
  2072  0008DC  0EF0               	movlw	240
  2073  0008DE  1603               	andwf	??_OpenADC,f,c
  2074  0008E0  0E30               	movlw	48
  2075  0008E2  1603               	andwf	??_OpenADC,f,c
  2076  0008E4  5002               	movf	OpenADC@portconfig,w,c
  2077  0008E6  0B0F               	andlw	15
  2078  0008E8  1003               	iorwf	??_OpenADC,w,c
  2079  0008EA  6EC1               	movwf	4033,c	;volatile
  2080                           
  2081                           ;adcopen.c: 78: ADCON2 = (config & 0b10000000) |
  2082                           ;adcopen.c: 79: ((config >> 4) & 0b00000111) |
  2083                           ;adcopen.c: 80: ((config << 2) & 0b00111000);
  2084  0008EC  C005  F003         	movff	OpenADC@config,??_OpenADC
  2085  0008F0  90D8               	bcf	status,0,c
  2086  0008F2  3603               	rlcf	??_OpenADC,f,c
  2087  0008F4  90D8               	bcf	status,0,c
  2088  0008F6  3603               	rlcf	??_OpenADC,f,c
  2089  0008F8  0E38               	movlw	56
  2090  0008FA  1603               	andwf	??_OpenADC,f,c
  2091  0008FC  C005  F004         	movff	OpenADC@config,??_OpenADC+1
  2092  000900  3A04               	swapf	??_OpenADC+1,f,c
  2093  000902  0E0F               	movlw	15
  2094  000904  1604               	andwf	??_OpenADC+1,f,c
  2095  000906  0E07               	movlw	7
  2096  000908  1604               	andwf	??_OpenADC+1,f,c
  2097  00090A  5005               	movf	OpenADC@config,w,c
  2098  00090C  0B80               	andlw	128
  2099  00090E  1004               	iorwf	??_OpenADC+1,w,c
  2100  000910  1003               	iorwf	??_OpenADC,w,c
  2101  000912  6EC0               	movwf	4032,c	;volatile
  2102                           
  2103                           ;adcopen.c: 82: if( config2 & 0b10000000 )
  2104  000914  AE01               	btfss	OpenADC@config2,7,c
  2105  000916  D003               	goto	l243
  2106                           
  2107                           ;adcopen.c: 83: {
  2108                           ;adcopen.c: 84: PIR1bits.ADIF = 0;
  2109  000918  9C9E               	bcf	3998,6,c	;volatile
  2110                           
  2111                           ;adcopen.c: 85: PIE1bits.ADIE = 1;
  2112  00091A  8C9D               	bsf	3997,6,c	;volatile
  2113                           
  2114                           ;adcopen.c: 86: INTCONbits.PEIE = 1;
  2115  00091C  8CF2               	bsf	intcon,6,c	;volatile
  2116  00091E                     l243:
  2117                           
  2118                           ;adcopen.c: 87: }
  2119                           ;adcopen.c: 88: ADCON0bits.ADON = 1;
  2120  00091E  80C2               	bsf	4034,0,c	;volatile
  2121  000920  0012               	return		;funcret
  2122  000922                     __end_of_OpenADC:
  2123                           	opt stack 0
  2124                           tblptru	equ	0xFF8
  2125                           tblptrh	equ	0xFF7
  2126                           tblptrl	equ	0xFF6
  2127                           tablat	equ	0xFF5
  2128                           prodh	equ	0xFF4
  2129                           prodl	equ	0xFF3
  2130                           intcon	equ	0xFF2
  2131                           wreg	equ	0xFE8
  2132                           indf2	equ	0xFDF
  2133                           postinc2	equ	0xFDE
  2134                           postdec2	equ	0xFDD
  2135                           fsr2h	equ	0xFDA
  2136                           fsr2l	equ	0xFD9
  2137                           status	equ	0xFD8
  2138                           
  2139 ;; *************** function _ConvertADC *****************
  2140 ;; Defined at:
  2141 ;;		line 22 in file "adcconv.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;		None
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;		None
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		None
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2155 ;;      Params:         0       0       0       0       0       0       0
  2156 ;;      Locals:         0       0       0       0       0       0       0
  2157 ;;      Temps:          0       0       0       0       0       0       0
  2158 ;;      Totals:         0       0       0       0       0       0       0
  2159 ;;Total ram usage:        0 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; This function calls:
  2162 ;;		Nothing
  2163 ;; This function is called by:
  2164 ;;		_main
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           	psect	text16
  2169  000B64                     __ptext16:
  2170                           	opt stack 0
  2171  000B64                     _ConvertADC:
  2172                           	opt stack 30
  2173                           
  2174                           ;adcconv.c: 24: ADCON0bits.GO = 1;
  2175                           
  2176                           ;incstack = 0
  2177  000B64  82C2               	bsf	4034,1,c	;volatile
  2178  000B66  0012               	return		;funcret
  2179  000B68                     __end_of_ConvertADC:
  2180                           	opt stack 0
  2181                           tblptru	equ	0xFF8
  2182                           tblptrh	equ	0xFF7
  2183                           tblptrl	equ	0xFF6
  2184                           tablat	equ	0xFF5
  2185                           prodh	equ	0xFF4
  2186                           prodl	equ	0xFF3
  2187                           intcon	equ	0xFF2
  2188                           wreg	equ	0xFE8
  2189                           indf2	equ	0xFDF
  2190                           postinc2	equ	0xFDE
  2191                           postdec2	equ	0xFDD
  2192                           fsr2h	equ	0xFDA
  2193                           fsr2l	equ	0xFD9
  2194                           status	equ	0xFD8
  2195                           
  2196 ;; *************** function _CloseADC *****************
  2197 ;; Defined at:
  2198 ;;		line 23 in file "adcclose.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;		None
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;		None
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		None
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2212 ;;      Params:         0       0       0       0       0       0       0
  2213 ;;      Locals:         0       0       0       0       0       0       0
  2214 ;;      Temps:          0       0       0       0       0       0       0
  2215 ;;      Totals:         0       0       0       0       0       0       0
  2216 ;;Total ram usage:        0 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text17
  2226  000B5E                     __ptext17:
  2227                           	opt stack 0
  2228  000B5E                     _CloseADC:
  2229                           	opt stack 30
  2230                           
  2231                           ;adcclose.c: 25: ADCON0bits.ADON = 0;
  2232                           
  2233                           ;incstack = 0
  2234  000B5E  90C2               	bcf	4034,0,c	;volatile
  2235                           
  2236                           ;adcclose.c: 26: PIE1bits.ADIE = 0;
  2237  000B60  9C9D               	bcf	3997,6,c	;volatile
  2238  000B62  0012               	return		;funcret
  2239  000B64                     __end_of_CloseADC:
  2240                           	opt stack 0
  2241                           tblptru	equ	0xFF8
  2242                           tblptrh	equ	0xFF7
  2243                           tblptrl	equ	0xFF6
  2244                           tablat	equ	0xFF5
  2245                           prodh	equ	0xFF4
  2246                           prodl	equ	0xFF3
  2247                           intcon	equ	0xFF2
  2248                           wreg	equ	0xFE8
  2249                           indf2	equ	0xFDF
  2250                           postinc2	equ	0xFDE
  2251                           postdec2	equ	0xFDD
  2252                           fsr2h	equ	0xFDA
  2253                           fsr2l	equ	0xFD9
  2254                           status	equ	0xFD8
  2255                           
  2256 ;; *************** function _BusyADC *****************
  2257 ;; Defined at:
  2258 ;;		line 26 in file "adcbusy.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;		None
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      unsigned char 
  2265 ;; Registers used:
  2266 ;;		wreg
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2272 ;;      Params:         0       0       0       0       0       0       0
  2273 ;;      Locals:         0       0       0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0       0       0
  2275 ;;      Totals:         0       0       0       0       0       0       0
  2276 ;;Total ram usage:        0 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_main
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text18
  2286  000B3E                     __ptext18:
  2287                           	opt stack 0
  2288  000B3E                     _BusyADC:
  2289                           	opt stack 30
  2290                           
  2291                           ;adcbusy.c: 28: return(ADCON0bits.GO);
  2292                           
  2293                           ;incstack = 0
  2294  000B3E  A2C2               	btfss	4034,1,c	;volatile
  2295  000B40  D002               	goto	u180
  2296  000B42  0E01               	movlw	1
  2297  000B44  0012               	return	
  2298  000B46                     u180:
  2299  000B46  0E00               	movlw	0
  2300  000B48  0012               	return	
  2301  000B4A                     __end_of_BusyADC:
  2302                           	opt stack 0
  2303                           tblptru	equ	0xFF8
  2304                           tblptrh	equ	0xFF7
  2305                           tblptrl	equ	0xFF6
  2306                           tablat	equ	0xFF5
  2307                           prodh	equ	0xFF4
  2308                           prodl	equ	0xFF3
  2309                           intcon	equ	0xFF2
  2310                           wreg	equ	0xFE8
  2311                           indf2	equ	0xFDF
  2312                           postinc2	equ	0xFDE
  2313                           postdec2	equ	0xFDD
  2314                           fsr2h	equ	0xFDA
  2315                           fsr2l	equ	0xFD9
  2316                           status	equ	0xFD8
  2317                           tblptru	equ	0xFF8
  2318                           tblptrh	equ	0xFF7
  2319                           tblptrl	equ	0xFF6
  2320                           tablat	equ	0xFF5
  2321                           prodh	equ	0xFF4
  2322                           prodl	equ	0xFF3
  2323                           intcon	equ	0xFF2
  2324                           wreg	equ	0xFE8
  2325                           indf2	equ	0xFDF
  2326                           postinc2	equ	0xFDE
  2327                           postdec2	equ	0xFDD
  2328                           fsr2h	equ	0xFDA
  2329                           fsr2l	equ	0xFD9
  2330                           status	equ	0xFD8
  2331                           
  2332                           	psect	rparam
  2333  0000                     tblptru	equ	0xFF8
  2334                           tblptrh	equ	0xFF7
  2335                           tblptrl	equ	0xFF6
  2336                           tablat	equ	0xFF5
  2337                           prodh	equ	0xFF4
  2338                           prodl	equ	0xFF3
  2339                           intcon	equ	0xFF2
  2340                           wreg	equ	0xFE8
  2341                           indf2	equ	0xFDF
  2342                           postinc2	equ	0xFDE
  2343                           postdec2	equ	0xFDD
  2344                           fsr2h	equ	0xFDA
  2345                           fsr2l	equ	0xFD9
  2346                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     47      47
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(COMRAM[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 10
		 -> main@buffer(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _putrsXLCD->_WriteDataXLCD
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0    2050
                                             26 COMRAM    21    21      0
                            _BusyADC
                           _BusyXLCD
                           _CloseADC
                         _ConvertADC
                            _OpenADC
                            _ReadADC
                          _init_XLCD
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    17      6    1254
                                             12 COMRAM    14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            2     0      2     151
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     120
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0      90
                                              4 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      30
                                              0 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     306
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CloseADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _BusyXLCD
     _DelayFor18TCY
   _CloseADC
   _ConvertADC
   _OpenADC
   _ReadADC
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _Delay10KTCYx
       _DelayPORXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _putrsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     2F      2F       1       37.0%
STACK                0      0       0       2        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BANK5               EF      0       0      13        0.0%
ABS                  0      0       0      14        0.0%
BITBANK5            EF      0       0      15        0.0%
BIGRAM             5EE      0       0      16        0.0%
DATA                 0      0       0      17        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Oct 23 15:34:50 2017

                     l43 07DA                       l37 0796                       l46 07E8  
                     l39 079A                       l49 07FE                       l66 0AF2  
                     l77 0AAA                       u30 0862                       u25 098A  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$XT 000000  
            __CFG_LVP$ON 000000                      l101 0858                      l110 0882  
                    l113 0892                      l107 0872                      l116 08A2  
                    l119 08B2                      l128 0ADC                      l129 0AC0  
                    l243 091E                      l280 065E                      l273 061A  
                    l282 0686                      l274 0634                      l702 0940  
                    l286 06D2                      l703 0938                      l287 072A  
                    l712 09DC                      l288 06D8                      l713 09D4  
                    l706 0960                      l707 096A                      l716 09F4  
                    l493 0B0C                      l717 09FE             __CFG_CPB$OFF 000000  
                    u410 09E0                      u180 0B46                      u500 0732  
                    u510 074A             __CFG_CPD$OFF 000000                      u380 0944  
                    u550 07BE                      u607 0B26                      u480 06B6  
                    u617 0B12                      u627 0B56                      u580 0808  
                    u597 0816    __size_of_WriteCmdXLCD 003E                      wreg 000FE8  
            main@channel 0026              main@config1 002B              main@config2 002C  
            main@config3 0027             __CFG_WDT$OFF 000000                     l1456 068A  
                   STR_1 060B                     _LATA 000F89                     _LATB 000F8A  
           __CFG_PWRT$ON 000000                     _main 0758                     fsr2h 000FDA  
                   indf2 000FDF                     fsr2l 000FD9   __size_of_WriteDataXLCD 003E  
                   prodh 000FF4                     prodl 000FF3                     start 0002  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
        __end_of_BusyADC 0B4A          __end_of_ReadADC 0B3E          __end_of_OpenADC 0922  
           _WriteCmdXLCD 0A46            ?_SetDDRamAddr 0001                    ?_main 0001  
        __end_of___lwdiv 0974          __end_of___lwmod 0A08                    _PORTB 000F81  
                  _TRISB 000F93    __size_of_Delay10KTCYx 0016            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
        __end_of_dpowers 060B                    main@i 0028               _ConvertADC 0B64  
         __CFG_BOREN$OFF 000000                    tablat 000FF5                    status 000FD8  
        __end_of_sprintf 0758         __end_of_CloseADC 0B64          __initialization 0B4A  
           __end_of_main 0820         __end_of_BusyXLCD 0ABE             _Delay10KTCYx 0B0A  
  __size_of_DelayPORXLCD 0010           ??_SetDDRamAddr 0001         __end_of_OpenXLCD 08C4  
                 ??_main 001B            __activetblptr 000002            _WriteDataXLCD 0A08  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3                ??_BusyADC 0001  
              ??_ReadADC 0003                ??_OpenADC 0003             _DelayPORXLCD 0B20  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                ??___lwdiv 0005  
              ??___lwmod 000C           ?_WriteDataXLCD 0001             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_sprintf 0013              ?_ConvertADC 0001               __accesstop 0080  
__end_of__initialization 0B4A          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001                ?_CloseADC 0001   __size_of_DelayFor18TCY 000A  
              ?_BusyXLCD 0001          WriteCmdXLCD@cmd 0001     __end_of_SetDDRamAddr 09C6  
     __size_of_init_XLCD 001E                ?_OpenXLCD 0001        WriteDataXLCD@data 0001  
        ??_WriteDataXLCD 0001      __size_of_ConvertADC 0004               ??_CloseADC 0001  
     __size_of_putrsXLCD 002E               ??_BusyXLCD 0001                  _BusyADC 0B3E  
                _ReadADC 0B30               ??_OpenXLCD 0005                  _OpenADC 08C4  
                __Hparam 0000                  __Lparam 0000            _DelayFor18TCY 0B54  
                ___lwdiv 0922                  ___lwmod 09C6             __psmallconst 0600  
                __pcinit 0B4A          putrsXLCD@buffer 0002                  __ramtop 0600  
                __ptext0 0758                  __ptext1 0610                  __ptext2 09C6  
                __ptext3 0922                  __ptext4 0ABE                  __ptext5 0A08  
                __ptext6 0AEC                  __ptext7 0820                  __ptext8 0A46  
                __ptext9 0974        __end_of_init_XLCD 0B0A                  _dpowers 0601  
         OpenADC@config2 0001                  _sprintf 0610                  main@tmp 002E  
   end_of_initialization 0B4A            __Lmediumconst 0000           main@testbuffer 0029  
         main@portconfig 002D           ?_DelayFor18TCY 0001                  postdec2 000FDD  
                postinc2 000FDE        __end_of_putrsXLCD 0AEC                _TRISAbits 000F92  
  __size_of_SetDDRamAddr 0052             ??_ConvertADC 0001               main@buffer 001C  
     __end_of_ConvertADC 0B68             _SetDDRamAddr 0974       SetDDRamAddr@DDaddr 0004  
    start_initialization 0B4A        __size_of_CloseADC 0006        __size_of_BusyXLCD 003A  
        ??_DelayFor18TCY 0001        __size_of_OpenXLCD 00A4            ?_WriteCmdXLCD 0001  
       __CFG_LPT1OSC$OFF 000000              sprintf@flag 0016              sprintf@prec 0017  
               ?_BusyADC 0001                 ?_ReadADC 0001        OpenADC@portconfig 0002  
               ?_OpenADC 0001         ___lwdiv@dividend 0001        __CFG_CCP2MX$PORTC 000000  
         ??_WriteCmdXLCD 0001            ?_Delay10KTCYx 0001                 ?___lwdiv 0001  
               ?___lwmod 0008    __end_of_WriteDataXLCD 0A46              __smallconst 0600  
              _init_XLCD 0AEC         ___lwdiv@quotient 0005                 ?_sprintf 000D  
          OpenADC@config 0005                 _LATAbits 000F89                 _PIE1bits 000F9D  
          ?_DelayPORXLCD 0001                 _PIR1bits 000F9E          OpenXLCD@lcdtype 0005  
       __CFG_WDTPS$32768 000000           ??_Delay10KTCYx 0001               _ADCON0bits 000FC2  
              _putrsXLCD 0ABE         Delay10KTCYx@unit 0002               ?_init_XLCD 0001  
               _CloseADC 0B5E                 _BusyXLCD 0A84           ??_DelayPORXLCD 0001  
               _OpenXLCD 0820         __size_of_BusyADC 000C         __size_of_ReadADC 000E  
               __Hrparam 0000         __size_of_OpenADC 005E                 __Lrparam 0000  
       __size_of___lwdiv 0052         __size_of___lwmod 0042               sprintf@val 0018  
             ?_putrsXLCD 0002          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 0B20                 __ptext11 0B0A                 __ptext12 0A84  
               __ptext13 0B54                 __ptext14 0B30                 __ptext15 08C4  
               __ptext16 0B64                 __ptext17 0B5E                 __ptext18 0B3E  
   __end_of_WriteCmdXLCD 0A84         __size_of_sprintf 0148            __size_of_main 00C8  
             _INTCONbits 000FF2              ??_init_XLCD 0006     __end_of_Delay10KTCYx 0B20  
              sprintf@ap 0014                sprintf@sp 000D         ___lwmod@dividend 0008  
  __end_of_DelayFor18TCY 0B5E                 sprintf@c 001A                 sprintf@f 000F  
   __end_of_DelayPORXLCD 0B30              ??_putrsXLCD 0004          ___lwmod@divisor 000A  
        ___lwmod@counter 000C  
