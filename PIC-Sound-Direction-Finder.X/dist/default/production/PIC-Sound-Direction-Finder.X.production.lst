

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Oct 23 15:36:12 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29  0000                     
    30                           ; Version 1.44
    31                           ; Generated 14/09/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4520 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	smallconst
    66  000600                     __psmallconst:
    67                           	opt stack 0
    68  000600  00                 	db	0
    69  000601                     _dpowers:
    70                           	opt stack 0
    71  000601  0001               	dw	1
    72  000603  000A               	dw	10
    73  000605  0064               	dw	100
    74  000607  03E8               	dw	1000
    75  000609  2710               	dw	10000
    76  00060B                     __end_of_dpowers:
    77                           	opt stack 0
    78  0000                     _ADRESL	set	4035
    79  0000                     _ADRESH	set	4036
    80  0000                     _INTCONbits	set	4082
    81  0000                     _PIR1bits	set	3998
    82  0000                     _ADCON1	set	4033
    83  0000                     _ADCON2	set	4032
    84  0000                     _ADCON0	set	4034
    85  0000                     _PIE1bits	set	3997
    86  0000                     _ADCON0bits	set	4034
    87  0000                     _TRISB	set	3987
    88  0000                     _PORTB	set	3969
    89  0000                     _LATAbits	set	3977
    90  0000                     _TRISAbits	set	3986
    91  0000                     _LATB	set	3978
    92  0000                     _LATA	set	3977
    93  00060B                     STR_1:
    94  00060B  25                 	db	37
    95  00060C  64                 	db	100	;'d'
    96  00060D  00                 	db	0
    97                           
    98                           ; #config settings
    99  00060E  00                 	db	0	; dummy byte at the end
   100  0000                     
   101                           	psect	cinit
   102  000B46                     __pcinit:
   103                           	opt stack 0
   104  000B46                     start_initialization:
   105                           	opt stack 0
   106  000B46                     __initialization:
   107                           	opt stack 0
   108  000B46                     end_of_initialization:
   109                           	opt stack 0
   110  000B46                     __end_of__initialization:
   111                           	opt stack 0
   112  000B46  0E00               	movlw	low (__Lmediumconst shr (0+16))
   113  000B48  6EF8               	movwf	tblptru,c
   114  000B4A  0100               	movlb	0
   115  000B4C  EFAC  F003         	goto	_main	;jump to C main() function
   116                           tblptru	equ	0xFF8
   117                           
   118                           	psect	cstackCOMRAM
   119  000001                     __pcstackCOMRAM:
   120                           	opt stack 0
   121  000001                     ??_Delay10KTCYx:
   122  000001                     ??_SetDDRamAddr:
   123  000001                     ??_DelayPORXLCD:
   124  000001                     ?_ReadADC:
   125                           	opt stack 0
   126  000001                     ?___lwdiv:
   127                           	opt stack 0
   128  000001                     WriteCmdXLCD@cmd:
   129                           	opt stack 0
   130  000001                     WriteDataXLCD@data:
   131                           	opt stack 0
   132  000001                     OpenADC@config2:
   133                           	opt stack 0
   134  000001                     ___lwdiv@dividend:
   135                           	opt stack 0
   136                           
   137                           ; 2 bytes @ 0x0
   138  000001                     	ds	1
   139  000002                     OpenADC@portconfig:
   140                           	opt stack 0
   141  000002                     Delay10KTCYx@unit:
   142                           	opt stack 0
   143  000002                     putrsXLCD@buffer:
   144                           	opt stack 0
   145                           
   146                           ; 2 bytes @ 0x1
   147  000002                     	ds	1
   148  000003                     ??_OpenADC:
   149  000003                     ??_ReadADC:
   150  000003                     ___lwdiv@divisor:
   151                           	opt stack 0
   152                           
   153                           ; 2 bytes @ 0x2
   154  000003                     	ds	1
   155  000004                     SetDDRamAddr@DDaddr:
   156                           	opt stack 0
   157                           
   158                           ; 1 bytes @ 0x3
   159  000004                     	ds	1
   160  000005                     OpenXLCD@lcdtype:
   161                           	opt stack 0
   162  000005                     OpenADC@config:
   163                           	opt stack 0
   164  000005                     ___lwdiv@quotient:
   165                           	opt stack 0
   166                           
   167                           ; 2 bytes @ 0x4
   168  000005                     	ds	1
   169  000006                     
   170                           ; 1 bytes @ 0x5
   171  000006                     	ds	1
   172  000007                     ___lwdiv@counter:
   173                           	opt stack 0
   174                           
   175                           ; 1 bytes @ 0x6
   176  000007                     	ds	1
   177  000008                     ?___lwmod:
   178                           	opt stack 0
   179  000008                     ___lwmod@dividend:
   180                           	opt stack 0
   181                           
   182                           ; 2 bytes @ 0x7
   183  000008                     	ds	2
   184  00000A                     ___lwmod@divisor:
   185                           	opt stack 0
   186                           
   187                           ; 2 bytes @ 0x9
   188  00000A                     	ds	2
   189  00000C                     ___lwmod@counter:
   190                           	opt stack 0
   191                           
   192                           ; 1 bytes @ 0xB
   193  00000C                     	ds	1
   194  00000D                     ?_sprintf:
   195                           	opt stack 0
   196  00000D                     sprintf@sp:
   197                           	opt stack 0
   198                           
   199                           ; 2 bytes @ 0xC
   200  00000D                     	ds	2
   201  00000F                     sprintf@f:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0xE
   205  00000F                     	ds	4
   206  000013                     ??_sprintf:
   207                           
   208                           ; 1 bytes @ 0x12
   209  000013                     	ds	1
   210  000014                     sprintf@ap:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0x13
   214  000014                     	ds	2
   215  000016                     sprintf@flag:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0x15
   219  000016                     	ds	1
   220  000017                     sprintf@prec:
   221                           	opt stack 0
   222                           
   223                           ; 1 bytes @ 0x16
   224  000017                     	ds	1
   225  000018                     sprintf@val:
   226                           	opt stack 0
   227                           
   228                           ; 2 bytes @ 0x17
   229  000018                     	ds	2
   230  00001A                     sprintf@c:
   231                           	opt stack 0
   232                           
   233                           ; 1 bytes @ 0x19
   234  00001A                     	ds	1
   235  00001B                     ??_main:
   236                           
   237                           ; 1 bytes @ 0x1A
   238  00001B                     	ds	1
   239  00001C                     main@buffer:
   240                           	opt stack 0
   241                           
   242                           ; 10 bytes @ 0x1B
   243  00001C                     	ds	10
   244  000026                     main@config3:
   245                           	opt stack 0
   246                           
   247                           ; 1 bytes @ 0x25
   248  000026                     	ds	1
   249  000027                     main@i:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x26
   253  000027                     	ds	1
   254  000028                     main@testbuffer:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0x27
   258  000028                     	ds	2
   259  00002A                     main@config1:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x29
   263  00002A                     	ds	1
   264  00002B                     main@config2:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0x2A
   268  00002B                     	ds	1
   269  00002C                     main@portconfig:
   270                           	opt stack 0
   271                           
   272                           ; 1 bytes @ 0x2B
   273  00002C                     	ds	1
   274  00002D                     main@tmp:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0x2C
   278  00002D                     	ds	2
   279                           tblptru	equ	0xFF8
   280                           
   281 ;;
   282 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   283 ;;
   284 ;; *************** function _main *****************
   285 ;; Defined at:
   286 ;;		line 6 in file "main.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;  buffer         10   27[COMRAM] unsigned char [10]
   291 ;;  tmp             2   44[COMRAM] int 
   292 ;;  testbuffer      2   39[COMRAM] int 
   293 ;;  portconfig      1   43[COMRAM] unsigned char 
   294 ;;  config2         1   42[COMRAM] unsigned char 
   295 ;;  config1         1   41[COMRAM] unsigned char 
   296 ;;  i               1   38[COMRAM] unsigned char 
   297 ;;  config3         1   37[COMRAM] unsigned char 
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   302 ;; Tracked objects:
   303 ;;		On entry : 0/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   307 ;;      Params:         0       0       0       0       0       0       0
   308 ;;      Locals:        19       0       0       0       0       0       0
   309 ;;      Temps:          1       0       0       0       0       0       0
   310 ;;      Totals:        20       0       0       0       0       0       0
   311 ;;Total ram usage:       20 bytes
   312 ;; Hardware stack levels required when called:    4
   313 ;; This function calls:
   314 ;;		_BusyADC
   315 ;;		_BusyXLCD
   316 ;;		_CloseADC
   317 ;;		_ConvertADC
   318 ;;		_OpenADC
   319 ;;		_ReadADC
   320 ;;		_init_XLCD
   321 ;;		_putrsXLCD
   322 ;;		_sprintf
   323 ;; This function is called by:
   324 ;;		Startup code after reset
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           	psect	text0
   329  000758                     __ptext0:
   330                           	opt stack 0
   331  000758                     _main:
   332                           	opt stack 27
   333                           
   334                           ;main.c: 8: LATA = 0xFF;
   335                           
   336                           ;incstack = 0
   337  000758  6889               	setf	3977,c	;volatile
   338                           
   339                           ;main.c: 9: LATB = 0xFF;
   340  00075A  688A               	setf	3978,c	;volatile
   341                           
   342                           ;main.c: 10: init_XLCD();
   343  00075C  EC74  F005         	call	_init_XLCD	;wreg free
   344                           
   345                           ;main.c: 12: int tmp;
   346                           ;main.c: 13: int testbuffer;
   347                           ;main.c: 14: unsigned char config1=0x00,config2=0x00,config3=0x00,portconfig=0x00,i=0;
   348  000760  0E00               	movlw	0
   349  000762  6E2A               	movwf	main@config1,c
   350  000764  0E00               	movlw	0
   351  000766  6E2B               	movwf	main@config2,c
   352  000768  0E00               	movlw	0
   353  00076A  6E26               	movwf	main@config3,c
   354  00076C  0E00               	movlw	0
   355  00076E  6E2C               	movwf	main@portconfig,c
   356  000770  0E00               	movlw	0
   357  000772  6E27               	movwf	main@i,c
   358                           
   359                           ;main.c: 15: TRISAbits.RA0 = 1;
   360  000774  8092               	bsf	3986,0,c	;volatile
   361                           
   362                           ;main.c: 16: config1 = 0b01000000 | 0b10000000 | 0b00001000 ;
   363  000776  0EC8               	movlw	200
   364  000778  6E2A               	movwf	main@config1,c
   365                           
   366                           ;main.c: 17: config2 = 0b00000000 | 0b00000000 | 0b00000000 ;
   367  00077A  0E00               	movlw	0
   368  00077C  6E2B               	movwf	main@config2,c
   369                           
   370                           ;main.c: 18: portconfig = 0b00001110 ;
   371  00077E  0E0E               	movlw	14
   372  000780  6E2C               	movwf	main@portconfig,c
   373                           
   374                           ;main.c: 19: OpenADC( config1,config2,portconfig);
   375  000782  C02B  F001         	movff	main@config2,OpenADC@config2
   376  000786  C02C  F002         	movff	main@portconfig,OpenADC@portconfig
   377  00078A  502A               	movf	main@config1,w,c
   378  00078C  EC60  F004         	call	_OpenADC
   379                           
   380                           ;main.c: 21: __nop();
   381  000790  F000               	nop	
   382  000792                     
   383                           ;main.c: 25: ConvertADC();
   384  000792  ECB0  F005         	call	_ConvertADC	;wreg free
   385  000796  EC9D  F005         	call	_BusyADC	;wreg free
   386  00079A  0900               	iorlw	0
   387  00079C  A4D8               	btfss	status,2,c
   388  00079E  D7FB               	goto	l39
   389                           
   390                           ;main.c: 27: tmp = ReadADC();
   391  0007A0  EC96  F005         	call	_ReadADC	;wreg free
   392  0007A4  C001  F02D         	movff	?_ReadADC,main@tmp
   393  0007A8  C002  F02E         	movff	?_ReadADC+1,main@tmp+1
   394                           
   395                           ;main.c: 28: char buffer[10];
   396                           ;main.c: 30: if(testbuffer != tmp) {
   397  0007AC  502D               	movf	main@tmp,w,c
   398  0007AE  1828               	xorwf	main@testbuffer,w,c
   399  0007B0  E104               	bnz	u550
   400  0007B2  502E               	movf	main@tmp+1,w,c
   401  0007B4  1829               	xorwf	main@testbuffer+1,w,c
   402  0007B6  B4D8               	btfsc	status,2,c
   403  0007B8  D025               	goto	u580
   404  0007BA                     u550:
   405                           
   406                           ;main.c: 32: sprintf(buffer, "%d", tmp);
   407  0007BA  0E1C               	movlw	low main@buffer
   408  0007BC  6E0D               	movwf	sprintf@sp,c
   409  0007BE  0E00               	movlw	high main@buffer
   410  0007C0  6E0E               	movwf	sprintf@sp+1,c
   411  0007C2  0E0B               	movlw	low STR_1
   412  0007C4  6E0F               	movwf	sprintf@f,c
   413  0007C6  0E06               	movlw	high STR_1
   414  0007C8  6E10               	movwf	sprintf@f+1,c
   415  0007CA  C02D  F011         	movff	main@tmp,?_sprintf+4
   416  0007CE  C02E  F012         	movff	main@tmp+1,?_sprintf+5
   417  0007D2  EC08  F003         	call	_sprintf	;wreg free
   418  0007D6  EC40  F005         	call	_BusyXLCD	;wreg free
   419  0007DA  0900               	iorlw	0
   420  0007DC  A4D8               	btfss	status,2,c
   421  0007DE  D7FB               	goto	l43
   422                           
   423                           ;main.c: 34: init_XLCD();
   424  0007E0  EC74  F005         	call	_init_XLCD	;wreg free
   425  0007E4  EC40  F005         	call	_BusyXLCD	;wreg free
   426  0007E8  0900               	iorlw	0
   427  0007EA  A4D8               	btfss	status,2,c
   428  0007EC  D7FB               	goto	l46
   429                           
   430                           ;main.c: 36: putrsXLCD(buffer);
   431  0007EE  0E1C               	movlw	low main@buffer
   432  0007F0  6E02               	movwf	putrsXLCD@buffer,c
   433  0007F2  0E00               	movlw	high main@buffer
   434  0007F4  6E03               	movwf	putrsXLCD@buffer+1,c
   435  0007F6  EC5D  F005         	call	_putrsXLCD	;wreg free
   436  0007FA  EC40  F005         	call	_BusyXLCD	;wreg free
   437  0007FE  0900               	iorlw	0
   438  000800  A4D8               	btfss	status,2,c
   439  000802  D7FB               	goto	l49
   440  000804                     u580:
   441                           
   442                           ;main.c: 38: }
   443                           ;main.c: 41: testbuffer = tmp;
   444  000804  C02D  F028         	movff	main@tmp,main@testbuffer
   445  000808  C02E  F029         	movff	main@tmp+1,main@testbuffer+1
   446                           
   447                           ;main.c: 42: _delay((unsigned long)((100)*(4000000/4000.0)));
   448  00080C  0E82               	movlw	130
   449  00080E  6E1B               	movwf	??_main& (0+255),c
   450  000810  0EDE               	movlw	222
   451  000812                     u597:
   452  000812  2EE8               	decfsz	wreg,f,c
   453  000814  D7FE               	bra	u597
   454  000816  2E1B               	decfsz	??_main& (0+255),f,c
   455  000818  D7FC               	bra	u597
   456  00081A  D7BB               	goto	l37
   457  00081C                     __end_of_main:
   458                           	opt stack 0
   459                           tblptru	equ	0xFF8
   460                           wreg	equ	0xFE8
   461                           status	equ	0xFD8
   462                           
   463 ;; *************** function _sprintf *****************
   464 ;; Defined at:
   465 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
   466 ;; Parameters:    Size  Location     Type
   467 ;;  sp              2   12[COMRAM] PTR unsigned char 
   468 ;;		 -> main@buffer(10), 
   469 ;;  f               2   14[COMRAM] PTR const unsigned char 
   470 ;;		 -> STR_1(3), 
   471 ;; Auto vars:     Size  Location     Type
   472 ;;  tmpval          4    0        struct .
   473 ;;  cp              3    0        PTR const unsigned char 
   474 ;;  val             2   23[COMRAM] unsigned int 
   475 ;;  ap              2   19[COMRAM] PTR void [1]
   476 ;;		 -> ?_sprintf(2), 
   477 ;;  len             2    0        unsigned int 
   478 ;;  c               1   25[COMRAM] char 
   479 ;;  prec            1   22[COMRAM] char 
   480 ;;  flag            1   21[COMRAM] unsigned char 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  2   12[COMRAM] int 
   483 ;; Registers used:
   484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   490 ;;      Params:         6       0       0       0       0       0       0
   491 ;;      Locals:         7       0       0       0       0       0       0
   492 ;;      Temps:          1       0       0       0       0       0       0
   493 ;;      Totals:        14       0       0       0       0       0       0
   494 ;;Total ram usage:       14 bytes
   495 ;; Hardware stack levels used:    1
   496 ;; Hardware stack levels required when called:    1
   497 ;; This function calls:
   498 ;;		___lwdiv
   499 ;;		___lwmod
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text1
   506  000610                     __ptext1:
   507                           	opt stack 0
   508  000610                     _sprintf:
   509                           	opt stack 29
   510                           
   511                           ;doprnt.c: 494: va_list ap;
   512                           ;doprnt.c: 499: signed char c;
   513                           ;doprnt.c: 506: signed char prec;
   514                           ;doprnt.c: 508: unsigned char flag;
   515                           ;doprnt.c: 523: union {
   516                           ;doprnt.c: 524: unsigned long vd;
   517                           ;doprnt.c: 525: double integ;
   518                           ;doprnt.c: 526: } tmpval;
   519                           ;doprnt.c: 528: unsigned int val;
   520                           ;doprnt.c: 529: unsigned len;
   521                           ;doprnt.c: 530: const char * cp;
   522                           ;doprnt.c: 533: *ap = __va_start();
   523                           
   524                           ;incstack = 0
   525  000610  0E11               	movlw	low (?_sprintf+4)
   526  000612  6E14               	movwf	sprintf@ap,c
   527  000614  0E00               	movlw	high (?_sprintf+4)
   528  000616  6E15               	movwf	sprintf@ap+1,c
   529                           
   530                           ;doprnt.c: 536: while(c = *f++) {
   531  000618  D08C               	goto	u500
   532  00061A                     
   533                           ;doprnt.c: 538: if(c != '%')
   534  00061A  0E25               	movlw	37
   535  00061C  181A               	xorwf	sprintf@c,w,c
   536  00061E  B4D8               	btfsc	status,2,c
   537  000620  D009               	goto	l274
   538                           
   539                           ;doprnt.c: 540: {
   540                           ;doprnt.c: 541: ((*sp++ = (c)));
   541  000622  C00D  FFD9         	movff	sprintf@sp,fsr2l
   542  000626  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   543  00062A  C01A  FFDF         	movff	sprintf@c,indf2
   544  00062E  4A0D               	infsnz	sprintf@sp,f,c
   545  000630  2A0E               	incf	sprintf@sp+1,f,c
   546                           
   547                           ;doprnt.c: 542: continue;
   548  000632  D07F               	goto	u500
   549  000634                     l274:
   550                           
   551                           ;doprnt.c: 543: }
   552                           ;doprnt.c: 548: flag = 0;
   553  000634  0E00               	movlw	0
   554  000636  6E16               	movwf	sprintf@flag,c
   555                           
   556                           ;doprnt.c: 822: }
   557                           
   558                           ;doprnt.c: 813: continue;
   559                           
   560                           ;doprnt.c: 802: default:
   561                           
   562                           ;doprnt.c: 698: case 'i':
   563                           ;doprnt.c: 699: break;
   564                           
   565                           ;doprnt.c: 697: case 'd':
   566                           
   567                           ;doprnt.c: 638: goto alldone;
   568                           
   569                           ;doprnt.c: 637: case 0:
   570                           
   571                           ;doprnt.c: 635: switch(c = *f++) {
   572  000638  C00F  FFF6         	movff	sprintf@f,tblptrl
   573  00063C  C010  FFF7         	movff	sprintf@f+1,tblptrh
   574  000640  4A0F               	infsnz	sprintf@f,f,c
   575  000642  2A10               	incf	sprintf@f+1,f,c
   576  000644                     	if	0	;tblptru may be non-zero
   577  000644                     	endif
   578  000644                     	if	0	;tblptru may be non-zero
   579  000644                     	endif
   580  000644  0008               	tblrd		*
   581  000646  CFF5 F01A          	movff	tablat,sprintf@c
   582  00064A  501A               	movf	sprintf@c,w,c
   583                           
   584                           ; Switch size 1, requested type "space"
   585                           ; Number of cases is 3, Range of values is 0 to 105
   586                           ; switch strategies available:
   587                           ; Name         Instructions Cycles
   588                           ; simple_byte           10     6 (average)
   589                           ;	Chosen strategy is simple_byte
   590  00064C  0A00               	xorlw	0	; case 0
   591  00064E  B4D8               	btfsc	status,2,c
   592  000650  D07C               	goto	u510
   593  000652  0A64               	xorlw	100	; case 100
   594  000654  B4D8               	btfsc	status,2,c
   595  000656  D003               	goto	l280
   596  000658  0A0D               	xorlw	13	; case 105
   597  00065A  A4D8               	btfss	status,2,c
   598  00065C  D06A               	goto	u500
   599  00065E                     l280:
   600                           
   601                           ;doprnt.c: 1253: {
   602                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   603  00065E  C014  FFD9         	movff	sprintf@ap,fsr2l
   604  000662  C015  FFDA         	movff	sprintf@ap+1,fsr2h
   605  000666  CFDE F018          	movff	postinc2,sprintf@val
   606  00066A  CFDD F019          	movff	postdec2,sprintf@val+1
   607  00066E  0E02               	movlw	2
   608  000670  2614               	addwf	sprintf@ap,f,c
   609  000672  0E00               	movlw	0
   610  000674  2215               	addwfc	sprintf@ap+1,f,c
   611                           
   612                           ;doprnt.c: 1261: if((int)val < 0) {
   613  000676  AE19               	btfss	sprintf@val+1,7,c
   614  000678  D006               	goto	l282
   615                           
   616                           ;doprnt.c: 1262: flag |= 0x03;
   617  00067A  0E03               	movlw	3
   618  00067C  1216               	iorwf	sprintf@flag,f,c
   619                           
   620                           ;doprnt.c: 1263: val = -val;
   621  00067E  6C18               	negf	sprintf@val,c
   622  000680  1E19               	comf	sprintf@val+1,f,c
   623  000682  B0D8               	btfsc	status,0,c
   624  000684  2A19               	incf	sprintf@val+1,f,c
   625  000686                     l282:
   626                           
   627                           ;doprnt.c: 1264: }
   628                           ;doprnt.c: 1266: }
   629                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   630  000686  0E01               	movlw	1
   631  000688  6E1A               	movwf	sprintf@c,c
   632  00068A                     l1452:
   633  00068A  0E05               	movlw	5
   634  00068C  181A               	xorwf	sprintf@c,w,c
   635  00068E  B4D8               	btfsc	status,2,c
   636  000690  D012               	goto	u480
   637                           
   638                           ;doprnt.c: 1306: if(val < dpowers[c])
   639  000692  501A               	movf	sprintf@c,w,c
   640  000694  0D02               	mullw	2
   641  000696  0E01               	movlw	low _dpowers
   642  000698  24F3               	addwf	prodl,w,c
   643  00069A  6EF6               	movwf	tblptrl,c
   644  00069C  0E06               	movlw	high _dpowers
   645  00069E  20F4               	addwfc	prodh,w,c
   646  0006A0  6EF7               	movwf	tblptrh,c
   647  0006A2                     	if	0	;There are less than 3 active tblptr bytes
   648  0006A2                     	endif
   649  0006A2  0009               	tblrd		*+
   650  0006A4  50F5               	movf	tablat,w,c
   651  0006A6  5C18               	subwf	sprintf@val,w,c
   652  0006A8  0009               	tblrd		*+
   653  0006AA  50F5               	movf	tablat,w,c
   654  0006AC  5819               	subwfb	sprintf@val+1,w,c
   655  0006AE  A0D8               	btfss	status,0,c
   656  0006B0  D002               	goto	u480
   657                           
   658                           ;doprnt.c: 1307: break;
   659  0006B2  2A1A               	incf	sprintf@c,f,c
   660  0006B4  D7EA               	goto	l1452
   661  0006B6                     u480:
   662                           
   663                           ;doprnt.c: 1422: {
   664                           ;doprnt.c: 1438: if(flag & 0x03)
   665  0006B6  C016  F013         	movff	sprintf@flag,??_sprintf
   666  0006BA  0E03               	movlw	3
   667  0006BC  1613               	andwf	??_sprintf,f,c
   668  0006BE  B4D8               	btfsc	status,2,c
   669  0006C0  D008               	goto	l286
   670                           
   671                           ;doprnt.c: 1439: ((*sp++ = ('-')));
   672  0006C2  C00D  FFD9         	movff	sprintf@sp,fsr2l
   673  0006C6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   674  0006CA  0E2D               	movlw	45
   675  0006CC  6EDF               	movwf	indf2,c
   676  0006CE  4A0D               	infsnz	sprintf@sp,f,c
   677  0006D0  2A0E               	incf	sprintf@sp+1,f,c
   678  0006D2                     l286:
   679                           
   680                           ;doprnt.c: 1469: }
   681                           ;doprnt.c: 1472: prec = c;
   682  0006D2  C01A  F017         	movff	sprintf@c,sprintf@prec
   683                           
   684                           ;doprnt.c: 1474: while(prec--) {
   685  0006D6  D029               	goto	l287
   686  0006D8                     
   687                           ;doprnt.c: 1478: {
   688                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   689  0006D8  5017               	movf	sprintf@prec,w,c
   690  0006DA  0D02               	mullw	2
   691  0006DC  0E01               	movlw	low _dpowers
   692  0006DE  24F3               	addwf	prodl,w,c
   693  0006E0  6EF6               	movwf	tblptrl,c
   694  0006E2  0E06               	movlw	high _dpowers
   695  0006E4  20F4               	addwfc	prodh,w,c
   696  0006E6  6EF7               	movwf	tblptrh,c
   697  0006E8                     	if	0	;There are less than 3 active tblptr bytes
   698  0006E8                     	endif
   699  0006E8  0009               	tblrd		*+
   700  0006EA  CFF5 F003          	movff	tablat,___lwdiv@divisor
   701  0006EE  000A               	tblrd		*-
   702  0006F0  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
   703  0006F4  C018  F001         	movff	sprintf@val,___lwdiv@dividend
   704  0006F8  C019  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
   705  0006FC  EC8F  F004         	call	___lwdiv	;wreg free
   706  000700  C001  F008         	movff	?___lwdiv,___lwmod@dividend
   707  000704  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
   708  000708  0E00               	movlw	0
   709  00070A  6E0B               	movwf	___lwmod@divisor+1,c
   710  00070C  0E0A               	movlw	10
   711  00070E  6E0A               	movwf	___lwmod@divisor,c
   712  000710  ECE1  F004         	call	___lwmod	;wreg free
   713  000714  5008               	movf	?___lwmod,w,c
   714  000716  0F30               	addlw	48
   715  000718  6E1A               	movwf	sprintf@c,c
   716                           
   717                           ;doprnt.c: 1523: }
   718                           ;doprnt.c: 1524: ((*sp++ = (c)));
   719  00071A  C00D  FFD9         	movff	sprintf@sp,fsr2l
   720  00071E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   721  000722  C01A  FFDF         	movff	sprintf@c,indf2
   722  000726  4A0D               	infsnz	sprintf@sp,f,c
   723  000728  2A0E               	incf	sprintf@sp+1,f,c
   724  00072A                     l287:
   725  00072A  0617               	decf	sprintf@prec,f,c
   726  00072C  2817               	incf	sprintf@prec,w,c
   727  00072E  A4D8               	btfss	status,2,c
   728  000730  D7D3               	goto	l288
   729  000732                     u500:
   730  000732  C00F  FFF6         	movff	sprintf@f,tblptrl
   731  000736  C010  FFF7         	movff	sprintf@f+1,tblptrh
   732  00073A  4A0F               	infsnz	sprintf@f,f,c
   733  00073C  2A10               	incf	sprintf@f+1,f,c
   734  00073E                     	if	0	;tblptru may be non-zero
   735  00073E                     	endif
   736  00073E                     	if	0	;tblptru may be non-zero
   737  00073E                     	endif
   738  00073E  0008               	tblrd		*
   739  000740  CFF5 F01A          	movff	tablat,sprintf@c
   740  000744  501A               	movf	sprintf@c,w,c
   741  000746  A4D8               	btfss	status,2,c
   742  000748  D768               	goto	l273
   743  00074A                     u510:
   744                           
   745                           ;doprnt.c: 1538: *sp = 0;
   746                           
   747                           ;doprnt.c: 1525: }
   748                           ;doprnt.c: 1533: }
   749                           ;doprnt.c: 1535: alldone:
   750  00074A  C00D  FFD9         	movff	sprintf@sp,fsr2l
   751  00074E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   752  000752  0E00               	movlw	0
   753  000754  6EDF               	movwf	indf2,c
   754  000756  0012               	return	
   755  000758                     __end_of_sprintf:
   756                           	opt stack 0
   757                           tblptru	equ	0xFF8
   758                           tblptrh	equ	0xFF7
   759                           tblptrl	equ	0xFF6
   760                           tablat	equ	0xFF5
   761                           prodh	equ	0xFF4
   762                           prodl	equ	0xFF3
   763                           wreg	equ	0xFE8
   764                           indf2	equ	0xFDF
   765                           postinc2	equ	0xFDE
   766                           postdec2	equ	0xFDD
   767                           fsr2h	equ	0xFDA
   768                           fsr2l	equ	0xFD9
   769                           status	equ	0xFD8
   770                           
   771 ;; *************** function ___lwmod *****************
   772 ;; Defined at:
   773 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;  dividend        2    7[COMRAM] unsigned int 
   776 ;;  divisor         2    9[COMRAM] unsigned int 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  counter         1   11[COMRAM] unsigned char 
   779 ;; Return value:  Size  Location     Type
   780 ;;                  2    7[COMRAM] unsigned int 
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   788 ;;      Params:         4       0       0       0       0       0       0
   789 ;;      Locals:         1       0       0       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0       0       0
   791 ;;      Totals:         5       0       0       0       0       0       0
   792 ;;Total ram usage:        5 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_sprintf
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           	psect	text2
   802  0009C2                     __ptext2:
   803                           	opt stack 0
   804  0009C2                     ___lwmod:
   805                           	opt stack 29
   806                           
   807                           ;incstack = 0
   808  0009C2  500A               	movf	___lwmod@divisor,w,c
   809  0009C4  100B               	iorwf	___lwmod@divisor+1,w,c
   810  0009C6  B4D8               	btfsc	status,2,c
   811  0009C8  D018               	goto	l717
   812  0009CA  0E01               	movlw	1
   813  0009CC  6E0C               	movwf	___lwmod@counter,c
   814  0009CE  D004               	goto	l712
   815  0009D0  90D8               	bcf	status,0,c
   816  0009D2  360A               	rlcf	___lwmod@divisor,f,c
   817  0009D4  360B               	rlcf	___lwmod@divisor+1,f,c
   818  0009D6  2A0C               	incf	___lwmod@counter,f,c
   819  0009D8                     l712:
   820  0009D8  AE0B               	btfss	___lwmod@divisor+1,7,c
   821  0009DA  D7FA               	goto	l713
   822  0009DC                     u410:
   823  0009DC  500A               	movf	___lwmod@divisor,w,c
   824  0009DE  5C08               	subwf	___lwmod@dividend,w,c
   825  0009E0  500B               	movf	___lwmod@divisor+1,w,c
   826  0009E2  5809               	subwfb	___lwmod@dividend+1,w,c
   827  0009E4  A0D8               	btfss	status,0,c
   828  0009E6  D004               	goto	l716
   829  0009E8  500A               	movf	___lwmod@divisor,w,c
   830  0009EA  5E08               	subwf	___lwmod@dividend,f,c
   831  0009EC  500B               	movf	___lwmod@divisor+1,w,c
   832  0009EE  5A09               	subwfb	___lwmod@dividend+1,f,c
   833  0009F0                     l716:
   834  0009F0  90D8               	bcf	status,0,c
   835  0009F2  320B               	rrcf	___lwmod@divisor+1,f,c
   836  0009F4  320A               	rrcf	___lwmod@divisor,f,c
   837  0009F6  2E0C               	decfsz	___lwmod@counter,f,c
   838  0009F8  D7F1               	goto	u410
   839  0009FA                     l717:
   840  0009FA  C008  F008         	movff	___lwmod@dividend,?___lwmod
   841  0009FE  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
   842  000A02  0012               	return		;funcret
   843  000A04                     __end_of___lwmod:
   844                           	opt stack 0
   845                           tblptru	equ	0xFF8
   846                           tblptrh	equ	0xFF7
   847                           tblptrl	equ	0xFF6
   848                           tablat	equ	0xFF5
   849                           prodh	equ	0xFF4
   850                           prodl	equ	0xFF3
   851                           wreg	equ	0xFE8
   852                           indf2	equ	0xFDF
   853                           postinc2	equ	0xFDE
   854                           postdec2	equ	0xFDD
   855                           fsr2h	equ	0xFDA
   856                           fsr2l	equ	0xFD9
   857                           status	equ	0xFD8
   858                           
   859 ;; *************** function ___lwdiv *****************
   860 ;; Defined at:
   861 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;  dividend        2    0[COMRAM] unsigned int 
   864 ;;  divisor         2    2[COMRAM] unsigned int 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  quotient        2    4[COMRAM] unsigned int 
   867 ;;  counter         1    6[COMRAM] unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  2    0[COMRAM] unsigned int 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   877 ;;      Params:         4       0       0       0       0       0       0
   878 ;;      Locals:         3       0       0       0       0       0       0
   879 ;;      Temps:          0       0       0       0       0       0       0
   880 ;;      Totals:         7       0       0       0       0       0       0
   881 ;;Total ram usage:        7 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		_sprintf
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text3
   891  00091E                     __ptext3:
   892                           	opt stack 0
   893  00091E                     ___lwdiv:
   894                           	opt stack 29
   895                           
   896                           ;incstack = 0
   897  00091E  0E00               	movlw	0
   898  000920  6E06               	movwf	___lwdiv@quotient+1,c
   899  000922  0E00               	movlw	0
   900  000924  6E05               	movwf	___lwdiv@quotient,c
   901  000926  5003               	movf	___lwdiv@divisor,w,c
   902  000928  1004               	iorwf	___lwdiv@divisor+1,w,c
   903  00092A  B4D8               	btfsc	status,2,c
   904  00092C  D01C               	goto	l707
   905  00092E  0E01               	movlw	1
   906  000930  6E07               	movwf	___lwdiv@counter,c
   907  000932  D004               	goto	l702
   908  000934  90D8               	bcf	status,0,c
   909  000936  3603               	rlcf	___lwdiv@divisor,f,c
   910  000938  3604               	rlcf	___lwdiv@divisor+1,f,c
   911  00093A  2A07               	incf	___lwdiv@counter,f,c
   912  00093C                     l702:
   913  00093C  AE04               	btfss	___lwdiv@divisor+1,7,c
   914  00093E  D7FA               	goto	l703
   915  000940                     u380:
   916  000940  90D8               	bcf	status,0,c
   917  000942  3605               	rlcf	___lwdiv@quotient,f,c
   918  000944  3606               	rlcf	___lwdiv@quotient+1,f,c
   919  000946  5003               	movf	___lwdiv@divisor,w,c
   920  000948  5C01               	subwf	___lwdiv@dividend,w,c
   921  00094A  5004               	movf	___lwdiv@divisor+1,w,c
   922  00094C  5802               	subwfb	___lwdiv@dividend+1,w,c
   923  00094E  A0D8               	btfss	status,0,c
   924  000950  D005               	goto	l706
   925  000952  5003               	movf	___lwdiv@divisor,w,c
   926  000954  5E01               	subwf	___lwdiv@dividend,f,c
   927  000956  5004               	movf	___lwdiv@divisor+1,w,c
   928  000958  5A02               	subwfb	___lwdiv@dividend+1,f,c
   929  00095A  8005               	bsf	___lwdiv@quotient,0,c
   930  00095C                     l706:
   931  00095C  90D8               	bcf	status,0,c
   932  00095E  3204               	rrcf	___lwdiv@divisor+1,f,c
   933  000960  3203               	rrcf	___lwdiv@divisor,f,c
   934  000962  2E07               	decfsz	___lwdiv@counter,f,c
   935  000964  D7ED               	goto	u380
   936  000966                     l707:
   937  000966  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
   938  00096A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
   939  00096E  0012               	return		;funcret
   940  000970                     __end_of___lwdiv:
   941                           	opt stack 0
   942                           tblptru	equ	0xFF8
   943                           tblptrh	equ	0xFF7
   944                           tblptrl	equ	0xFF6
   945                           tablat	equ	0xFF5
   946                           prodh	equ	0xFF4
   947                           prodl	equ	0xFF3
   948                           wreg	equ	0xFE8
   949                           indf2	equ	0xFDF
   950                           postinc2	equ	0xFDE
   951                           postdec2	equ	0xFDD
   952                           fsr2h	equ	0xFDA
   953                           fsr2l	equ	0xFD9
   954                           status	equ	0xFD8
   955                           
   956 ;; *************** function _putrsXLCD *****************
   957 ;; Defined at:
   958 ;;		line 16 in file "putrxlcd.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  buffer          2    1[COMRAM] PTR const unsigned char 
   961 ;;		 -> main@buffer(10), 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   973 ;;      Params:         2       0       0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0       0       0
   976 ;;      Totals:         2       0       0       0       0       0       0
   977 ;;Total ram usage:        2 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    2
   980 ;; This function calls:
   981 ;;		_BusyXLCD
   982 ;;		_WriteDataXLCD
   983 ;; This function is called by:
   984 ;;		_main
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text4
   989  000ABA                     __ptext4:
   990                           	opt stack 0
   991  000ABA                     _putrsXLCD:
   992                           	opt stack 28
   993                           
   994                           ;putrxlcd.c: 18: while(*buffer)
   995                           
   996                           ;incstack = 0
   997  000ABA  D00E               	goto	l128
   998  000ABC                     
   999                           ;putrxlcd.c: 19: {
  1000                           ;putrxlcd.c: 20: while(BusyXLCD());
  1001  000ABC  EC40  F005         	call	_BusyXLCD	;wreg free
  1002  000AC0  0900               	iorlw	0
  1003  000AC2  A4D8               	btfss	status,2,c
  1004  000AC4  D7FB               	goto	l129
  1005                           
  1006                           ;putrxlcd.c: 21: WriteDataXLCD(*buffer);
  1007  000AC6  C002  FFD9         	movff	putrsXLCD@buffer,fsr2l
  1008  000ACA  C003  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
  1009  000ACE  50DF               	movf	indf2,w,c
  1010  000AD0  EC02  F005         	call	_WriteDataXLCD
  1011                           
  1012                           ;putrxlcd.c: 22: buffer++;
  1013  000AD4  4A02               	infsnz	putrsXLCD@buffer,f,c
  1014  000AD6  2A03               	incf	putrsXLCD@buffer+1,f,c
  1015  000AD8                     l128:
  1016  000AD8  C002  FFD9         	movff	putrsXLCD@buffer,fsr2l
  1017  000ADC  C003  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
  1018  000AE0  50DF               	movf	indf2,w,c
  1019  000AE2  B4D8               	btfsc	status,2,c
  1020  000AE4  0012               	return	
  1021  000AE6  D7EA               	goto	l129
  1022  000AE8                     __end_of_putrsXLCD:
  1023                           	opt stack 0
  1024                           tblptru	equ	0xFF8
  1025                           tblptrh	equ	0xFF7
  1026                           tblptrl	equ	0xFF6
  1027                           tablat	equ	0xFF5
  1028                           prodh	equ	0xFF4
  1029                           prodl	equ	0xFF3
  1030                           wreg	equ	0xFE8
  1031                           indf2	equ	0xFDF
  1032                           postinc2	equ	0xFDE
  1033                           postdec2	equ	0xFDD
  1034                           fsr2h	equ	0xFDA
  1035                           fsr2l	equ	0xFD9
  1036                           status	equ	0xFD8
  1037                           
  1038 ;; *************** function _WriteDataXLCD *****************
  1039 ;; Defined at:
  1040 ;;		line 16 in file "writdata.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;  data            1    wreg     unsigned char 
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  data            1    0[COMRAM] unsigned char 
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg, status,2, status,0, cstack
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1054 ;;      Params:         0       0       0       0       0       0       0
  1055 ;;      Locals:         1       0       0       0       0       0       0
  1056 ;;      Temps:          0       0       0       0       0       0       0
  1057 ;;      Totals:         1       0       0       0       0       0       0
  1058 ;;Total ram usage:        1 bytes
  1059 ;; Hardware stack levels used:    1
  1060 ;; Hardware stack levels required when called:    1
  1061 ;; This function calls:
  1062 ;;		_DelayFor18TCY
  1063 ;; This function is called by:
  1064 ;;		_putrsXLCD
  1065 ;;		_putsXLCD
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text5
  1070  000A04                     __ptext5:
  1071                           	opt stack 0
  1072  000A04                     _WriteDataXLCD:
  1073                           	opt stack 28
  1074                           
  1075                           ;incstack = 0
  1076                           ;WriteDataXLCD@data stored from wreg
  1077  000A04  6E01               	movwf	WriteDataXLCD@data,c
  1078                           
  1079                           ;writdata.c: 35: TRISB &= 0xf0;
  1080  000A06  0EF0               	movlw	240
  1081  000A08  1693               	andwf	3987,f,c	;volatile
  1082                           
  1083                           ;writdata.c: 36: PORTB &= 0xf0;
  1084  000A0A  0EF0               	movlw	240
  1085  000A0C  1681               	andwf	3969,f,c	;volatile
  1086                           
  1087                           ;writdata.c: 37: PORTB |= ((data>>4)&0x0f);
  1088  000A0E  3801               	swapf	WriteDataXLCD@data,w,c
  1089  000A10  0B0F               	andlw	15
  1090  000A12  0B0F               	andlw	15
  1091  000A14  1281               	iorwf	3969,f,c	;volatile
  1092                           
  1093                           ;writdata.c: 39: LATAbits.LATA3 = 1;
  1094  000A16  8689               	bsf	3977,3,c	;volatile
  1095                           
  1096                           ;writdata.c: 40: LATAbits.LATA2 = 0;
  1097  000A18  9489               	bcf	3977,2,c	;volatile
  1098                           
  1099                           ;writdata.c: 41: DelayFor18TCY();
  1100  000A1A  ECA8  F005         	call	_DelayFor18TCY	;wreg free
  1101                           
  1102                           ;writdata.c: 42: LATAbits.LATA1 = 1;
  1103  000A1E  8289               	bsf	3977,1,c	;volatile
  1104                           
  1105                           ;writdata.c: 43: DelayFor18TCY();
  1106  000A20  ECA8  F005         	call	_DelayFor18TCY	;wreg free
  1107                           
  1108                           ;writdata.c: 44: LATAbits.LATA1 = 0;
  1109  000A24  9289               	bcf	3977,1,c	;volatile
  1110                           
  1111                           ;writdata.c: 49: PORTB &= 0xf0;
  1112  000A26  0EF0               	movlw	240
  1113  000A28  1681               	andwf	3969,f,c	;volatile
  1114                           
  1115                           ;writdata.c: 50: PORTB |= (data&0x0f);
  1116  000A2A  5001               	movf	WriteDataXLCD@data,w,c
  1117  000A2C  0B0F               	andlw	15
  1118  000A2E  1281               	iorwf	3969,f,c	;volatile
  1119                           
  1120                           ;writdata.c: 52: DelayFor18TCY();
  1121  000A30  ECA8  F005         	call	_DelayFor18TCY	;wreg free
  1122                           
  1123                           ;writdata.c: 53: LATAbits.LATA1 = 1;
  1124  000A34  8289               	bsf	3977,1,c	;volatile
  1125                           
  1126                           ;writdata.c: 54: DelayFor18TCY();
  1127  000A36  ECA8  F005         	call	_DelayFor18TCY	;wreg free
  1128                           
  1129                           ;writdata.c: 55: LATAbits.LATA1 = 0;
  1130  000A3A  9289               	bcf	3977,1,c	;volatile
  1131                           
  1132                           ;writdata.c: 59: TRISB |= 0x0f;
  1133  000A3C  0E0F               	movlw	15
  1134  000A3E  1293               	iorwf	3987,f,c	;volatile
  1135  000A40  0012               	return	
  1136  000A42                     __end_of_WriteDataXLCD:
  1137                           	opt stack 0
  1138                           tblptru	equ	0xFF8
  1139                           tblptrh	equ	0xFF7
  1140                           tblptrl	equ	0xFF6
  1141                           tablat	equ	0xFF5
  1142                           prodh	equ	0xFF4
  1143                           prodl	equ	0xFF3
  1144                           wreg	equ	0xFE8
  1145                           indf2	equ	0xFDF
  1146                           postinc2	equ	0xFDE
  1147                           postdec2	equ	0xFDD
  1148                           fsr2h	equ	0xFDA
  1149                           fsr2l	equ	0xFD9
  1150                           status	equ	0xFD8
  1151                           
  1152 ;; *************** function _init_XLCD *****************
  1153 ;; Defined at:
  1154 ;;		line 67 in file "main.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2, status,0, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1168 ;;      Params:         0       0       0       0       0       0       0
  1169 ;;      Locals:         0       0       0       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0       0       0
  1171 ;;      Totals:         0       0       0       0       0       0       0
  1172 ;;Total ram usage:        0 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; Hardware stack levels required when called:    3
  1175 ;; This function calls:
  1176 ;;		_BusyXLCD
  1177 ;;		_OpenXLCD
  1178 ;;		_WriteCmdXLCD
  1179 ;; This function is called by:
  1180 ;;		_main
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           	psect	text6
  1185  000AE8                     __ptext6:
  1186                           	opt stack 0
  1187  000AE8                     _init_XLCD:
  1188                           	opt stack 27
  1189                           
  1190                           ;main.c: 69: OpenXLCD(0b00101100&0b00111000);
  1191                           
  1192                           ;incstack = 0
  1193  000AE8  0E28               	movlw	40
  1194  000AEA  EC0E  F004         	call	_OpenXLCD
  1195  000AEE  EC40  F005         	call	_BusyXLCD	;wreg free
  1196  000AF2  0900               	iorlw	0
  1197  000AF4  A4D8               	btfss	status,2,c
  1198  000AF6  D7FB               	goto	l66
  1199                           
  1200                           ;main.c: 73: WriteCmdXLCD(0x06);
  1201  000AF8  0E06               	movlw	6
  1202  000AFA  EC21  F005         	call	_WriteCmdXLCD
  1203                           
  1204                           ;main.c: 74: WriteCmdXLCD(0x0C);
  1205  000AFE  0E0C               	movlw	12
  1206  000B00  EC21  F005         	call	_WriteCmdXLCD
  1207  000B04  0012               	return		;funcret
  1208  000B06                     __end_of_init_XLCD:
  1209                           	opt stack 0
  1210                           tblptru	equ	0xFF8
  1211                           tblptrh	equ	0xFF7
  1212                           tblptrl	equ	0xFF6
  1213                           tablat	equ	0xFF5
  1214                           prodh	equ	0xFF4
  1215                           prodl	equ	0xFF3
  1216                           wreg	equ	0xFE8
  1217                           indf2	equ	0xFDF
  1218                           postinc2	equ	0xFDE
  1219                           postdec2	equ	0xFDD
  1220                           fsr2h	equ	0xFDA
  1221                           fsr2l	equ	0xFD9
  1222                           status	equ	0xFD8
  1223                           
  1224 ;; *************** function _OpenXLCD *****************
  1225 ;; Defined at:
  1226 ;;		line 19 in file "openxlcd.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  lcdtype         1    wreg     unsigned char 
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  lcdtype         1    4[COMRAM] unsigned char 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		wreg, status,2, status,0, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1240 ;;      Params:         0       0       0       0       0       0       0
  1241 ;;      Locals:         1       0       0       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0       0       0
  1243 ;;      Totals:         1       0       0       0       0       0       0
  1244 ;;Total ram usage:        1 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    2
  1247 ;; This function calls:
  1248 ;;		_BusyXLCD
  1249 ;;		_Delay10KTCYx
  1250 ;;		_DelayPORXLCD
  1251 ;;		_SetDDRamAddr
  1252 ;;		_WriteCmdXLCD
  1253 ;; This function is called by:
  1254 ;;		_init_XLCD
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text7
  1259  00081C                     __ptext7:
  1260                           	opt stack 0
  1261  00081C                     _OpenXLCD:
  1262                           	opt stack 27
  1263                           
  1264                           ;incstack = 0
  1265                           ;OpenXLCD@lcdtype stored from wreg
  1266  00081C  6E05               	movwf	OpenXLCD@lcdtype,c
  1267                           
  1268                           ;openxlcd.c: 31: PORTB &= 0xf0;
  1269  00081E  0EF0               	movlw	240
  1270  000820  1681               	andwf	3969,f,c	;volatile
  1271                           
  1272                           ;openxlcd.c: 32: TRISB &= 0xF0;
  1273  000822  0EF0               	movlw	240
  1274  000824  1693               	andwf	3987,f,c	;volatile
  1275                           
  1276                           ;openxlcd.c: 35: TRISAbits.TRISA2 = 0;
  1277  000826  9492               	bcf	3986,2,c	;volatile
  1278                           
  1279                           ;openxlcd.c: 36: TRISAbits.TRISA3 = 0;
  1280  000828  9692               	bcf	3986,3,c	;volatile
  1281                           
  1282                           ;openxlcd.c: 37: TRISAbits.TRISA1 = 0;
  1283  00082A  9292               	bcf	3986,1,c	;volatile
  1284                           
  1285                           ;openxlcd.c: 38: LATAbits.LATA2 = 0;
  1286  00082C  9489               	bcf	3977,2,c	;volatile
  1287                           
  1288                           ;openxlcd.c: 39: LATAbits.LATA3 = 0;
  1289  00082E  9689               	bcf	3977,3,c	;volatile
  1290                           
  1291                           ;openxlcd.c: 40: LATAbits.LATA1 = 0;
  1292  000830  9289               	bcf	3977,1,c	;volatile
  1293                           
  1294                           ;openxlcd.c: 43: DelayPORXLCD();
  1295  000832  EC8E  F005         	call	_DelayPORXLCD	;wreg free
  1296                           
  1297                           ;openxlcd.c: 45: WriteCmdXLCD(0x30);
  1298  000836  0E30               	movlw	48
  1299  000838  EC21  F005         	call	_WriteCmdXLCD
  1300                           
  1301                           ;openxlcd.c: 46: Delay10KTCYx(0x05);
  1302  00083C  0E05               	movlw	5
  1303  00083E  EC83  F005         	call	_Delay10KTCYx
  1304                           
  1305                           ;openxlcd.c: 48: WriteCmdXLCD(0x30);
  1306  000842  0E30               	movlw	48
  1307  000844  EC21  F005         	call	_WriteCmdXLCD
  1308                           
  1309                           ;openxlcd.c: 49: Delay10KTCYx(0x01);
  1310  000848  0E01               	movlw	1
  1311  00084A  EC83  F005         	call	_Delay10KTCYx
  1312                           
  1313                           ;openxlcd.c: 52: WriteCmdXLCD(0x32);
  1314  00084E  0E32               	movlw	50
  1315  000850  EC21  F005         	call	_WriteCmdXLCD
  1316  000854  EC40  F005         	call	_BusyXLCD	;wreg free
  1317  000858  0900               	iorlw	0
  1318  00085A  A4D8               	btfss	status,2,c
  1319  00085C  D7FB               	goto	l101
  1320  00085E                     u30:
  1321                           
  1322                           ;openxlcd.c: 58: while(BusyXLCD());
  1323  00085E  EC40  F005         	call	_BusyXLCD	;wreg free
  1324  000862  0900               	iorlw	0
  1325  000864  A4D8               	btfss	status,2,c
  1326  000866  D7FB               	goto	u30
  1327                           
  1328                           ;openxlcd.c: 59: WriteCmdXLCD(lcdtype);
  1329  000868  5005               	movf	OpenXLCD@lcdtype,w,c
  1330  00086A  EC21  F005         	call	_WriteCmdXLCD
  1331  00086E  EC40  F005         	call	_BusyXLCD	;wreg free
  1332  000872  0900               	iorlw	0
  1333  000874  A4D8               	btfss	status,2,c
  1334  000876  D7FB               	goto	l107
  1335                           
  1336                           ;openxlcd.c: 63: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  1337  000878  0E08               	movlw	8
  1338  00087A  EC21  F005         	call	_WriteCmdXLCD
  1339  00087E  EC40  F005         	call	_BusyXLCD	;wreg free
  1340  000882  0900               	iorlw	0
  1341  000884  A4D8               	btfss	status,2,c
  1342  000886  D7FB               	goto	l110
  1343                           
  1344                           ;openxlcd.c: 65: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  1345  000888  0E0F               	movlw	15
  1346  00088A  EC21  F005         	call	_WriteCmdXLCD
  1347  00088E  EC40  F005         	call	_BusyXLCD	;wreg free
  1348  000892  0900               	iorlw	0
  1349  000894  A4D8               	btfss	status,2,c
  1350  000896  D7FB               	goto	l113
  1351                           
  1352                           ;openxlcd.c: 69: WriteCmdXLCD(0x01);
  1353  000898  0E01               	movlw	1
  1354  00089A  EC21  F005         	call	_WriteCmdXLCD
  1355  00089E  EC40  F005         	call	_BusyXLCD	;wreg free
  1356  0008A2  0900               	iorlw	0
  1357  0008A4  A4D8               	btfss	status,2,c
  1358  0008A6  D7FB               	goto	l116
  1359                           
  1360                           ;openxlcd.c: 73: WriteCmdXLCD(0b00000100);
  1361  0008A8  0E04               	movlw	4
  1362  0008AA  EC21  F005         	call	_WriteCmdXLCD
  1363  0008AE  EC40  F005         	call	_BusyXLCD	;wreg free
  1364  0008B2  0900               	iorlw	0
  1365  0008B4  A4D8               	btfss	status,2,c
  1366  0008B6  D7FB               	goto	l119
  1367                           
  1368                           ;openxlcd.c: 77: SetDDRamAddr(0x80);
  1369  0008B8  0E80               	movlw	128
  1370  0008BA  ECB8  F004         	call	_SetDDRamAddr
  1371  0008BE  0012               	return	
  1372  0008C0                     __end_of_OpenXLCD:
  1373                           	opt stack 0
  1374                           tblptru	equ	0xFF8
  1375                           tblptrh	equ	0xFF7
  1376                           tblptrl	equ	0xFF6
  1377                           tablat	equ	0xFF5
  1378                           prodh	equ	0xFF4
  1379                           prodl	equ	0xFF3
  1380                           wreg	equ	0xFE8
  1381                           indf2	equ	0xFDF
  1382                           postinc2	equ	0xFDE
  1383                           postdec2	equ	0xFDD
  1384                           fsr2h	equ	0xFDA
  1385                           fsr2l	equ	0xFD9
  1386                           status	equ	0xFD8
  1387                           
  1388 ;; *************** function _WriteCmdXLCD *****************
  1389 ;; Defined at:
  1390 ;;		line 13 in file "wcmdxlcd.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;  cmd             1    wreg     unsigned char 
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  cmd             1    0[COMRAM] unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1404 ;;      Params:         0       0       0       0       0       0       0
  1405 ;;      Locals:         1       0       0       0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0       0       0
  1407 ;;      Totals:         1       0       0       0       0       0       0
  1408 ;;Total ram usage:        1 bytes
  1409 ;; Hardware stack levels used:    1
  1410 ;; Hardware stack levels required when called:    1
  1411 ;; This function calls:
  1412 ;;		_DelayFor18TCY
  1413 ;; This function is called by:
  1414 ;;		_init_XLCD
  1415 ;;		_OpenXLCD
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           	psect	text8
  1420  000A42                     __ptext8:
  1421                           	opt stack 0
  1422  000A42                     _WriteCmdXLCD:
  1423                           	opt stack 28
  1424                           
  1425                           ;incstack = 0
  1426                           ;WriteCmdXLCD@cmd stored from wreg
  1427  000A42  6E01               	movwf	WriteCmdXLCD@cmd,c
  1428                           
  1429                           ;wcmdxlcd.c: 32: TRISB &= 0xf0;
  1430  000A44  0EF0               	movlw	240
  1431  000A46  1693               	andwf	3987,f,c	;volatile
  1432                           
  1433                           ;wcmdxlcd.c: 33: PORTB &= 0xf0;
  1434  000A48  0EF0               	movlw	240
  1435  000A4A  1681               	andwf	3969,f,c	;volatile
  1436                           
  1437                           ;wcmdxlcd.c: 34: PORTB |= (cmd>>4)&0x0f;
  1438  000A4C  3801               	swapf	WriteCmdXLCD@cmd,w,c
  1439  000A4E  0B0F               	andlw	15
  1440  000A50  0B0F               	andlw	15
  1441  000A52  1281               	iorwf	3969,f,c	;volatile
  1442                           
  1443                           ;wcmdxlcd.c: 36: LATAbits.LATA2 = 0;
  1444  000A54  9489               	bcf	3977,2,c	;volatile
  1445                           
  1446                           ;wcmdxlcd.c: 37: LATAbits.LATA3 = 0;
  1447  000A56  9689               	bcf	3977,3,c	;volatile
  1448                           
  1449                           ;wcmdxlcd.c: 38: DelayFor18TCY();
  1450  000A58  ECA8  F005         	call	_DelayFor18TCY	;wreg free
  1451                           
  1452                           ;wcmdxlcd.c: 39: LATAbits.LATA1 = 1;
  1453  000A5C  8289               	bsf	3977,1,c	;volatile
  1454                           
  1455                           ;wcmdxlcd.c: 40: DelayFor18TCY();
  1456  000A5E  ECA8  F005         	call	_DelayFor18TCY	;wreg free
  1457                           
  1458                           ;wcmdxlcd.c: 41: LATAbits.LATA1 = 0;
  1459  000A62  9289               	bcf	3977,1,c	;volatile
  1460                           
  1461                           ;wcmdxlcd.c: 46: PORTB &= 0xf0;
  1462  000A64  0EF0               	movlw	240
  1463  000A66  1681               	andwf	3969,f,c	;volatile
  1464                           
  1465                           ;wcmdxlcd.c: 47: PORTB |= cmd&0x0f;
  1466  000A68  5001               	movf	WriteCmdXLCD@cmd,w,c
  1467  000A6A  0B0F               	andlw	15
  1468  000A6C  1281               	iorwf	3969,f,c	;volatile
  1469                           
  1470                           ;wcmdxlcd.c: 49: DelayFor18TCY();
  1471  000A6E  ECA8  F005         	call	_DelayFor18TCY	;wreg free
  1472                           
  1473                           ;wcmdxlcd.c: 50: LATAbits.LATA1 = 1;
  1474  000A72  8289               	bsf	3977,1,c	;volatile
  1475                           
  1476                           ;wcmdxlcd.c: 51: DelayFor18TCY();
  1477  000A74  ECA8  F005         	call	_DelayFor18TCY	;wreg free
  1478                           
  1479                           ;wcmdxlcd.c: 52: LATAbits.LATA1 = 0;
  1480  000A78  9289               	bcf	3977,1,c	;volatile
  1481                           
  1482                           ;wcmdxlcd.c: 56: TRISB |= 0x0f;
  1483  000A7A  0E0F               	movlw	15
  1484  000A7C  1293               	iorwf	3987,f,c	;volatile
  1485  000A7E  0012               	return	
  1486  000A80                     __end_of_WriteCmdXLCD:
  1487                           	opt stack 0
  1488                           tblptru	equ	0xFF8
  1489                           tblptrh	equ	0xFF7
  1490                           tblptrl	equ	0xFF6
  1491                           tablat	equ	0xFF5
  1492                           prodh	equ	0xFF4
  1493                           prodl	equ	0xFF3
  1494                           wreg	equ	0xFE8
  1495                           indf2	equ	0xFDF
  1496                           postinc2	equ	0xFDE
  1497                           postdec2	equ	0xFDD
  1498                           fsr2h	equ	0xFDA
  1499                           fsr2l	equ	0xFD9
  1500                           status	equ	0xFD8
  1501                           
  1502 ;; *************** function _SetDDRamAddr *****************
  1503 ;; Defined at:
  1504 ;;		line 13 in file "setddram.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  DDaddr          1    wreg     unsigned char 
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;  DDaddr          1    3[COMRAM] unsigned char 
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, status,2, status,0, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1518 ;;      Params:         0       0       0       0       0       0       0
  1519 ;;      Locals:         1       0       0       0       0       0       0
  1520 ;;      Temps:          3       0       0       0       0       0       0
  1521 ;;      Totals:         4       0       0       0       0       0       0
  1522 ;;Total ram usage:        4 bytes
  1523 ;; Hardware stack levels used:    1
  1524 ;; Hardware stack levels required when called:    1
  1525 ;; This function calls:
  1526 ;;		_DelayFor18TCY
  1527 ;; This function is called by:
  1528 ;;		_OpenXLCD
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text9
  1533  000970                     __ptext9:
  1534                           	opt stack 0
  1535  000970                     _SetDDRamAddr:
  1536                           	opt stack 27
  1537                           
  1538                           ;incstack = 0
  1539                           ;SetDDRamAddr@DDaddr stored from wreg
  1540  000970  6E04               	movwf	SetDDRamAddr@DDaddr,c
  1541                           
  1542                           ;setddram.c: 32: TRISB &= 0xf0;
  1543  000972  0EF0               	movlw	240
  1544  000974  1693               	andwf	3987,f,c	;volatile
  1545                           
  1546                           ;setddram.c: 33: PORTB &= 0xf0;
  1547  000976  0EF0               	movlw	240
  1548  000978  1681               	andwf	3969,f,c	;volatile
  1549                           
  1550                           ;setddram.c: 34: PORTB |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  1551  00097A  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1552  00097C  6E01               	movwf	??_SetDDRamAddr& (0+255),c
  1553  00097E  6A02               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  1554  000980  8E01               	bsf	??_SetDDRamAddr,7,c
  1555  000982  0E04               	movlw	4
  1556  000984  6E03               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  1557  000986                     u25:
  1558  000986  3402               	rlcf	??_SetDDRamAddr+1,w,c
  1559  000988  3202               	rrcf	??_SetDDRamAddr+1,f,c
  1560  00098A  3201               	rrcf	??_SetDDRamAddr,f,c
  1561  00098C  2E03               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  1562  00098E  D7FB               	goto	u25
  1563  000990  5001               	movf	??_SetDDRamAddr,w,c
  1564  000992  0B0F               	andlw	15
  1565  000994  1281               	iorwf	3969,f,c	;volatile
  1566                           
  1567                           ;setddram.c: 36: LATAbits.LATA2 = 0;
  1568  000996  9489               	bcf	3977,2,c	;volatile
  1569                           
  1570                           ;setddram.c: 37: LATAbits.LATA3 = 0;
  1571  000998  9689               	bcf	3977,3,c	;volatile
  1572                           
  1573                           ;setddram.c: 38: DelayFor18TCY();
  1574  00099A  ECA8  F005         	call	_DelayFor18TCY	;wreg free
  1575                           
  1576                           ;setddram.c: 39: LATAbits.LATA1 = 1;
  1577  00099E  8289               	bsf	3977,1,c	;volatile
  1578                           
  1579                           ;setddram.c: 40: DelayFor18TCY();
  1580  0009A0  ECA8  F005         	call	_DelayFor18TCY	;wreg free
  1581                           
  1582                           ;setddram.c: 41: LATAbits.LATA1 = 0;
  1583  0009A4  9289               	bcf	3977,1,c	;volatile
  1584                           
  1585                           ;setddram.c: 46: PORTB &= 0xf0;
  1586  0009A6  0EF0               	movlw	240
  1587  0009A8  1681               	andwf	3969,f,c	;volatile
  1588                           
  1589                           ;setddram.c: 47: PORTB |= (DDaddr&0x0f);
  1590  0009AA  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1591  0009AC  0B0F               	andlw	15
  1592  0009AE  1281               	iorwf	3969,f,c	;volatile
  1593                           
  1594                           ;setddram.c: 49: DelayFor18TCY();
  1595  0009B0  ECA8  F005         	call	_DelayFor18TCY	;wreg free
  1596                           
  1597                           ;setddram.c: 50: LATAbits.LATA1 = 1;
  1598  0009B4  8289               	bsf	3977,1,c	;volatile
  1599                           
  1600                           ;setddram.c: 51: DelayFor18TCY();
  1601  0009B6  ECA8  F005         	call	_DelayFor18TCY	;wreg free
  1602                           
  1603                           ;setddram.c: 52: LATAbits.LATA1 = 0;
  1604  0009BA  9289               	bcf	3977,1,c	;volatile
  1605                           
  1606                           ;setddram.c: 56: TRISB |= 0x0f;
  1607  0009BC  0E0F               	movlw	15
  1608  0009BE  1293               	iorwf	3987,f,c	;volatile
  1609  0009C0  0012               	return	
  1610  0009C2                     __end_of_SetDDRamAddr:
  1611                           	opt stack 0
  1612                           tblptru	equ	0xFF8
  1613                           tblptrh	equ	0xFF7
  1614                           tblptrl	equ	0xFF6
  1615                           tablat	equ	0xFF5
  1616                           prodh	equ	0xFF4
  1617                           prodl	equ	0xFF3
  1618                           wreg	equ	0xFE8
  1619                           indf2	equ	0xFDF
  1620                           postinc2	equ	0xFDE
  1621                           postdec2	equ	0xFDD
  1622                           fsr2h	equ	0xFDA
  1623                           fsr2l	equ	0xFD9
  1624                           status	equ	0xFD8
  1625                           
  1626 ;; *************** function _DelayPORXLCD *****************
  1627 ;; Defined at:
  1628 ;;		line 54 in file "main.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;		None
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;		None
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1642 ;;      Params:         0       0       0       0       0       0       0
  1643 ;;      Locals:         0       0       0       0       0       0       0
  1644 ;;      Temps:          1       0       0       0       0       0       0
  1645 ;;      Totals:         1       0       0       0       0       0       0
  1646 ;;Total ram usage:        1 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_OpenXLCD
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text10
  1656  000B1C                     __ptext10:
  1657                           	opt stack 0
  1658  000B1C                     _DelayPORXLCD:
  1659                           	opt stack 28
  1660                           
  1661                           ;main.c: 56: _delay((unsigned long)((15)*(4000000/4000.0)));
  1662                           
  1663                           ;incstack = 0
  1664  000B1C  0E14               	movlw	20
  1665  000B1E  6E01               	movwf	??_DelayPORXLCD& (0+255),c
  1666  000B20  0E7A               	movlw	122
  1667  000B22                     u607:
  1668  000B22  2EE8               	decfsz	wreg,f,c
  1669  000B24  D7FE               	bra	u607
  1670  000B26  2E01               	decfsz	??_DelayPORXLCD& (0+255),f,c
  1671  000B28  D7FC               	bra	u607
  1672  000B2A  0012               	return		;funcret
  1673  000B2C                     __end_of_DelayPORXLCD:
  1674                           	opt stack 0
  1675                           tblptru	equ	0xFF8
  1676                           tblptrh	equ	0xFF7
  1677                           tblptrl	equ	0xFF6
  1678                           tablat	equ	0xFF5
  1679                           prodh	equ	0xFF4
  1680                           prodl	equ	0xFF3
  1681                           wreg	equ	0xFE8
  1682                           indf2	equ	0xFDF
  1683                           postinc2	equ	0xFDE
  1684                           postdec2	equ	0xFDD
  1685                           fsr2h	equ	0xFDA
  1686                           fsr2l	equ	0xFD9
  1687                           status	equ	0xFD8
  1688                           
  1689 ;; *************** function _Delay10KTCYx *****************
  1690 ;; Defined at:
  1691 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\pic18\d10ktcyx.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  unit            1    wreg     unsigned char 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  unit            1    1[COMRAM] unsigned char 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1705 ;;      Params:         0       0       0       0       0       0       0
  1706 ;;      Locals:         1       0       0       0       0       0       0
  1707 ;;      Temps:          1       0       0       0       0       0       0
  1708 ;;      Totals:         2       0       0       0       0       0       0
  1709 ;;Total ram usage:        2 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_OpenXLCD
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text11
  1719  000B06                     __ptext11:
  1720                           	opt stack 0
  1721  000B06                     _Delay10KTCYx:
  1722                           	opt stack 28
  1723                           
  1724                           ;incstack = 0
  1725                           ;Delay10KTCYx@unit stored from wreg
  1726  000B06  6E02               	movwf	Delay10KTCYx@unit,c
  1727  000B08                     l493:
  1728  000B08  0E0D               	movlw	13
  1729  000B0A  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  1730  000B0C  0EFC               	movlw	252
  1731  000B0E                     u617:
  1732  000B0E  2EE8               	decfsz	wreg,f,c
  1733  000B10  D7FE               	bra	u617
  1734  000B12  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1735  000B14  D7FC               	bra	u617
  1736  000B16  2E02               	decfsz	Delay10KTCYx@unit,f,c
  1737  000B18  D7F7               	goto	l493
  1738  000B1A  0012               	return	
  1739  000B1C                     __end_of_Delay10KTCYx:
  1740                           	opt stack 0
  1741                           tblptru	equ	0xFF8
  1742                           tblptrh	equ	0xFF7
  1743                           tblptrl	equ	0xFF6
  1744                           tablat	equ	0xFF5
  1745                           prodh	equ	0xFF4
  1746                           prodl	equ	0xFF3
  1747                           wreg	equ	0xFE8
  1748                           indf2	equ	0xFDF
  1749                           postinc2	equ	0xFDE
  1750                           postdec2	equ	0xFDD
  1751                           fsr2h	equ	0xFDA
  1752                           fsr2l	equ	0xFD9
  1753                           status	equ	0xFD8
  1754                           
  1755 ;; *************** function _BusyXLCD *****************
  1756 ;; Defined at:
  1757 ;;		line 11 in file "busyxlcd.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      unsigned char 
  1764 ;; Registers used:
  1765 ;;		wreg, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1771 ;;      Params:         0       0       0       0       0       0       0
  1772 ;;      Locals:         0       0       0       0       0       0       0
  1773 ;;      Temps:          0       0       0       0       0       0       0
  1774 ;;      Totals:         0       0       0       0       0       0       0
  1775 ;;Total ram usage:        0 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    1
  1778 ;; This function calls:
  1779 ;;		_DelayFor18TCY
  1780 ;; This function is called by:
  1781 ;;		_main
  1782 ;;		_init_XLCD
  1783 ;;		_OpenXLCD
  1784 ;;		_putrsXLCD
  1785 ;;		_putsXLCD
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text12
  1790  000A80                     __ptext12:
  1791                           	opt stack 0
  1792  000A80                     _BusyXLCD:
  1793                           	opt stack 28
  1794                           
  1795                           ;busyxlcd.c: 13: LATAbits.LATA2 = 1;
  1796                           
  1797                           ;incstack = 0
  1798  000A80  8489               	bsf	3977,2,c	;volatile
  1799                           
  1800                           ;busyxlcd.c: 14: LATAbits.LATA3 = 0;
  1801  000A82  9689               	bcf	3977,3,c	;volatile
  1802                           
  1803                           ;busyxlcd.c: 15: DelayFor18TCY();
  1804  000A84  ECA8  F005         	call	_DelayFor18TCY	;wreg free
  1805                           
  1806                           ;busyxlcd.c: 16: LATAbits.LATA1 = 1;
  1807  000A88  8289               	bsf	3977,1,c	;volatile
  1808                           
  1809                           ;busyxlcd.c: 17: DelayFor18TCY();
  1810  000A8A  ECA8  F005         	call	_DelayFor18TCY	;wreg free
  1811                           
  1812                           ;busyxlcd.c: 35: if(PORTB&0x08)
  1813  000A8E  A681               	btfss	3969,3,c	;volatile
  1814  000A90  D00A               	goto	l77
  1815                           
  1816                           ;busyxlcd.c: 37: {
  1817                           ;busyxlcd.c: 38: LATAbits.LATA1 = 0;
  1818  000A92  9289               	bcf	3977,1,c	;volatile
  1819                           
  1820                           ;busyxlcd.c: 39: DelayFor18TCY();
  1821  000A94  ECA8  F005         	call	_DelayFor18TCY	;wreg free
  1822                           
  1823                           ;busyxlcd.c: 40: LATAbits.LATA1 = 1;
  1824  000A98  8289               	bsf	3977,1,c	;volatile
  1825                           
  1826                           ;busyxlcd.c: 41: DelayFor18TCY();
  1827  000A9A  ECA8  F005         	call	_DelayFor18TCY	;wreg free
  1828                           
  1829                           ;busyxlcd.c: 42: LATAbits.LATA1 = 0;
  1830  000A9E  9289               	bcf	3977,1,c	;volatile
  1831                           
  1832                           ;busyxlcd.c: 43: LATAbits.LATA2 = 0;
  1833  000AA0  9489               	bcf	3977,2,c	;volatile
  1834                           
  1835                           ;busyxlcd.c: 44: return 1;
  1836  000AA2  0E01               	movlw	1
  1837                           
  1838                           ;busyxlcd.c: 45: }
  1839  000AA4  0012               	return	
  1840  000AA6                     l77:
  1841                           
  1842                           ;busyxlcd.c: 46: else
  1843                           ;busyxlcd.c: 47: {
  1844                           ;busyxlcd.c: 48: LATAbits.LATA1 = 0;
  1845  000AA6  9289               	bcf	3977,1,c	;volatile
  1846                           
  1847                           ;busyxlcd.c: 49: DelayFor18TCY();
  1848  000AA8  ECA8  F005         	call	_DelayFor18TCY	;wreg free
  1849                           
  1850                           ;busyxlcd.c: 50: LATAbits.LATA1 = 1;
  1851  000AAC  8289               	bsf	3977,1,c	;volatile
  1852                           
  1853                           ;busyxlcd.c: 51: DelayFor18TCY();
  1854  000AAE  ECA8  F005         	call	_DelayFor18TCY	;wreg free
  1855                           
  1856                           ;busyxlcd.c: 52: LATAbits.LATA1 = 0;
  1857  000AB2  9289               	bcf	3977,1,c	;volatile
  1858                           
  1859                           ;busyxlcd.c: 53: LATAbits.LATA2 = 0;
  1860  000AB4  9489               	bcf	3977,2,c	;volatile
  1861                           
  1862                           ;busyxlcd.c: 54: return 0;
  1863  000AB6  0E00               	movlw	0
  1864  000AB8  0012               	return	
  1865  000ABA                     __end_of_BusyXLCD:
  1866                           	opt stack 0
  1867                           tblptru	equ	0xFF8
  1868                           tblptrh	equ	0xFF7
  1869                           tblptrl	equ	0xFF6
  1870                           tablat	equ	0xFF5
  1871                           prodh	equ	0xFF4
  1872                           prodl	equ	0xFF3
  1873                           wreg	equ	0xFE8
  1874                           indf2	equ	0xFDF
  1875                           postinc2	equ	0xFDE
  1876                           postdec2	equ	0xFDD
  1877                           fsr2h	equ	0xFDA
  1878                           fsr2l	equ	0xFD9
  1879                           status	equ	0xFD8
  1880                           
  1881 ;; *************** function _DelayFor18TCY *****************
  1882 ;; Defined at:
  1883 ;;		line 49 in file "main.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;		None
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;		None
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      void 
  1890 ;; Registers used:
  1891 ;;		wreg
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1897 ;;      Params:         0       0       0       0       0       0       0
  1898 ;;      Locals:         0       0       0       0       0       0       0
  1899 ;;      Temps:          0       0       0       0       0       0       0
  1900 ;;      Totals:         0       0       0       0       0       0       0
  1901 ;;Total ram usage:        0 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_BusyXLCD
  1907 ;;		_SetDDRamAddr
  1908 ;;		_WriteCmdXLCD
  1909 ;;		_WriteDataXLCD
  1910 ;;		_ReadAddrXLCD
  1911 ;;		_ReadDataXLCD
  1912 ;;		_SetCGRamAddr
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text13
  1917  000B50                     __ptext13:
  1918                           	opt stack 0
  1919  000B50                     _DelayFor18TCY:
  1920                           	opt stack 28
  1921                           
  1922                           ;incstack = 0
  1923  000B50  0E06               	movlw	6
  1924  000B52                     u627:
  1925  000B52  2EE8               	decfsz	wreg,f,c
  1926  000B54  D7FE               	bra	u627
  1927  000B56  D000               	nop2	
  1928  000B58  0012               	return	
  1929  000B5A                     __end_of_DelayFor18TCY:
  1930                           	opt stack 0
  1931                           tblptru	equ	0xFF8
  1932                           tblptrh	equ	0xFF7
  1933                           tblptrl	equ	0xFF6
  1934                           tablat	equ	0xFF5
  1935                           prodh	equ	0xFF4
  1936                           prodl	equ	0xFF3
  1937                           wreg	equ	0xFE8
  1938                           indf2	equ	0xFDF
  1939                           postinc2	equ	0xFDE
  1940                           postdec2	equ	0xFDD
  1941                           fsr2h	equ	0xFDA
  1942                           fsr2l	equ	0xFD9
  1943                           status	equ	0xFD8
  1944                           
  1945 ;; *************** function _ReadADC *****************
  1946 ;; Defined at:
  1947 ;;		line 24 in file "adcread.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;		None
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  2    0[COMRAM] int 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1961 ;;      Params:         2       0       0       0       0       0       0
  1962 ;;      Locals:         0       0       0       0       0       0       0
  1963 ;;      Temps:          2       0       0       0       0       0       0
  1964 ;;      Totals:         4       0       0       0       0       0       0
  1965 ;;Total ram usage:        4 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_main
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text14
  1975  000B2C                     __ptext14:
  1976                           	opt stack 0
  1977  000B2C                     _ReadADC:
  1978                           	opt stack 30
  1979                           
  1980                           ;adcread.c: 26: return (((unsigned int)ADRESH)<<8)|(ADRESL);
  1981                           
  1982                           ;incstack = 0
  1983  000B2C  50C4               	movf	4036,w,c	;volatile
  1984  000B2E  6E03               	movwf	??_ReadADC& (0+255),c
  1985  000B30  50C3               	movf	4035,w,c	;volatile
  1986  000B32  6E01               	movwf	?_ReadADC,c
  1987  000B34  C003  F002         	movff	??_ReadADC,?_ReadADC+1
  1988  000B38  0012               	return	
  1989  000B3A                     __end_of_ReadADC:
  1990                           	opt stack 0
  1991                           tblptru	equ	0xFF8
  1992                           tblptrh	equ	0xFF7
  1993                           tblptrl	equ	0xFF6
  1994                           tablat	equ	0xFF5
  1995                           prodh	equ	0xFF4
  1996                           prodl	equ	0xFF3
  1997                           wreg	equ	0xFE8
  1998                           indf2	equ	0xFDF
  1999                           postinc2	equ	0xFDE
  2000                           postdec2	equ	0xFDD
  2001                           fsr2h	equ	0xFDA
  2002                           fsr2l	equ	0xFD9
  2003                           status	equ	0xFD8
  2004                           
  2005 ;; *************** function _OpenADC *****************
  2006 ;; Defined at:
  2007 ;;		line 68 in file "adcopen.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  config          1    wreg     unsigned char 
  2010 ;;  config2         1    0[COMRAM] unsigned char 
  2011 ;;  portconfig      1    1[COMRAM] unsigned char 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  config          1    4[COMRAM] unsigned char 
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, status,2, status,0
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2023 ;;      Params:         2       0       0       0       0       0       0
  2024 ;;      Locals:         1       0       0       0       0       0       0
  2025 ;;      Temps:          2       0       0       0       0       0       0
  2026 ;;      Totals:         5       0       0       0       0       0       0
  2027 ;;Total ram usage:        5 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; This function calls:
  2030 ;;		Nothing
  2031 ;; This function is called by:
  2032 ;;		_main
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           	psect	text15
  2037  0008C0                     __ptext15:
  2038                           	opt stack 0
  2039  0008C0                     _OpenADC:
  2040                           	opt stack 30
  2041                           
  2042                           ;incstack = 0
  2043                           ;OpenADC@config stored from wreg
  2044  0008C0  6E05               	movwf	OpenADC@config,c
  2045                           
  2046                           ;adcopen.c: 72: ADCON0 = 0;
  2047  0008C2  0E00               	movlw	0
  2048  0008C4  6EC2               	movwf	4034,c	;volatile
  2049                           
  2050                           ;adcopen.c: 73: ADCON2 = 0;
  2051  0008C6  0E00               	movlw	0
  2052  0008C8  6EC0               	movwf	4032,c	;volatile
  2053                           
  2054                           ;adcopen.c: 75: ADCON0 = (config2 >> 1) & 0b00111100;
  2055  0008CA  90D8               	bcf	status,0,c
  2056  0008CC  3001               	rrcf	OpenADC@config2,w,c
  2057  0008CE  0B3C               	andlw	60
  2058  0008D0  6EC2               	movwf	4034,c	;volatile
  2059                           
  2060                           ;adcopen.c: 76: ADCON1 = (portconfig & 0b00001111) |
  2061                           ;adcopen.c: 77: ((config2 << 4) & 0b00110000);
  2062  0008D2  C001  F003         	movff	OpenADC@config2,??_OpenADC
  2063  0008D6  3A03               	swapf	??_OpenADC,f,c
  2064  0008D8  0EF0               	movlw	240
  2065  0008DA  1603               	andwf	??_OpenADC,f,c
  2066  0008DC  0E30               	movlw	48
  2067  0008DE  1603               	andwf	??_OpenADC,f,c
  2068  0008E0  5002               	movf	OpenADC@portconfig,w,c
  2069  0008E2  0B0F               	andlw	15
  2070  0008E4  1003               	iorwf	??_OpenADC,w,c
  2071  0008E6  6EC1               	movwf	4033,c	;volatile
  2072                           
  2073                           ;adcopen.c: 78: ADCON2 = (config & 0b10000000) |
  2074                           ;adcopen.c: 79: ((config >> 4) & 0b00000111) |
  2075                           ;adcopen.c: 80: ((config << 2) & 0b00111000);
  2076  0008E8  C005  F003         	movff	OpenADC@config,??_OpenADC
  2077  0008EC  90D8               	bcf	status,0,c
  2078  0008EE  3603               	rlcf	??_OpenADC,f,c
  2079  0008F0  90D8               	bcf	status,0,c
  2080  0008F2  3603               	rlcf	??_OpenADC,f,c
  2081  0008F4  0E38               	movlw	56
  2082  0008F6  1603               	andwf	??_OpenADC,f,c
  2083  0008F8  C005  F004         	movff	OpenADC@config,??_OpenADC+1
  2084  0008FC  3A04               	swapf	??_OpenADC+1,f,c
  2085  0008FE  0E0F               	movlw	15
  2086  000900  1604               	andwf	??_OpenADC+1,f,c
  2087  000902  0E07               	movlw	7
  2088  000904  1604               	andwf	??_OpenADC+1,f,c
  2089  000906  5005               	movf	OpenADC@config,w,c
  2090  000908  0B80               	andlw	128
  2091  00090A  1004               	iorwf	??_OpenADC+1,w,c
  2092  00090C  1003               	iorwf	??_OpenADC,w,c
  2093  00090E  6EC0               	movwf	4032,c	;volatile
  2094                           
  2095                           ;adcopen.c: 82: if( config2 & 0b10000000 )
  2096  000910  AE01               	btfss	OpenADC@config2,7,c
  2097  000912  D003               	goto	l243
  2098                           
  2099                           ;adcopen.c: 83: {
  2100                           ;adcopen.c: 84: PIR1bits.ADIF = 0;
  2101  000914  9C9E               	bcf	3998,6,c	;volatile
  2102                           
  2103                           ;adcopen.c: 85: PIE1bits.ADIE = 1;
  2104  000916  8C9D               	bsf	3997,6,c	;volatile
  2105                           
  2106                           ;adcopen.c: 86: INTCONbits.PEIE = 1;
  2107  000918  8CF2               	bsf	intcon,6,c	;volatile
  2108  00091A                     l243:
  2109                           
  2110                           ;adcopen.c: 87: }
  2111                           ;adcopen.c: 88: ADCON0bits.ADON = 1;
  2112  00091A  80C2               	bsf	4034,0,c	;volatile
  2113  00091C  0012               	return		;funcret
  2114  00091E                     __end_of_OpenADC:
  2115                           	opt stack 0
  2116                           tblptru	equ	0xFF8
  2117                           tblptrh	equ	0xFF7
  2118                           tblptrl	equ	0xFF6
  2119                           tablat	equ	0xFF5
  2120                           prodh	equ	0xFF4
  2121                           prodl	equ	0xFF3
  2122                           intcon	equ	0xFF2
  2123                           wreg	equ	0xFE8
  2124                           indf2	equ	0xFDF
  2125                           postinc2	equ	0xFDE
  2126                           postdec2	equ	0xFDD
  2127                           fsr2h	equ	0xFDA
  2128                           fsr2l	equ	0xFD9
  2129                           status	equ	0xFD8
  2130                           
  2131 ;; *************** function _ConvertADC *****************
  2132 ;; Defined at:
  2133 ;;		line 22 in file "adcconv.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;		None
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		None
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2147 ;;      Params:         0       0       0       0       0       0       0
  2148 ;;      Locals:         0       0       0       0       0       0       0
  2149 ;;      Temps:          0       0       0       0       0       0       0
  2150 ;;      Totals:         0       0       0       0       0       0       0
  2151 ;;Total ram usage:        0 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; This function calls:
  2154 ;;		Nothing
  2155 ;; This function is called by:
  2156 ;;		_main
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text16
  2161  000B60                     __ptext16:
  2162                           	opt stack 0
  2163  000B60                     _ConvertADC:
  2164                           	opt stack 30
  2165                           
  2166                           ;adcconv.c: 24: ADCON0bits.GO = 1;
  2167                           
  2168                           ;incstack = 0
  2169  000B60  82C2               	bsf	4034,1,c	;volatile
  2170  000B62  0012               	return		;funcret
  2171  000B64                     __end_of_ConvertADC:
  2172                           	opt stack 0
  2173                           tblptru	equ	0xFF8
  2174                           tblptrh	equ	0xFF7
  2175                           tblptrl	equ	0xFF6
  2176                           tablat	equ	0xFF5
  2177                           prodh	equ	0xFF4
  2178                           prodl	equ	0xFF3
  2179                           intcon	equ	0xFF2
  2180                           wreg	equ	0xFE8
  2181                           indf2	equ	0xFDF
  2182                           postinc2	equ	0xFDE
  2183                           postdec2	equ	0xFDD
  2184                           fsr2h	equ	0xFDA
  2185                           fsr2l	equ	0xFD9
  2186                           status	equ	0xFD8
  2187                           
  2188 ;; *************** function _CloseADC *****************
  2189 ;; Defined at:
  2190 ;;		line 23 in file "adcclose.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;		None
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;		None
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      void 
  2197 ;; Registers used:
  2198 ;;		None
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2204 ;;      Params:         0       0       0       0       0       0       0
  2205 ;;      Locals:         0       0       0       0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0
  2207 ;;      Totals:         0       0       0       0       0       0       0
  2208 ;;Total ram usage:        0 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_main
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text17
  2218  000B5A                     __ptext17:
  2219                           	opt stack 0
  2220  000B5A                     _CloseADC:
  2221                           	opt stack 30
  2222                           
  2223                           ;adcclose.c: 25: ADCON0bits.ADON = 0;
  2224                           
  2225                           ;incstack = 0
  2226  000B5A  90C2               	bcf	4034,0,c	;volatile
  2227                           
  2228                           ;adcclose.c: 26: PIE1bits.ADIE = 0;
  2229  000B5C  9C9D               	bcf	3997,6,c	;volatile
  2230  000B5E  0012               	return		;funcret
  2231  000B60                     __end_of_CloseADC:
  2232                           	opt stack 0
  2233                           tblptru	equ	0xFF8
  2234                           tblptrh	equ	0xFF7
  2235                           tblptrl	equ	0xFF6
  2236                           tablat	equ	0xFF5
  2237                           prodh	equ	0xFF4
  2238                           prodl	equ	0xFF3
  2239                           intcon	equ	0xFF2
  2240                           wreg	equ	0xFE8
  2241                           indf2	equ	0xFDF
  2242                           postinc2	equ	0xFDE
  2243                           postdec2	equ	0xFDD
  2244                           fsr2h	equ	0xFDA
  2245                           fsr2l	equ	0xFD9
  2246                           status	equ	0xFD8
  2247                           
  2248 ;; *************** function _BusyADC *****************
  2249 ;; Defined at:
  2250 ;;		line 26 in file "adcbusy.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      unsigned char 
  2257 ;; Registers used:
  2258 ;;		wreg
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2264 ;;      Params:         0       0       0       0       0       0       0
  2265 ;;      Locals:         0       0       0       0       0       0       0
  2266 ;;      Temps:          0       0       0       0       0       0       0
  2267 ;;      Totals:         0       0       0       0       0       0       0
  2268 ;;Total ram usage:        0 bytes
  2269 ;; Hardware stack levels used:    1
  2270 ;; This function calls:
  2271 ;;		Nothing
  2272 ;; This function is called by:
  2273 ;;		_main
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text18
  2278  000B3A                     __ptext18:
  2279                           	opt stack 0
  2280  000B3A                     _BusyADC:
  2281                           	opt stack 30
  2282                           
  2283                           ;adcbusy.c: 28: return(ADCON0bits.GO);
  2284                           
  2285                           ;incstack = 0
  2286  000B3A  A2C2               	btfss	4034,1,c	;volatile
  2287  000B3C  D002               	goto	u180
  2288  000B3E  0E01               	movlw	1
  2289  000B40  0012               	return	
  2290  000B42                     u180:
  2291  000B42  0E00               	movlw	0
  2292  000B44  0012               	return	
  2293  000B46                     __end_of_BusyADC:
  2294                           	opt stack 0
  2295                           tblptru	equ	0xFF8
  2296                           tblptrh	equ	0xFF7
  2297                           tblptrl	equ	0xFF6
  2298                           tablat	equ	0xFF5
  2299                           prodh	equ	0xFF4
  2300                           prodl	equ	0xFF3
  2301                           intcon	equ	0xFF2
  2302                           wreg	equ	0xFE8
  2303                           indf2	equ	0xFDF
  2304                           postinc2	equ	0xFDE
  2305                           postdec2	equ	0xFDD
  2306                           fsr2h	equ	0xFDA
  2307                           fsr2l	equ	0xFD9
  2308                           status	equ	0xFD8
  2309                           tblptru	equ	0xFF8
  2310                           tblptrh	equ	0xFF7
  2311                           tblptrl	equ	0xFF6
  2312                           tablat	equ	0xFF5
  2313                           prodh	equ	0xFF4
  2314                           prodl	equ	0xFF3
  2315                           intcon	equ	0xFF2
  2316                           wreg	equ	0xFE8
  2317                           indf2	equ	0xFDF
  2318                           postinc2	equ	0xFDE
  2319                           postdec2	equ	0xFDD
  2320                           fsr2h	equ	0xFDA
  2321                           fsr2l	equ	0xFD9
  2322                           status	equ	0xFD8
  2323                           
  2324                           	psect	rparam
  2325  0000                     tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           prodh	equ	0xFF4
  2330                           prodl	equ	0xFF3
  2331                           intcon	equ	0xFF2
  2332                           wreg	equ	0xFE8
  2333                           indf2	equ	0xFDF
  2334                           postinc2	equ	0xFDE
  2335                           postdec2	equ	0xFDD
  2336                           fsr2h	equ	0xFDA
  2337                           fsr2l	equ	0xFD9
  2338                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     46      46
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(COMRAM[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 10
		 -> main@buffer(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _putrsXLCD->_WriteDataXLCD
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0    2049
                                             26 COMRAM    20    20      0
                            _BusyADC
                           _BusyXLCD
                           _CloseADC
                         _ConvertADC
                            _OpenADC
                            _ReadADC
                          _init_XLCD
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    17      6    1254
                                             12 COMRAM    14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            2     0      2     151
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     120
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0      90
                                              4 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      30
                                              0 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     306
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CloseADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _BusyXLCD
     _DelayFor18TCY
   _CloseADC
   _ConvertADC
   _OpenADC
   _ReadADC
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _Delay10KTCYx
       _DelayPORXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _putrsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     2E      2E       1       36.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Oct 23 15:36:12 2017

                     l43 07D6                       l37 0792                       l46 07E4  
                     l39 0796                       l49 07FA                       l66 0AEE  
                     l77 0AA6                       u30 085E                       u25 0986  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$XT 000000  
            __CFG_LVP$ON 000000                      l101 0854                      l110 087E  
                    l113 088E                      l107 086E                      l116 089E  
                    l119 08AE                      l128 0AD8                      l129 0ABC  
                    l243 091A                      l280 065E                      l273 061A  
                    l282 0686                      l274 0634                      l702 093C  
                    l286 06D2                      l703 0934                      l287 072A  
                    l712 09D8                      l288 06D8                      l713 09D0  
                    l706 095C                      l707 0966                      l716 09F0  
                    l493 0B08                      l717 09FA             __CFG_CPB$OFF 000000  
                    u410 09DC                      u180 0B42                      u500 0732  
                    u510 074A             __CFG_CPD$OFF 000000                      u380 0940  
                    u550 07BA                      u607 0B22                      u480 06B6  
                    u617 0B0E                      u627 0B52                      u580 0804  
                    u597 0812    __size_of_WriteCmdXLCD 003E                      wreg 000FE8  
            main@config1 002A              main@config2 002B              main@config3 0026  
           __CFG_WDT$OFF 000000                     l1452 068A                     STR_1 060B  
                   _LATA 000F89                     _LATB 000F8A             __CFG_PWRT$ON 000000  
                   _main 0758                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9   __size_of_WriteDataXLCD 003E                     prodh 000FF4  
                   prodl 000FF3                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000          __end_of_BusyADC 0B46  
        __end_of_ReadADC 0B3A          __end_of_OpenADC 091E             _WriteCmdXLCD 0A42  
          ?_SetDDRamAddr 0001                    ?_main 0001          __end_of___lwdiv 0970  
        __end_of___lwmod 0A04                    _PORTB 000F81                    _TRISB 000F93  
  __size_of_Delay10KTCYx 0016            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000          __end_of_dpowers 060B  
                  main@i 0027               _ConvertADC 0B60           __CFG_BOREN$OFF 000000  
                  tablat 000FF5                    status 000FD8          __end_of_sprintf 0758  
       __end_of_CloseADC 0B60          __initialization 0B46             __end_of_main 081C  
       __end_of_BusyXLCD 0ABA             _Delay10KTCYx 0B06    __size_of_DelayPORXLCD 0010  
         ??_SetDDRamAddr 0001         __end_of_OpenXLCD 08C0                   ??_main 001B  
          __activetblptr 000002            _WriteDataXLCD 0A04                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3                ??_BusyADC 0001                ??_ReadADC 0003  
              ??_OpenADC 0003             _DelayPORXLCD 0B1C           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000                ??___lwdiv 0005                ??___lwmod 000C  
         ?_WriteDataXLCD 0001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_sprintf 0013  
            ?_ConvertADC 0001               __accesstop 0080  __end_of__initialization 0B46  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
              ?_CloseADC 0001   __size_of_DelayFor18TCY 000A                ?_BusyXLCD 0001  
        WriteCmdXLCD@cmd 0001     __end_of_SetDDRamAddr 09C2       __size_of_init_XLCD 001E  
              ?_OpenXLCD 0001        WriteDataXLCD@data 0001          ??_WriteDataXLCD 0001  
    __size_of_ConvertADC 0004               ??_CloseADC 0001       __size_of_putrsXLCD 002E  
             ??_BusyXLCD 0001                  _BusyADC 0B3A                  _ReadADC 0B2C  
             ??_OpenXLCD 0005                  _OpenADC 08C0                  __Hparam 0000  
                __Lparam 0000            _DelayFor18TCY 0B50                  ___lwdiv 091E  
                ___lwmod 09C2             __psmallconst 0600                  __pcinit 0B46  
        putrsXLCD@buffer 0002                  __ramtop 0600                  __ptext0 0758  
                __ptext1 0610                  __ptext2 09C2                  __ptext3 091E  
                __ptext4 0ABA                  __ptext5 0A04                  __ptext6 0AE8  
                __ptext7 081C                  __ptext8 0A42                  __ptext9 0970  
      __end_of_init_XLCD 0B06                  _dpowers 0601           OpenADC@config2 0001  
                _sprintf 0610                  main@tmp 002D     end_of_initialization 0B46  
          __Lmediumconst 0000           main@testbuffer 0028           main@portconfig 002C  
         ?_DelayFor18TCY 0001                  postdec2 000FDD                  postinc2 000FDE  
      __end_of_putrsXLCD 0AE8                _TRISAbits 000F92    __size_of_SetDDRamAddr 0052  
           ??_ConvertADC 0001               main@buffer 001C       __end_of_ConvertADC 0B64  
           _SetDDRamAddr 0970       SetDDRamAddr@DDaddr 0004      start_initialization 0B46  
      __size_of_CloseADC 0006        __size_of_BusyXLCD 003A          ??_DelayFor18TCY 0001  
      __size_of_OpenXLCD 00A4            ?_WriteCmdXLCD 0001         __CFG_LPT1OSC$OFF 000000  
            sprintf@flag 0016              sprintf@prec 0017                 ?_BusyADC 0001  
               ?_ReadADC 0001        OpenADC@portconfig 0002                 ?_OpenADC 0001  
       ___lwdiv@dividend 0001        __CFG_CCP2MX$PORTC 000000           ??_WriteCmdXLCD 0001  
          ?_Delay10KTCYx 0001                 ?___lwdiv 0001                 ?___lwmod 0008  
  __end_of_WriteDataXLCD 0A42              __smallconst 0600                _init_XLCD 0AE8  
       ___lwdiv@quotient 0005                 ?_sprintf 000D            OpenADC@config 0005  
               _LATAbits 000F89                 _PIE1bits 000F9D            ?_DelayPORXLCD 0001  
               _PIR1bits 000F9E          OpenXLCD@lcdtype 0005         __CFG_WDTPS$32768 000000  
         ??_Delay10KTCYx 0001               _ADCON0bits 000FC2                _putrsXLCD 0ABA  
       Delay10KTCYx@unit 0002               ?_init_XLCD 0001                 _CloseADC 0B5A  
               _BusyXLCD 0A80           ??_DelayPORXLCD 0001                 _OpenXLCD 081C  
       __size_of_BusyADC 000C         __size_of_ReadADC 000E                 __Hrparam 0000  
       __size_of_OpenADC 005E                 __Lrparam 0000         __size_of___lwdiv 0052  
       __size_of___lwmod 0042               sprintf@val 0018               ?_putrsXLCD 0002  
        ___lwdiv@divisor 0003          ___lwdiv@counter 0007                 __ptext10 0B1C  
               __ptext11 0B06                 __ptext12 0A80                 __ptext13 0B50  
               __ptext14 0B2C                 __ptext15 08C0                 __ptext16 0B60  
               __ptext17 0B5A                 __ptext18 0B3A     __end_of_WriteCmdXLCD 0A80  
       __size_of_sprintf 0148            __size_of_main 00C4               _INTCONbits 000FF2  
            ??_init_XLCD 0006     __end_of_Delay10KTCYx 0B1C                sprintf@ap 0014  
              sprintf@sp 000D         ___lwmod@dividend 0008    __end_of_DelayFor18TCY 0B5A  
               sprintf@c 001A                 sprintf@f 000F     __end_of_DelayPORXLCD 0B2C  
            ??_putrsXLCD 0004          ___lwmod@divisor 000A          ___lwmod@counter 000C  
