

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Oct 30 14:40:29 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	text10,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20  0000                     
    21                           ; Version 1.44
    22                           ; Generated 14/09/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4520 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _ADRESL	set	4035
    56  0000                     _ADRESH	set	4036
    57  0000                     _INTCONbits	set	4082
    58  0000                     _PIR1bits	set	3998
    59  0000                     _ADCON1	set	4033
    60  0000                     _ADCON2	set	4032
    61  0000                     _ADCON0	set	4034
    62  0000                     _PIE1bits	set	3997
    63  0000                     _ADCON0bits	set	4034
    64  0000                     _TRISAbits	set	3986
    65  0000                     _TRISB	set	3987
    66  0000                     _PORTB	set	3969
    67  0000                     _LATAbits	set	3977
    68  0000                     _PORTDbits	set	3971
    69  0000                     _TRISDbits	set	3989
    70  0000                     _TRISD	set	3989
    71  0000                     _LATB	set	3978
    72  0000                     _LATA	set	3977
    73                           
    74                           ; #config settings
    75  0000                     
    76                           	psect	cinit
    77  007B14                     __pcinit:
    78                           	opt stack 0
    79  007B14                     start_initialization:
    80                           	opt stack 0
    81  007B14                     __initialization:
    82                           	opt stack 0
    83  007B14                     end_of_initialization:
    84                           	opt stack 0
    85  007B14                     __end_of__initialization:
    86                           	opt stack 0
    87  007B14  0100               	movlb	0
    88  007B16  EFA1  F03E         	goto	_main	;jump to C main() function
    89                           
    90                           	psect	cstackCOMRAM
    91  000001                     __pcstackCOMRAM:
    92                           	opt stack 0
    93  000001                     ??_Delay10KTCYx:
    94  000001                     ??_SetDDRamAddr:
    95  000001                     ??_DelayPORXLCD:
    96  000001                     WriteCmdXLCD@cmd:
    97                           	opt stack 0
    98  000001                     WriteDataXLCD@data:
    99                           	opt stack 0
   100                           
   101                           ; 1 bytes @ 0x0
   102  000001                     	ds	1
   103  000002                     Delay10KTCYx@unit:
   104                           	opt stack 0
   105  000002                     putrsXLCD@buffer:
   106                           	opt stack 0
   107                           
   108                           ; 2 bytes @ 0x1
   109  000002                     	ds	2
   110  000004                     SetDDRamAddr@DDaddr:
   111                           	opt stack 0
   112                           
   113                           ; 1 bytes @ 0x3
   114  000004                     	ds	1
   115  000005                     OpenXLCD@lcdtype:
   116                           	opt stack 0
   117                           
   118                           ; 1 bytes @ 0x4
   119  000005                     	ds	1
   120  000006                     ??_main:
   121                           
   122                           ; 1 bytes @ 0x5
   123  000006                     	ds	2
   124  000008                     main@recorded:
   125                           	opt stack 0
   126                           
   127                           ; 2 bytes @ 0x7
   128  000008                     	ds	2
   129  00000A                     main@startcount:
   130                           	opt stack 0
   131                           
   132                           ; 2 bytes @ 0x9
   133  00000A                     	ds	2
   134  00000C                     main@duration:
   135                           	opt stack 0
   136                           
   137                           ; 2 bytes @ 0xB
   138  00000C                     	ds	2
   139  00000E                     main@rd0end:
   140                           	opt stack 0
   141                           
   142                           ; 2 bytes @ 0xD
   143  00000E                     	ds	2
   144  000010                     main@rd1end:
   145                           	opt stack 0
   146                           
   147                           ; 2 bytes @ 0xF
   148  000010                     	ds	2
   149  000012                     main@rd2end:
   150                           	opt stack 0
   151                           
   152                           ; 2 bytes @ 0x11
   153  000012                     	ds	2
   154  000014                     main@tempcounter:
   155                           	opt stack 0
   156                           
   157                           ; 4 bytes @ 0x13
   158  000014                     	ds	4
   159  000018                     main@count:
   160                           	opt stack 0
   161                           
   162                           ; 4 bytes @ 0x17
   163  000018                     	ds	4
   164  00001C                     main@order:
   165                           	opt stack 0
   166                           
   167                           ; 3 bytes @ 0x1B
   168  00001C                     	ds	3
   169                           
   170 ;;
   171 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   172 ;;
   173 ;; *************** function _main *****************
   174 ;; Defined at:
   175 ;;		line 6 in file "main.c"
   176 ;; Parameters:    Size  Location     Type
   177 ;;		None
   178 ;; Auto vars:     Size  Location     Type
   179 ;;  count           4   23[COMRAM] unsigned long 
   180 ;;  tempcounter     4   19[COMRAM] unsigned long 
   181 ;;  order           3   27[COMRAM] unsigned char [3]
   182 ;;  rd2end          2   17[COMRAM] int 
   183 ;;  rd1end          2   15[COMRAM] int 
   184 ;;  rd0end          2   13[COMRAM] int 
   185 ;;  duration        2   11[COMRAM] int 
   186 ;;  startcount      2    9[COMRAM] int 
   187 ;;  recorded        2    7[COMRAM] int 
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   192 ;; Tracked objects:
   193 ;;		On entry : 0/0
   194 ;;		On exit  : 0/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   197 ;;      Params:         0       0       0       0       0       0       0
   198 ;;      Locals:        23       0       0       0       0       0       0
   199 ;;      Temps:          2       0       0       0       0       0       0
   200 ;;      Totals:        25       0       0       0       0       0       0
   201 ;;Total ram usage:       25 bytes
   202 ;; Hardware stack levels required when called:    4
   203 ;; This function calls:
   204 ;;		_init_XLCD
   205 ;;		_putrsXLCD
   206 ;; This function is called by:
   207 ;;		Startup code after reset
   208 ;; This function uses a non-reentrant model
   209 ;;
   210                           
   211                           	psect	text0
   212  007D42                     __ptext0:
   213                           	opt stack 0
   214  007D42                     _main:
   215                           	opt stack 27
   216                           
   217                           ;main.c: 8: LATA = 0xFF;
   218                           
   219                           ;incstack = 0
   220  007D42  6889               	setf	3977,c	;volatile
   221                           
   222                           ;main.c: 9: LATB = 0xFF;
   223  007D44  688A               	setf	3978,c	;volatile
   224                           
   225                           ;main.c: 10: TRISD = 0;
   226  007D46  0E00               	movlw	0
   227  007D48  6E95               	movwf	3989,c	;volatile
   228                           
   229                           ;main.c: 11: TRISDbits.RD0 = 1;
   230  007D4A  8095               	bsf	3989,0,c	;volatile
   231                           
   232                           ;main.c: 12: TRISDbits.RD1 = 1;
   233  007D4C  8295               	bsf	3989,1,c	;volatile
   234                           
   235                           ;main.c: 13: TRISDbits.RD2 = 1;
   236  007D4E  8495               	bsf	3989,2,c	;volatile
   237                           
   238                           ;main.c: 14: int recorded = 0;
   239  007D50  0E00               	movlw	0
   240  007D52  6E09               	movwf	main@recorded+1,c
   241  007D54  0E00               	movlw	0
   242  007D56  6E08               	movwf	main@recorded,c
   243                           
   244                           ;main.c: 16: init_XLCD();
   245  007D58  ECA5  F03D         	call	_init_XLCD	;wreg free
   246                           
   247                           ;main.c: 17: int startcount = 0;
   248  007D5C  0E00               	movlw	0
   249  007D5E  6E0B               	movwf	main@startcount+1,c
   250  007D60  0E00               	movlw	0
   251  007D62  6E0A               	movwf	main@startcount,c
   252                           
   253                           ;main.c: 18: char order[3];
   254                           ;main.c: 19: int rd0end = 1;
   255  007D64  0E00               	movlw	0
   256  007D66  6E0F               	movwf	main@rd0end+1,c
   257  007D68  0E01               	movlw	1
   258  007D6A  6E0E               	movwf	main@rd0end,c
   259                           
   260                           ;main.c: 20: int rd1end = 1;
   261  007D6C  0E00               	movlw	0
   262  007D6E  6E11               	movwf	main@rd1end+1,c
   263  007D70  0E01               	movlw	1
   264  007D72  6E10               	movwf	main@rd1end,c
   265                           
   266                           ;main.c: 21: int rd2end = 1;
   267  007D74  0E00               	movlw	0
   268  007D76  6E13               	movwf	main@rd2end+1,c
   269  007D78  0E01               	movlw	1
   270  007D7A  6E12               	movwf	main@rd2end,c
   271                           
   272                           ;main.c: 22: int duration;
   273                           ;main.c: 23: unsigned long tempcounter = 0;
   274  007D7C  0E00               	movlw	0
   275  007D7E  6E14               	movwf	main@tempcounter,c
   276  007D80  0E00               	movlw	0
   277  007D82  6E15               	movwf	main@tempcounter+1,c
   278  007D84  0E00               	movlw	0
   279  007D86  6E16               	movwf	main@tempcounter+2,c
   280  007D88  0E00               	movlw	0
   281  007D8A  6E17               	movwf	main@tempcounter+3,c
   282                           
   283                           ;main.c: 24: unsigned long count = 0;
   284  007D8C  0E00               	movlw	0
   285  007D8E  6E18               	movwf	main@count,c
   286  007D90  0E00               	movlw	0
   287  007D92  6E19               	movwf	main@count+1,c
   288  007D94  0E00               	movlw	0
   289  007D96  6E1A               	movwf	main@count+2,c
   290  007D98  0E00               	movlw	0
   291  007D9A  6E1B               	movwf	main@count+3,c
   292  007D9C                     
   293                           ;main.c: 26: ++count;
   294  007D9C  0E01               	movlw	1
   295  007D9E  2618               	addwf	main@count,f,c
   296  007DA0  0E00               	movlw	0
   297  007DA2  2219               	addwfc	main@count+1,f,c
   298  007DA4  221A               	addwfc	main@count+2,f,c
   299  007DA6  221B               	addwfc	main@count+3,f,c
   300                           
   301                           ;main.c: 27: if(count == 100000) {
   302  007DA8  0EA0               	movlw	160
   303  007DAA  1818               	xorwf	main@count,w,c
   304  007DAC  E123               	bnz	l1401
   305  007DAE  0E86               	movlw	134
   306  007DB0  1819               	xorwf	main@count+1,w,c
   307  007DB2  E120               	bnz	l1401
   308  007DB4  041A               	decf	main@count+2,w,c
   309  007DB6  101B               	iorwf	main@count+3,w,c
   310  007DB8  A4D8               	btfss	status,2,c
   311  007DBA  D01C               	goto	l28
   312                           
   313                           ;main.c: 29: init_XLCD();
   314  007DBC  ECA5  F03D         	call	_init_XLCD	;wreg free
   315                           
   316                           ;main.c: 30: order[0] = (0);
   317  007DC0  0E00               	movlw	0
   318  007DC2  6E1C               	movwf	main@order,c
   319                           
   320                           ;main.c: 31: order[1] = (0);
   321  007DC4  0E00               	movlw	0
   322  007DC6  6E1D               	movwf	main@order+1,c
   323                           
   324                           ;main.c: 32: order[2] = (0);
   325  007DC8  0E00               	movlw	0
   326  007DCA  6E1E               	movwf	main@order+2,c
   327                           
   328                           ;main.c: 33: rd0end = 1;
   329  007DCC  0E00               	movlw	0
   330  007DCE  6E0F               	movwf	main@rd0end+1,c
   331  007DD0  0E01               	movlw	1
   332  007DD2  6E0E               	movwf	main@rd0end,c
   333                           
   334                           ;main.c: 34: rd1end = 1;
   335  007DD4  0E00               	movlw	0
   336  007DD6  6E11               	movwf	main@rd1end+1,c
   337  007DD8  0E01               	movlw	1
   338  007DDA  6E10               	movwf	main@rd1end,c
   339                           
   340                           ;main.c: 35: rd2end = 1;
   341  007DDC  0E00               	movlw	0
   342  007DDE  6E13               	movwf	main@rd2end+1,c
   343  007DE0  0E01               	movlw	1
   344  007DE2  6E12               	movwf	main@rd2end,c
   345                           
   346                           ;main.c: 36: count = 0;
   347  007DE4  0E00               	movlw	0
   348  007DE6  6E18               	movwf	main@count,c
   349  007DE8  0E00               	movlw	0
   350  007DEA  6E19               	movwf	main@count+1,c
   351  007DEC  0E00               	movlw	0
   352  007DEE  6E1A               	movwf	main@count+2,c
   353  007DF0  0E00               	movlw	0
   354  007DF2  6E1B               	movwf	main@count+3,c
   355  007DF4                     l28:
   356  007DF4                     l1401:
   357                           
   358                           ;main.c: 37: }
   359                           ;main.c: 40: if(PORTDbits.RD0 == 1 && rd0end == 1) {
   360  007DF4  A083               	btfss	3971,0,c	;volatile
   361  007DF6  D055               	goto	l33
   362  007DF8  040E               	decf	main@rd0end,w,c
   363  007DFA  100F               	iorwf	main@rd0end+1,w,c
   364  007DFC  A4D8               	btfss	status,2,c
   365  007DFE  D051               	goto	l33
   366                           
   367                           ;main.c: 41: rd0end = 0;
   368  007E00  0E00               	movlw	0
   369  007E02  6E0F               	movwf	main@rd0end+1,c
   370  007E04  0E00               	movlw	0
   371  007E06  6E0E               	movwf	main@rd0end,c
   372                           
   373                           ;main.c: 42: if(order[0] == (0)) {
   374  007E08  501C               	movf	main@order,w,c
   375  007E0A  A4D8               	btfss	status,2,c
   376  007E0C  D00B               	goto	l30
   377                           
   378                           ;main.c: 43: order[0] = 'M';
   379  007E0E  0E4D               	movlw	77
   380  007E10  6E1C               	movwf	main@order,c
   381                           
   382                           ;main.c: 44: tempcounter = count;
   383  007E12  C018  F014         	movff	main@count,main@tempcounter
   384  007E16  C019  F015         	movff	main@count+1,main@tempcounter+1
   385  007E1A  C01A  F016         	movff	main@count+2,main@tempcounter+2
   386  007E1E  C01B  F017         	movff	main@count+3,main@tempcounter+3
   387                           
   388                           ;main.c: 45: }
   389  007E22  D03F               	goto	l33
   390  007E24                     l30:
   391                           
   392                           ;main.c: 46: else if(order[1] == (0)) {
   393  007E24  501D               	movf	main@order+1,w,c
   394  007E26  A4D8               	btfss	status,2,c
   395  007E28  D011               	goto	l32
   396                           
   397                           ;main.c: 47: order[1] = 'M';
   398  007E2A  0E4D               	movlw	77
   399  007E2C  6E1D               	movwf	main@order+1,c
   400                           
   401                           ;main.c: 48: duration = count - tempcounter;
   402  007E2E  C014  F006         	movff	main@tempcounter,??_main
   403  007E32  C015  F007         	movff	main@tempcounter+1,??_main+1
   404  007E36  1E06               	comf	??_main,f,c
   405  007E38  1E07               	comf	??_main+1,f,c
   406  007E3A  4A06               	infsnz	??_main,f,c
   407  007E3C  2A07               	incf	??_main+1,f,c
   408  007E3E  5018               	movf	main@count,w,c
   409  007E40  2406               	addwf	??_main,w,c
   410  007E42  6E0C               	movwf	main@duration,c
   411  007E44  5019               	movf	main@count+1,w,c
   412  007E46  2007               	addwfc	??_main+1,w,c
   413  007E48  6E0D               	movwf	main@duration+1,c
   414                           
   415                           ;main.c: 49: }
   416  007E4A  D02B               	goto	l33
   417  007E4C                     l32:
   418                           
   419                           ;main.c: 50: else {
   420                           ;main.c: 51: order[2] = 'M';
   421  007E4C  0E4D               	movlw	77
   422  007E4E  6E1E               	movwf	main@order+2,c
   423                           
   424                           ;main.c: 52: init_XLCD();
   425  007E50  ECA5  F03D         	call	_init_XLCD	;wreg free
   426                           
   427                           ;main.c: 53: putrsXLCD(order);
   428  007E54  0E1C               	movlw	low main@order
   429  007E56  6E02               	movwf	putrsXLCD@buffer,c
   430  007E58  0E00               	movlw	high main@order
   431  007E5A  6E03               	movwf	putrsXLCD@buffer+1,c
   432  007E5C  ECB4  F03D         	call	_putrsXLCD	;wreg free
   433                           
   434                           ;main.c: 54: order[0] = (0);
   435  007E60  0E00               	movlw	0
   436  007E62  6E1C               	movwf	main@order,c
   437                           
   438                           ;main.c: 55: order[1] = (0);
   439  007E64  0E00               	movlw	0
   440  007E66  6E1D               	movwf	main@order+1,c
   441                           
   442                           ;main.c: 56: order[2] = (0);
   443  007E68  0E00               	movlw	0
   444  007E6A  6E1E               	movwf	main@order+2,c
   445                           
   446                           ;main.c: 57: rd0end = 1;
   447  007E6C  0E00               	movlw	0
   448  007E6E  6E0F               	movwf	main@rd0end+1,c
   449  007E70  0E01               	movlw	1
   450  007E72  6E0E               	movwf	main@rd0end,c
   451                           
   452                           ;main.c: 58: rd1end = 1;
   453  007E74  0E00               	movlw	0
   454  007E76  6E11               	movwf	main@rd1end+1,c
   455  007E78  0E01               	movlw	1
   456  007E7A  6E10               	movwf	main@rd1end,c
   457                           
   458                           ;main.c: 59: rd2end = 1;
   459  007E7C  0E00               	movlw	0
   460  007E7E  6E13               	movwf	main@rd2end+1,c
   461  007E80  0E01               	movlw	1
   462  007E82  6E12               	movwf	main@rd2end,c
   463                           
   464                           ;main.c: 60: duration = 0;
   465  007E84  0E00               	movlw	0
   466  007E86  6E0D               	movwf	main@duration+1,c
   467  007E88  0E00               	movlw	0
   468  007E8A  6E0C               	movwf	main@duration,c
   469                           
   470                           ;main.c: 61: _delay((unsigned long)((2000)*(4000000/4000.0)));
   471  007E8C  0E0B               	movlw	11
   472  007E8E  6E07               	movwf	(??_main+1)& (0+255),c
   473  007E90  0E26               	movlw	38
   474  007E92  6E06               	movwf	??_main& (0+255),c
   475  007E94  0E5E               	movlw	94
   476  007E96                     u457:
   477  007E96  2EE8               	decfsz	wreg,f,c
   478  007E98  D7FE               	bra	u457
   479  007E9A  2E06               	decfsz	??_main& (0+255),f,c
   480  007E9C  D7FC               	bra	u457
   481  007E9E  2E07               	decfsz	(??_main+1)& (0+255),f,c
   482  007EA0  D7FA               	bra	u457
   483  007EA2                     l33:
   484                           
   485                           ;main.c: 63: }
   486                           ;main.c: 64: }
   487                           ;main.c: 66: if(PORTDbits.RD1 == 1 && rd1end == 1) {
   488  007EA2  A283               	btfss	3971,1,c	;volatile
   489  007EA4  D055               	goto	l38
   490  007EA6  0410               	decf	main@rd1end,w,c
   491  007EA8  1011               	iorwf	main@rd1end+1,w,c
   492  007EAA  A4D8               	btfss	status,2,c
   493  007EAC  D051               	goto	l38
   494                           
   495                           ;main.c: 67: rd1end = 0;
   496  007EAE  0E00               	movlw	0
   497  007EB0  6E11               	movwf	main@rd1end+1,c
   498  007EB2  0E00               	movlw	0
   499  007EB4  6E10               	movwf	main@rd1end,c
   500                           
   501                           ;main.c: 68: if(order[0] == (0)) {
   502  007EB6  501C               	movf	main@order,w,c
   503  007EB8  A4D8               	btfss	status,2,c
   504  007EBA  D00B               	goto	l35
   505                           
   506                           ;main.c: 69: order[0] = 'L';
   507  007EBC  0E4C               	movlw	76
   508  007EBE  6E1C               	movwf	main@order,c
   509                           
   510                           ;main.c: 70: tempcounter = count;
   511  007EC0  C018  F014         	movff	main@count,main@tempcounter
   512  007EC4  C019  F015         	movff	main@count+1,main@tempcounter+1
   513  007EC8  C01A  F016         	movff	main@count+2,main@tempcounter+2
   514  007ECC  C01B  F017         	movff	main@count+3,main@tempcounter+3
   515                           
   516                           ;main.c: 71: }
   517  007ED0  D03F               	goto	l38
   518  007ED2                     l35:
   519                           
   520                           ;main.c: 72: else if(order[1] == (0)) {
   521  007ED2  501D               	movf	main@order+1,w,c
   522  007ED4  A4D8               	btfss	status,2,c
   523  007ED6  D011               	goto	l37
   524                           
   525                           ;main.c: 73: order[1] = 'L';
   526  007ED8  0E4C               	movlw	76
   527  007EDA  6E1D               	movwf	main@order+1,c
   528                           
   529                           ;main.c: 74: duration = count - tempcounter;
   530  007EDC  C014  F006         	movff	main@tempcounter,??_main
   531  007EE0  C015  F007         	movff	main@tempcounter+1,??_main+1
   532  007EE4  1E06               	comf	??_main,f,c
   533  007EE6  1E07               	comf	??_main+1,f,c
   534  007EE8  4A06               	infsnz	??_main,f,c
   535  007EEA  2A07               	incf	??_main+1,f,c
   536  007EEC  5018               	movf	main@count,w,c
   537  007EEE  2406               	addwf	??_main,w,c
   538  007EF0  6E0C               	movwf	main@duration,c
   539  007EF2  5019               	movf	main@count+1,w,c
   540  007EF4  2007               	addwfc	??_main+1,w,c
   541  007EF6  6E0D               	movwf	main@duration+1,c
   542                           
   543                           ;main.c: 75: }
   544  007EF8  D02B               	goto	l38
   545  007EFA                     l37:
   546                           
   547                           ;main.c: 76: else {
   548                           ;main.c: 77: order[2] = 'L';
   549  007EFA  0E4C               	movlw	76
   550  007EFC  6E1E               	movwf	main@order+2,c
   551                           
   552                           ;main.c: 78: init_XLCD();
   553  007EFE  ECA5  F03D         	call	_init_XLCD	;wreg free
   554                           
   555                           ;main.c: 79: putrsXLCD(order);
   556  007F02  0E1C               	movlw	low main@order
   557  007F04  6E02               	movwf	putrsXLCD@buffer,c
   558  007F06  0E00               	movlw	high main@order
   559  007F08  6E03               	movwf	putrsXLCD@buffer+1,c
   560  007F0A  ECB4  F03D         	call	_putrsXLCD	;wreg free
   561                           
   562                           ;main.c: 80: order[0] = (0);
   563  007F0E  0E00               	movlw	0
   564  007F10  6E1C               	movwf	main@order,c
   565                           
   566                           ;main.c: 81: order[1] = (0);
   567  007F12  0E00               	movlw	0
   568  007F14  6E1D               	movwf	main@order+1,c
   569                           
   570                           ;main.c: 82: order[2] = (0);
   571  007F16  0E00               	movlw	0
   572  007F18  6E1E               	movwf	main@order+2,c
   573                           
   574                           ;main.c: 83: rd0end = 1;
   575  007F1A  0E00               	movlw	0
   576  007F1C  6E0F               	movwf	main@rd0end+1,c
   577  007F1E  0E01               	movlw	1
   578  007F20  6E0E               	movwf	main@rd0end,c
   579                           
   580                           ;main.c: 84: rd1end = 1;
   581  007F22  0E00               	movlw	0
   582  007F24  6E11               	movwf	main@rd1end+1,c
   583  007F26  0E01               	movlw	1
   584  007F28  6E10               	movwf	main@rd1end,c
   585                           
   586                           ;main.c: 85: rd2end = 1;
   587  007F2A  0E00               	movlw	0
   588  007F2C  6E13               	movwf	main@rd2end+1,c
   589  007F2E  0E01               	movlw	1
   590  007F30  6E12               	movwf	main@rd2end,c
   591                           
   592                           ;main.c: 86: duration = 0;
   593  007F32  0E00               	movlw	0
   594  007F34  6E0D               	movwf	main@duration+1,c
   595  007F36  0E00               	movlw	0
   596  007F38  6E0C               	movwf	main@duration,c
   597                           
   598                           ;main.c: 87: _delay((unsigned long)((2000)*(4000000/4000.0)));
   599  007F3A  0E0B               	movlw	11
   600  007F3C  6E07               	movwf	(??_main+1)& (0+255),c
   601  007F3E  0E26               	movlw	38
   602  007F40  6E06               	movwf	??_main& (0+255),c
   603  007F42  0E5E               	movlw	94
   604  007F44                     u467:
   605  007F44  2EE8               	decfsz	wreg,f,c
   606  007F46  D7FE               	bra	u467
   607  007F48  2E06               	decfsz	??_main& (0+255),f,c
   608  007F4A  D7FC               	bra	u467
   609  007F4C  2E07               	decfsz	(??_main+1)& (0+255),f,c
   610  007F4E  D7FA               	bra	u467
   611  007F50                     l38:
   612                           
   613                           ;main.c: 89: }
   614                           ;main.c: 90: }
   615                           ;main.c: 92: if(PORTDbits.RD2 == 1 && rd2end == 1) {
   616  007F50  A483               	btfss	3971,2,c	;volatile
   617  007F52  D724               	goto	l27
   618  007F54  0412               	decf	main@rd2end,w,c
   619  007F56  1013               	iorwf	main@rd2end+1,w,c
   620  007F58  A4D8               	btfss	status,2,c
   621  007F5A  D720               	goto	l27
   622                           
   623                           ;main.c: 93: rd2end = 0;
   624  007F5C  0E00               	movlw	0
   625  007F5E  6E13               	movwf	main@rd2end+1,c
   626  007F60  0E00               	movlw	0
   627  007F62  6E12               	movwf	main@rd2end,c
   628                           
   629                           ;main.c: 94: if(order[0] == (0)) {
   630  007F64  501C               	movf	main@order,w,c
   631  007F66  A4D8               	btfss	status,2,c
   632  007F68  D00B               	goto	l40
   633                           
   634                           ;main.c: 95: order[0] = 'R';
   635  007F6A  0E52               	movlw	82
   636  007F6C  6E1C               	movwf	main@order,c
   637                           
   638                           ;main.c: 96: tempcounter = count;
   639  007F6E  C018  F014         	movff	main@count,main@tempcounter
   640  007F72  C019  F015         	movff	main@count+1,main@tempcounter+1
   641  007F76  C01A  F016         	movff	main@count+2,main@tempcounter+2
   642  007F7A  C01B  F017         	movff	main@count+3,main@tempcounter+3
   643                           
   644                           ;main.c: 97: }
   645  007F7E  D70E               	goto	l27
   646  007F80                     l40:
   647                           
   648                           ;main.c: 98: else if(order[1] == (0)) {
   649  007F80  501D               	movf	main@order+1,w,c
   650  007F82  A4D8               	btfss	status,2,c
   651  007F84  D011               	goto	l42
   652                           
   653                           ;main.c: 99: order[1] = 'R';
   654  007F86  0E52               	movlw	82
   655  007F88  6E1D               	movwf	main@order+1,c
   656                           
   657                           ;main.c: 100: duration = count - tempcounter;
   658  007F8A  C014  F006         	movff	main@tempcounter,??_main
   659  007F8E  C015  F007         	movff	main@tempcounter+1,??_main+1
   660  007F92  1E06               	comf	??_main,f,c
   661  007F94  1E07               	comf	??_main+1,f,c
   662  007F96  4A06               	infsnz	??_main,f,c
   663  007F98  2A07               	incf	??_main+1,f,c
   664  007F9A  5018               	movf	main@count,w,c
   665  007F9C  2406               	addwf	??_main,w,c
   666  007F9E  6E0C               	movwf	main@duration,c
   667  007FA0  5019               	movf	main@count+1,w,c
   668  007FA2  2007               	addwfc	??_main+1,w,c
   669  007FA4  6E0D               	movwf	main@duration+1,c
   670                           
   671                           ;main.c: 101: }
   672  007FA6  D6FA               	goto	l27
   673  007FA8                     l42:
   674                           
   675                           ;main.c: 102: else {
   676                           ;main.c: 103: order[2] = 'R';
   677  007FA8  0E52               	movlw	82
   678  007FAA  6E1E               	movwf	main@order+2,c
   679                           
   680                           ;main.c: 104: init_XLCD();
   681  007FAC  ECA5  F03D         	call	_init_XLCD	;wreg free
   682                           
   683                           ;main.c: 105: putrsXLCD(order);
   684  007FB0  0E1C               	movlw	low main@order
   685  007FB2  6E02               	movwf	putrsXLCD@buffer,c
   686  007FB4  0E00               	movlw	high main@order
   687  007FB6  6E03               	movwf	putrsXLCD@buffer+1,c
   688  007FB8  ECB4  F03D         	call	_putrsXLCD	;wreg free
   689                           
   690                           ;main.c: 106: order[0] = (0);
   691  007FBC  0E00               	movlw	0
   692  007FBE  6E1C               	movwf	main@order,c
   693                           
   694                           ;main.c: 107: order[1] = (0);
   695  007FC0  0E00               	movlw	0
   696  007FC2  6E1D               	movwf	main@order+1,c
   697                           
   698                           ;main.c: 108: order[2] = (0);
   699  007FC4  0E00               	movlw	0
   700  007FC6  6E1E               	movwf	main@order+2,c
   701                           
   702                           ;main.c: 109: rd0end = 1;
   703  007FC8  0E00               	movlw	0
   704  007FCA  6E0F               	movwf	main@rd0end+1,c
   705  007FCC  0E01               	movlw	1
   706  007FCE  6E0E               	movwf	main@rd0end,c
   707                           
   708                           ;main.c: 110: rd1end = 1;
   709  007FD0  0E00               	movlw	0
   710  007FD2  6E11               	movwf	main@rd1end+1,c
   711  007FD4  0E01               	movlw	1
   712  007FD6  6E10               	movwf	main@rd1end,c
   713                           
   714                           ;main.c: 111: rd2end = 1;
   715  007FD8  0E00               	movlw	0
   716  007FDA  6E13               	movwf	main@rd2end+1,c
   717  007FDC  0E01               	movlw	1
   718  007FDE  6E12               	movwf	main@rd2end,c
   719                           
   720                           ;main.c: 112: duration = 0;
   721  007FE0  0E00               	movlw	0
   722  007FE2  6E0D               	movwf	main@duration+1,c
   723  007FE4  0E00               	movlw	0
   724  007FE6  6E0C               	movwf	main@duration,c
   725                           
   726                           ;main.c: 113: _delay((unsigned long)((2000)*(4000000/4000.0)));
   727  007FE8  0E0B               	movlw	11
   728  007FEA  6E07               	movwf	(??_main+1)& (0+255),c
   729  007FEC  0E26               	movlw	38
   730  007FEE  6E06               	movwf	??_main& (0+255),c
   731  007FF0  0E5E               	movlw	94
   732  007FF2                     u477:
   733  007FF2  2EE8               	decfsz	wreg,f,c
   734  007FF4  D7FE               	bra	u477
   735  007FF6  2E06               	decfsz	??_main& (0+255),f,c
   736  007FF8  D7FC               	bra	u477
   737  007FFA  2E07               	decfsz	(??_main+1)& (0+255),f,c
   738  007FFC  D7FA               	bra	u477
   739  007FFE  D6CE               	goto	l27
   740  008000                     __end_of_main:
   741                           	opt stack 0
   742                           wreg	equ	0xFE8
   743                           status	equ	0xFD8
   744                           
   745 ;; *************** function _putrsXLCD *****************
   746 ;; Defined at:
   747 ;;		line 16 in file "putrxlcd.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;  buffer          2    1[COMRAM] PTR const unsigned char 
   750 ;;		 -> main@order(3), 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   762 ;;      Params:         2       0       0       0       0       0       0
   763 ;;      Locals:         0       0       0       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0       0       0
   765 ;;      Totals:         2       0       0       0       0       0       0
   766 ;;Total ram usage:        2 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; Hardware stack levels required when called:    2
   769 ;; This function calls:
   770 ;;		_BusyXLCD
   771 ;;		_WriteDataXLCD
   772 ;; This function is called by:
   773 ;;		_main
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           	psect	text1
   778  007B68                     __ptext1:
   779                           	opt stack 0
   780  007B68                     _putrsXLCD:
   781                           	opt stack 28
   782                           
   783                           ;putrxlcd.c: 18: while(*buffer)
   784                           
   785                           ;incstack = 0
   786  007B68  D00E               	goto	l121
   787  007B6A                     
   788                           ;putrxlcd.c: 19: {
   789                           ;putrxlcd.c: 20: while(BusyXLCD());
   790  007B6A  ECCB  F03D         	call	_BusyXLCD	;wreg free
   791  007B6E  0900               	iorlw	0
   792  007B70  A4D8               	btfss	status,2,c
   793  007B72  D7FB               	goto	l122
   794                           
   795                           ;putrxlcd.c: 21: WriteDataXLCD(*buffer);
   796  007B74  C002  FFD9         	movff	putrsXLCD@buffer,fsr2l
   797  007B78  C003  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
   798  007B7C  50DF               	movf	indf2,w,c
   799  007B7E  EC07  F03E         	call	_WriteDataXLCD
   800                           
   801                           ;putrxlcd.c: 22: buffer++;
   802  007B82  4A02               	infsnz	putrsXLCD@buffer,f,c
   803  007B84  2A03               	incf	putrsXLCD@buffer+1,f,c
   804  007B86                     l121:
   805  007B86  C002  FFD9         	movff	putrsXLCD@buffer,fsr2l
   806  007B8A  C003  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
   807  007B8E  50DF               	movf	indf2,w,c
   808  007B90  B4D8               	btfsc	status,2,c
   809  007B92  0012               	return	
   810  007B94  D7EA               	goto	l122
   811  007B96                     __end_of_putrsXLCD:
   812                           	opt stack 0
   813                           wreg	equ	0xFE8
   814                           indf2	equ	0xFDF
   815                           fsr2h	equ	0xFDA
   816                           fsr2l	equ	0xFD9
   817                           status	equ	0xFD8
   818                           
   819 ;; *************** function _WriteDataXLCD *****************
   820 ;; Defined at:
   821 ;;		line 16 in file "writdata.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;  data            1    wreg     unsigned char 
   824 ;; Auto vars:     Size  Location     Type
   825 ;;  data            1    0[COMRAM] unsigned char 
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      void 
   828 ;; Registers used:
   829 ;;		wreg, status,2, status,0, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   835 ;;      Params:         0       0       0       0       0       0       0
   836 ;;      Locals:         1       0       0       0       0       0       0
   837 ;;      Temps:          0       0       0       0       0       0       0
   838 ;;      Totals:         1       0       0       0       0       0       0
   839 ;;Total ram usage:        1 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; Hardware stack levels required when called:    1
   842 ;; This function calls:
   843 ;;		_DelayFor18TCY
   844 ;; This function is called by:
   845 ;;		_putrsXLCD
   846 ;;		_putsXLCD
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	text2
   851  007C0E                     __ptext2:
   852                           	opt stack 0
   853  007C0E                     _WriteDataXLCD:
   854                           	opt stack 28
   855                           
   856                           ;incstack = 0
   857                           ;WriteDataXLCD@data stored from wreg
   858  007C0E  6E01               	movwf	WriteDataXLCD@data,c
   859                           
   860                           ;writdata.c: 35: TRISB &= 0xf0;
   861  007C10  0EF0               	movlw	240
   862  007C12  1693               	andwf	3987,f,c	;volatile
   863                           
   864                           ;writdata.c: 36: PORTB &= 0xf0;
   865  007C14  0EF0               	movlw	240
   866  007C16  1681               	andwf	3969,f,c	;volatile
   867                           
   868                           ;writdata.c: 37: PORTB |= ((data>>4)&0x0f);
   869  007C18  3801               	swapf	WriteDataXLCD@data,w,c
   870  007C1A  0B0F               	andlw	15
   871  007C1C  0B0F               	andlw	15
   872  007C1E  1281               	iorwf	3969,f,c	;volatile
   873                           
   874                           ;writdata.c: 39: LATAbits.LATA3 = 1;
   875  007C20  8689               	bsf	3977,3,c	;volatile
   876                           
   877                           ;writdata.c: 40: LATAbits.LATA2 = 0;
   878  007C22  9489               	bcf	3977,2,c	;volatile
   879                           
   880                           ;writdata.c: 41: DelayFor18TCY();
   881  007C24  EC8D  F03D         	call	_DelayFor18TCY	;wreg free
   882                           
   883                           ;writdata.c: 42: LATAbits.LATA1 = 1;
   884  007C28  8289               	bsf	3977,1,c	;volatile
   885                           
   886                           ;writdata.c: 43: DelayFor18TCY();
   887  007C2A  EC8D  F03D         	call	_DelayFor18TCY	;wreg free
   888                           
   889                           ;writdata.c: 44: LATAbits.LATA1 = 0;
   890  007C2E  9289               	bcf	3977,1,c	;volatile
   891                           
   892                           ;writdata.c: 49: PORTB &= 0xf0;
   893  007C30  0EF0               	movlw	240
   894  007C32  1681               	andwf	3969,f,c	;volatile
   895                           
   896                           ;writdata.c: 50: PORTB |= (data&0x0f);
   897  007C34  5001               	movf	WriteDataXLCD@data,w,c
   898  007C36  0B0F               	andlw	15
   899  007C38  1281               	iorwf	3969,f,c	;volatile
   900                           
   901                           ;writdata.c: 52: DelayFor18TCY();
   902  007C3A  EC8D  F03D         	call	_DelayFor18TCY	;wreg free
   903                           
   904                           ;writdata.c: 53: LATAbits.LATA1 = 1;
   905  007C3E  8289               	bsf	3977,1,c	;volatile
   906                           
   907                           ;writdata.c: 54: DelayFor18TCY();
   908  007C40  EC8D  F03D         	call	_DelayFor18TCY	;wreg free
   909                           
   910                           ;writdata.c: 55: LATAbits.LATA1 = 0;
   911  007C44  9289               	bcf	3977,1,c	;volatile
   912                           
   913                           ;writdata.c: 59: TRISB |= 0x0f;
   914  007C46  0E0F               	movlw	15
   915  007C48  1293               	iorwf	3987,f,c	;volatile
   916  007C4A  0012               	return	
   917  007C4C                     __end_of_WriteDataXLCD:
   918                           	opt stack 0
   919                           wreg	equ	0xFE8
   920                           indf2	equ	0xFDF
   921                           fsr2h	equ	0xFDA
   922                           fsr2l	equ	0xFD9
   923                           status	equ	0xFD8
   924                           
   925 ;; *************** function _init_XLCD *****************
   926 ;; Defined at:
   927 ;;		line 140 in file "main.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;		None
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, status,2, status,0, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   941 ;;      Params:         0       0       0       0       0       0       0
   942 ;;      Locals:         0       0       0       0       0       0       0
   943 ;;      Temps:          0       0       0       0       0       0       0
   944 ;;      Totals:         0       0       0       0       0       0       0
   945 ;;Total ram usage:        0 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; Hardware stack levels required when called:    3
   948 ;; This function calls:
   949 ;;		_BusyXLCD
   950 ;;		_OpenXLCD
   951 ;;		_WriteCmdXLCD
   952 ;; This function is called by:
   953 ;;		_main
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text3
   958  007B4A                     __ptext3:
   959                           	opt stack 0
   960  007B4A                     _init_XLCD:
   961                           	opt stack 27
   962                           
   963                           ;main.c: 142: OpenXLCD(0b00101100&0b00111000);
   964                           
   965                           ;incstack = 0
   966  007B4A  0E28               	movlw	40
   967  007B4C  EC4F  F03E         	call	_OpenXLCD
   968  007B50  ECCB  F03D         	call	_BusyXLCD	;wreg free
   969  007B54  0900               	iorlw	0
   970  007B56  A4D8               	btfss	status,2,c
   971  007B58  D7FB               	goto	l59
   972                           
   973                           ;main.c: 146: WriteCmdXLCD(0x06);
   974  007B5A  0E06               	movlw	6
   975  007B5C  ECE8  F03D         	call	_WriteCmdXLCD
   976                           
   977                           ;main.c: 147: WriteCmdXLCD(0x0C);
   978  007B60  0E0C               	movlw	12
   979  007B62  ECE8  F03D         	call	_WriteCmdXLCD
   980  007B66  0012               	return		;funcret
   981  007B68                     __end_of_init_XLCD:
   982                           	opt stack 0
   983                           wreg	equ	0xFE8
   984                           indf2	equ	0xFDF
   985                           fsr2h	equ	0xFDA
   986                           fsr2l	equ	0xFD9
   987                           status	equ	0xFD8
   988                           
   989 ;; *************** function _OpenXLCD *****************
   990 ;; Defined at:
   991 ;;		line 19 in file "openxlcd.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  lcdtype         1    wreg     unsigned char 
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  lcdtype         1    4[COMRAM] unsigned char 
   996 ;; Return value:  Size  Location     Type
   997 ;;                  1    wreg      void 
   998 ;; Registers used:
   999 ;;		wreg, status,2, status,0, cstack
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1005 ;;      Params:         0       0       0       0       0       0       0
  1006 ;;      Locals:         1       0       0       0       0       0       0
  1007 ;;      Temps:          0       0       0       0       0       0       0
  1008 ;;      Totals:         1       0       0       0       0       0       0
  1009 ;;Total ram usage:        1 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; Hardware stack levels required when called:    2
  1012 ;; This function calls:
  1013 ;;		_BusyXLCD
  1014 ;;		_Delay10KTCYx
  1015 ;;		_DelayPORXLCD
  1016 ;;		_SetDDRamAddr
  1017 ;;		_WriteCmdXLCD
  1018 ;; This function is called by:
  1019 ;;		_init_XLCD
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text4
  1024  007C9E                     __ptext4:
  1025                           	opt stack 0
  1026  007C9E                     _OpenXLCD:
  1027                           	opt stack 27
  1028                           
  1029                           ;incstack = 0
  1030                           ;OpenXLCD@lcdtype stored from wreg
  1031  007C9E  6E05               	movwf	OpenXLCD@lcdtype,c
  1032                           
  1033                           ;openxlcd.c: 31: PORTB &= 0xf0;
  1034  007CA0  0EF0               	movlw	240
  1035  007CA2  1681               	andwf	3969,f,c	;volatile
  1036                           
  1037                           ;openxlcd.c: 32: TRISB &= 0xF0;
  1038  007CA4  0EF0               	movlw	240
  1039  007CA6  1693               	andwf	3987,f,c	;volatile
  1040                           
  1041                           ;openxlcd.c: 35: TRISAbits.TRISA2 = 0;
  1042  007CA8  9492               	bcf	3986,2,c	;volatile
  1043                           
  1044                           ;openxlcd.c: 36: TRISAbits.TRISA3 = 0;
  1045  007CAA  9692               	bcf	3986,3,c	;volatile
  1046                           
  1047                           ;openxlcd.c: 37: TRISAbits.TRISA1 = 0;
  1048  007CAC  9292               	bcf	3986,1,c	;volatile
  1049                           
  1050                           ;openxlcd.c: 38: LATAbits.LATA2 = 0;
  1051  007CAE  9489               	bcf	3977,2,c	;volatile
  1052                           
  1053                           ;openxlcd.c: 39: LATAbits.LATA3 = 0;
  1054  007CB0  9689               	bcf	3977,3,c	;volatile
  1055                           
  1056                           ;openxlcd.c: 40: LATAbits.LATA1 = 0;
  1057  007CB2  9289               	bcf	3977,1,c	;volatile
  1058                           
  1059                           ;openxlcd.c: 43: DelayPORXLCD();
  1060  007CB4  EC92  F03D         	call	_DelayPORXLCD	;wreg free
  1061                           
  1062                           ;openxlcd.c: 45: WriteCmdXLCD(0x30);
  1063  007CB8  0E30               	movlw	48
  1064  007CBA  ECE8  F03D         	call	_WriteCmdXLCD
  1065                           
  1066                           ;openxlcd.c: 46: Delay10KTCYx(0x05);
  1067  007CBE  0E05               	movlw	5
  1068  007CC0  EC9A  F03D         	call	_Delay10KTCYx
  1069                           
  1070                           ;openxlcd.c: 48: WriteCmdXLCD(0x30);
  1071  007CC4  0E30               	movlw	48
  1072  007CC6  ECE8  F03D         	call	_WriteCmdXLCD
  1073                           
  1074                           ;openxlcd.c: 49: Delay10KTCYx(0x01);
  1075  007CCA  0E01               	movlw	1
  1076  007CCC  EC9A  F03D         	call	_Delay10KTCYx
  1077                           
  1078                           ;openxlcd.c: 52: WriteCmdXLCD(0x32);
  1079  007CD0  0E32               	movlw	50
  1080  007CD2  ECE8  F03D         	call	_WriteCmdXLCD
  1081  007CD6  ECCB  F03D         	call	_BusyXLCD	;wreg free
  1082  007CDA  0900               	iorlw	0
  1083  007CDC  A4D8               	btfss	status,2,c
  1084  007CDE  D7FB               	goto	l94
  1085  007CE0                     u30:
  1086                           
  1087                           ;openxlcd.c: 58: while(BusyXLCD());
  1088  007CE0  ECCB  F03D         	call	_BusyXLCD	;wreg free
  1089  007CE4  0900               	iorlw	0
  1090  007CE6  A4D8               	btfss	status,2,c
  1091  007CE8  D7FB               	goto	u30
  1092                           
  1093                           ;openxlcd.c: 59: WriteCmdXLCD(lcdtype);
  1094  007CEA  5005               	movf	OpenXLCD@lcdtype,w,c
  1095  007CEC  ECE8  F03D         	call	_WriteCmdXLCD
  1096  007CF0  ECCB  F03D         	call	_BusyXLCD	;wreg free
  1097  007CF4  0900               	iorlw	0
  1098  007CF6  A4D8               	btfss	status,2,c
  1099  007CF8  D7FB               	goto	l100
  1100                           
  1101                           ;openxlcd.c: 63: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  1102  007CFA  0E08               	movlw	8
  1103  007CFC  ECE8  F03D         	call	_WriteCmdXLCD
  1104  007D00  ECCB  F03D         	call	_BusyXLCD	;wreg free
  1105  007D04  0900               	iorlw	0
  1106  007D06  A4D8               	btfss	status,2,c
  1107  007D08  D7FB               	goto	l103
  1108                           
  1109                           ;openxlcd.c: 65: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  1110  007D0A  0E0F               	movlw	15
  1111  007D0C  ECE8  F03D         	call	_WriteCmdXLCD
  1112  007D10  ECCB  F03D         	call	_BusyXLCD	;wreg free
  1113  007D14  0900               	iorlw	0
  1114  007D16  A4D8               	btfss	status,2,c
  1115  007D18  D7FB               	goto	l106
  1116                           
  1117                           ;openxlcd.c: 69: WriteCmdXLCD(0x01);
  1118  007D1A  0E01               	movlw	1
  1119  007D1C  ECE8  F03D         	call	_WriteCmdXLCD
  1120  007D20  ECCB  F03D         	call	_BusyXLCD	;wreg free
  1121  007D24  0900               	iorlw	0
  1122  007D26  A4D8               	btfss	status,2,c
  1123  007D28  D7FB               	goto	l109
  1124                           
  1125                           ;openxlcd.c: 73: WriteCmdXLCD(0b00000100);
  1126  007D2A  0E04               	movlw	4
  1127  007D2C  ECE8  F03D         	call	_WriteCmdXLCD
  1128  007D30  ECCB  F03D         	call	_BusyXLCD	;wreg free
  1129  007D34  0900               	iorlw	0
  1130  007D36  A4D8               	btfss	status,2,c
  1131  007D38  D7FB               	goto	l112
  1132                           
  1133                           ;openxlcd.c: 77: SetDDRamAddr(0x80);
  1134  007D3A  0E80               	movlw	128
  1135  007D3C  EC26  F03E         	call	_SetDDRamAddr
  1136  007D40  0012               	return	
  1137  007D42                     __end_of_OpenXLCD:
  1138                           	opt stack 0
  1139                           wreg	equ	0xFE8
  1140                           indf2	equ	0xFDF
  1141                           fsr2h	equ	0xFDA
  1142                           fsr2l	equ	0xFD9
  1143                           status	equ	0xFD8
  1144                           
  1145 ;; *************** function _WriteCmdXLCD *****************
  1146 ;; Defined at:
  1147 ;;		line 13 in file "wcmdxlcd.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  cmd             1    wreg     unsigned char 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  cmd             1    0[COMRAM] unsigned char 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, status,2, status,0, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1161 ;;      Params:         0       0       0       0       0       0       0
  1162 ;;      Locals:         1       0       0       0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0       0       0
  1164 ;;      Totals:         1       0       0       0       0       0       0
  1165 ;;Total ram usage:        1 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    1
  1168 ;; This function calls:
  1169 ;;		_DelayFor18TCY
  1170 ;; This function is called by:
  1171 ;;		_init_XLCD
  1172 ;;		_OpenXLCD
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text5
  1177  007BD0                     __ptext5:
  1178                           	opt stack 0
  1179  007BD0                     _WriteCmdXLCD:
  1180                           	opt stack 28
  1181                           
  1182                           ;incstack = 0
  1183                           ;WriteCmdXLCD@cmd stored from wreg
  1184  007BD0  6E01               	movwf	WriteCmdXLCD@cmd,c
  1185                           
  1186                           ;wcmdxlcd.c: 32: TRISB &= 0xf0;
  1187  007BD2  0EF0               	movlw	240
  1188  007BD4  1693               	andwf	3987,f,c	;volatile
  1189                           
  1190                           ;wcmdxlcd.c: 33: PORTB &= 0xf0;
  1191  007BD6  0EF0               	movlw	240
  1192  007BD8  1681               	andwf	3969,f,c	;volatile
  1193                           
  1194                           ;wcmdxlcd.c: 34: PORTB |= (cmd>>4)&0x0f;
  1195  007BDA  3801               	swapf	WriteCmdXLCD@cmd,w,c
  1196  007BDC  0B0F               	andlw	15
  1197  007BDE  0B0F               	andlw	15
  1198  007BE0  1281               	iorwf	3969,f,c	;volatile
  1199                           
  1200                           ;wcmdxlcd.c: 36: LATAbits.LATA2 = 0;
  1201  007BE2  9489               	bcf	3977,2,c	;volatile
  1202                           
  1203                           ;wcmdxlcd.c: 37: LATAbits.LATA3 = 0;
  1204  007BE4  9689               	bcf	3977,3,c	;volatile
  1205                           
  1206                           ;wcmdxlcd.c: 38: DelayFor18TCY();
  1207  007BE6  EC8D  F03D         	call	_DelayFor18TCY	;wreg free
  1208                           
  1209                           ;wcmdxlcd.c: 39: LATAbits.LATA1 = 1;
  1210  007BEA  8289               	bsf	3977,1,c	;volatile
  1211                           
  1212                           ;wcmdxlcd.c: 40: DelayFor18TCY();
  1213  007BEC  EC8D  F03D         	call	_DelayFor18TCY	;wreg free
  1214                           
  1215                           ;wcmdxlcd.c: 41: LATAbits.LATA1 = 0;
  1216  007BF0  9289               	bcf	3977,1,c	;volatile
  1217                           
  1218                           ;wcmdxlcd.c: 46: PORTB &= 0xf0;
  1219  007BF2  0EF0               	movlw	240
  1220  007BF4  1681               	andwf	3969,f,c	;volatile
  1221                           
  1222                           ;wcmdxlcd.c: 47: PORTB |= cmd&0x0f;
  1223  007BF6  5001               	movf	WriteCmdXLCD@cmd,w,c
  1224  007BF8  0B0F               	andlw	15
  1225  007BFA  1281               	iorwf	3969,f,c	;volatile
  1226                           
  1227                           ;wcmdxlcd.c: 49: DelayFor18TCY();
  1228  007BFC  EC8D  F03D         	call	_DelayFor18TCY	;wreg free
  1229                           
  1230                           ;wcmdxlcd.c: 50: LATAbits.LATA1 = 1;
  1231  007C00  8289               	bsf	3977,1,c	;volatile
  1232                           
  1233                           ;wcmdxlcd.c: 51: DelayFor18TCY();
  1234  007C02  EC8D  F03D         	call	_DelayFor18TCY	;wreg free
  1235                           
  1236                           ;wcmdxlcd.c: 52: LATAbits.LATA1 = 0;
  1237  007C06  9289               	bcf	3977,1,c	;volatile
  1238                           
  1239                           ;wcmdxlcd.c: 56: TRISB |= 0x0f;
  1240  007C08  0E0F               	movlw	15
  1241  007C0A  1293               	iorwf	3987,f,c	;volatile
  1242  007C0C  0012               	return	
  1243  007C0E                     __end_of_WriteCmdXLCD:
  1244                           	opt stack 0
  1245                           wreg	equ	0xFE8
  1246                           indf2	equ	0xFDF
  1247                           fsr2h	equ	0xFDA
  1248                           fsr2l	equ	0xFD9
  1249                           status	equ	0xFD8
  1250                           
  1251 ;; *************** function _SetDDRamAddr *****************
  1252 ;; Defined at:
  1253 ;;		line 13 in file "setddram.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  DDaddr          1    wreg     unsigned char 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  DDaddr          1    3[COMRAM] unsigned char 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2, status,0, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1267 ;;      Params:         0       0       0       0       0       0       0
  1268 ;;      Locals:         1       0       0       0       0       0       0
  1269 ;;      Temps:          3       0       0       0       0       0       0
  1270 ;;      Totals:         4       0       0       0       0       0       0
  1271 ;;Total ram usage:        4 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    1
  1274 ;; This function calls:
  1275 ;;		_DelayFor18TCY
  1276 ;; This function is called by:
  1277 ;;		_OpenXLCD
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           	psect	text6
  1282  007C4C                     __ptext6:
  1283                           	opt stack 0
  1284  007C4C                     _SetDDRamAddr:
  1285                           	opt stack 27
  1286                           
  1287                           ;incstack = 0
  1288                           ;SetDDRamAddr@DDaddr stored from wreg
  1289  007C4C  6E04               	movwf	SetDDRamAddr@DDaddr,c
  1290                           
  1291                           ;setddram.c: 32: TRISB &= 0xf0;
  1292  007C4E  0EF0               	movlw	240
  1293  007C50  1693               	andwf	3987,f,c	;volatile
  1294                           
  1295                           ;setddram.c: 33: PORTB &= 0xf0;
  1296  007C52  0EF0               	movlw	240
  1297  007C54  1681               	andwf	3969,f,c	;volatile
  1298                           
  1299                           ;setddram.c: 34: PORTB |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  1300  007C56  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1301  007C58  6E01               	movwf	??_SetDDRamAddr& (0+255),c
  1302  007C5A  6A02               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  1303  007C5C  8E01               	bsf	??_SetDDRamAddr,7,c
  1304  007C5E  0E04               	movlw	4
  1305  007C60  6E03               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  1306  007C62                     u25:
  1307  007C62  3402               	rlcf	??_SetDDRamAddr+1,w,c
  1308  007C64  3202               	rrcf	??_SetDDRamAddr+1,f,c
  1309  007C66  3201               	rrcf	??_SetDDRamAddr,f,c
  1310  007C68  2E03               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  1311  007C6A  D7FB               	goto	u25
  1312  007C6C  5001               	movf	??_SetDDRamAddr,w,c
  1313  007C6E  0B0F               	andlw	15
  1314  007C70  1281               	iorwf	3969,f,c	;volatile
  1315                           
  1316                           ;setddram.c: 36: LATAbits.LATA2 = 0;
  1317  007C72  9489               	bcf	3977,2,c	;volatile
  1318                           
  1319                           ;setddram.c: 37: LATAbits.LATA3 = 0;
  1320  007C74  9689               	bcf	3977,3,c	;volatile
  1321                           
  1322                           ;setddram.c: 38: DelayFor18TCY();
  1323  007C76  EC8D  F03D         	call	_DelayFor18TCY	;wreg free
  1324                           
  1325                           ;setddram.c: 39: LATAbits.LATA1 = 1;
  1326  007C7A  8289               	bsf	3977,1,c	;volatile
  1327                           
  1328                           ;setddram.c: 40: DelayFor18TCY();
  1329  007C7C  EC8D  F03D         	call	_DelayFor18TCY	;wreg free
  1330                           
  1331                           ;setddram.c: 41: LATAbits.LATA1 = 0;
  1332  007C80  9289               	bcf	3977,1,c	;volatile
  1333                           
  1334                           ;setddram.c: 46: PORTB &= 0xf0;
  1335  007C82  0EF0               	movlw	240
  1336  007C84  1681               	andwf	3969,f,c	;volatile
  1337                           
  1338                           ;setddram.c: 47: PORTB |= (DDaddr&0x0f);
  1339  007C86  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1340  007C88  0B0F               	andlw	15
  1341  007C8A  1281               	iorwf	3969,f,c	;volatile
  1342                           
  1343                           ;setddram.c: 49: DelayFor18TCY();
  1344  007C8C  EC8D  F03D         	call	_DelayFor18TCY	;wreg free
  1345                           
  1346                           ;setddram.c: 50: LATAbits.LATA1 = 1;
  1347  007C90  8289               	bsf	3977,1,c	;volatile
  1348                           
  1349                           ;setddram.c: 51: DelayFor18TCY();
  1350  007C92  EC8D  F03D         	call	_DelayFor18TCY	;wreg free
  1351                           
  1352                           ;setddram.c: 52: LATAbits.LATA1 = 0;
  1353  007C96  9289               	bcf	3977,1,c	;volatile
  1354                           
  1355                           ;setddram.c: 56: TRISB |= 0x0f;
  1356  007C98  0E0F               	movlw	15
  1357  007C9A  1293               	iorwf	3987,f,c	;volatile
  1358  007C9C  0012               	return	
  1359  007C9E                     __end_of_SetDDRamAddr:
  1360                           	opt stack 0
  1361                           wreg	equ	0xFE8
  1362                           indf2	equ	0xFDF
  1363                           fsr2h	equ	0xFDA
  1364                           fsr2l	equ	0xFD9
  1365                           status	equ	0xFD8
  1366                           
  1367 ;; *************** function _DelayPORXLCD *****************
  1368 ;; Defined at:
  1369 ;;		line 127 in file "main.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;		None
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;		None
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1383 ;;      Params:         0       0       0       0       0       0       0
  1384 ;;      Locals:         0       0       0       0       0       0       0
  1385 ;;      Temps:          1       0       0       0       0       0       0
  1386 ;;      Totals:         1       0       0       0       0       0       0
  1387 ;;Total ram usage:        1 bytes
  1388 ;; Hardware stack levels used:    1
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		_OpenXLCD
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text7
  1397  007B24                     __ptext7:
  1398                           	opt stack 0
  1399  007B24                     _DelayPORXLCD:
  1400                           	opt stack 28
  1401                           
  1402                           ;main.c: 129: _delay((unsigned long)((15)*(4000000/4000.0)));
  1403                           
  1404                           ;incstack = 0
  1405  007B24  0E14               	movlw	20
  1406  007B26  6E01               	movwf	??_DelayPORXLCD& (0+255),c
  1407  007B28  0E7A               	movlw	122
  1408  007B2A                     u487:
  1409  007B2A  2EE8               	decfsz	wreg,f,c
  1410  007B2C  D7FE               	bra	u487
  1411  007B2E  2E01               	decfsz	??_DelayPORXLCD& (0+255),f,c
  1412  007B30  D7FC               	bra	u487
  1413  007B32  0012               	return		;funcret
  1414  007B34                     __end_of_DelayPORXLCD:
  1415                           	opt stack 0
  1416                           wreg	equ	0xFE8
  1417                           indf2	equ	0xFDF
  1418                           fsr2h	equ	0xFDA
  1419                           fsr2l	equ	0xFD9
  1420                           status	equ	0xFD8
  1421                           
  1422 ;; *************** function _Delay10KTCYx *****************
  1423 ;; Defined at:
  1424 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\pic18\d10ktcyx.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  unit            1    wreg     unsigned char 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  unit            1    1[COMRAM] unsigned char 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1438 ;;      Params:         0       0       0       0       0       0       0
  1439 ;;      Locals:         1       0       0       0       0       0       0
  1440 ;;      Temps:          1       0       0       0       0       0       0
  1441 ;;      Totals:         2       0       0       0       0       0       0
  1442 ;;Total ram usage:        2 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_OpenXLCD
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text8
  1452  007B34                     __ptext8:
  1453                           	opt stack 0
  1454  007B34                     _Delay10KTCYx:
  1455                           	opt stack 28
  1456                           
  1457                           ;incstack = 0
  1458                           ;Delay10KTCYx@unit stored from wreg
  1459  007B34  6E02               	movwf	Delay10KTCYx@unit,c
  1460  007B36                     l458:
  1461  007B36  0E0D               	movlw	13
  1462  007B38  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  1463  007B3A  0EFC               	movlw	252
  1464  007B3C                     u497:
  1465  007B3C  2EE8               	decfsz	wreg,f,c
  1466  007B3E  D7FE               	bra	u497
  1467  007B40  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1468  007B42  D7FC               	bra	u497
  1469  007B44  2E02               	decfsz	Delay10KTCYx@unit,f,c
  1470  007B46  D7F7               	goto	l458
  1471  007B48  0012               	return	
  1472  007B4A                     __end_of_Delay10KTCYx:
  1473                           	opt stack 0
  1474                           wreg	equ	0xFE8
  1475                           indf2	equ	0xFDF
  1476                           fsr2h	equ	0xFDA
  1477                           fsr2l	equ	0xFD9
  1478                           status	equ	0xFD8
  1479                           
  1480 ;; *************** function _BusyXLCD *****************
  1481 ;; Defined at:
  1482 ;;		line 11 in file "busyxlcd.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      unsigned char 
  1489 ;; Registers used:
  1490 ;;		wreg, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1496 ;;      Params:         0       0       0       0       0       0       0
  1497 ;;      Locals:         0       0       0       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0
  1499 ;;      Totals:         0       0       0       0       0       0       0
  1500 ;;Total ram usage:        0 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    1
  1503 ;; This function calls:
  1504 ;;		_DelayFor18TCY
  1505 ;; This function is called by:
  1506 ;;		_init_XLCD
  1507 ;;		_OpenXLCD
  1508 ;;		_putrsXLCD
  1509 ;;		_putsXLCD
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text9
  1514  007B96                     __ptext9:
  1515                           	opt stack 0
  1516  007B96                     _BusyXLCD:
  1517                           	opt stack 28
  1518                           
  1519                           ;busyxlcd.c: 13: LATAbits.LATA2 = 1;
  1520                           
  1521                           ;incstack = 0
  1522  007B96  8489               	bsf	3977,2,c	;volatile
  1523                           
  1524                           ;busyxlcd.c: 14: LATAbits.LATA3 = 0;
  1525  007B98  9689               	bcf	3977,3,c	;volatile
  1526                           
  1527                           ;busyxlcd.c: 15: DelayFor18TCY();
  1528  007B9A  EC8D  F03D         	call	_DelayFor18TCY	;wreg free
  1529                           
  1530                           ;busyxlcd.c: 16: LATAbits.LATA1 = 1;
  1531  007B9E  8289               	bsf	3977,1,c	;volatile
  1532                           
  1533                           ;busyxlcd.c: 17: DelayFor18TCY();
  1534  007BA0  EC8D  F03D         	call	_DelayFor18TCY	;wreg free
  1535                           
  1536                           ;busyxlcd.c: 35: if(PORTB&0x08)
  1537  007BA4  A681               	btfss	3969,3,c	;volatile
  1538  007BA6  D00A               	goto	l70
  1539                           
  1540                           ;busyxlcd.c: 37: {
  1541                           ;busyxlcd.c: 38: LATAbits.LATA1 = 0;
  1542  007BA8  9289               	bcf	3977,1,c	;volatile
  1543                           
  1544                           ;busyxlcd.c: 39: DelayFor18TCY();
  1545  007BAA  EC8D  F03D         	call	_DelayFor18TCY	;wreg free
  1546                           
  1547                           ;busyxlcd.c: 40: LATAbits.LATA1 = 1;
  1548  007BAE  8289               	bsf	3977,1,c	;volatile
  1549                           
  1550                           ;busyxlcd.c: 41: DelayFor18TCY();
  1551  007BB0  EC8D  F03D         	call	_DelayFor18TCY	;wreg free
  1552                           
  1553                           ;busyxlcd.c: 42: LATAbits.LATA1 = 0;
  1554  007BB4  9289               	bcf	3977,1,c	;volatile
  1555                           
  1556                           ;busyxlcd.c: 43: LATAbits.LATA2 = 0;
  1557  007BB6  9489               	bcf	3977,2,c	;volatile
  1558                           
  1559                           ;busyxlcd.c: 44: return 1;
  1560  007BB8  0E01               	movlw	1
  1561                           
  1562                           ;busyxlcd.c: 45: }
  1563  007BBA  0012               	return	
  1564  007BBC                     l70:
  1565                           
  1566                           ;busyxlcd.c: 46: else
  1567                           ;busyxlcd.c: 47: {
  1568                           ;busyxlcd.c: 48: LATAbits.LATA1 = 0;
  1569  007BBC  9289               	bcf	3977,1,c	;volatile
  1570                           
  1571                           ;busyxlcd.c: 49: DelayFor18TCY();
  1572  007BBE  EC8D  F03D         	call	_DelayFor18TCY	;wreg free
  1573                           
  1574                           ;busyxlcd.c: 50: LATAbits.LATA1 = 1;
  1575  007BC2  8289               	bsf	3977,1,c	;volatile
  1576                           
  1577                           ;busyxlcd.c: 51: DelayFor18TCY();
  1578  007BC4  EC8D  F03D         	call	_DelayFor18TCY	;wreg free
  1579                           
  1580                           ;busyxlcd.c: 52: LATAbits.LATA1 = 0;
  1581  007BC8  9289               	bcf	3977,1,c	;volatile
  1582                           
  1583                           ;busyxlcd.c: 53: LATAbits.LATA2 = 0;
  1584  007BCA  9489               	bcf	3977,2,c	;volatile
  1585                           
  1586                           ;busyxlcd.c: 54: return 0;
  1587  007BCC  0E00               	movlw	0
  1588  007BCE  0012               	return	
  1589  007BD0                     __end_of_BusyXLCD:
  1590                           	opt stack 0
  1591                           wreg	equ	0xFE8
  1592                           indf2	equ	0xFDF
  1593                           fsr2h	equ	0xFDA
  1594                           fsr2l	equ	0xFD9
  1595                           status	equ	0xFD8
  1596                           
  1597 ;; *************** function _DelayFor18TCY *****************
  1598 ;; Defined at:
  1599 ;;		line 122 in file "main.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;		None
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;		None
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1613 ;;      Params:         0       0       0       0       0       0       0
  1614 ;;      Locals:         0       0       0       0       0       0       0
  1615 ;;      Temps:          0       0       0       0       0       0       0
  1616 ;;      Totals:         0       0       0       0       0       0       0
  1617 ;;Total ram usage:        0 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_BusyXLCD
  1623 ;;		_SetDDRamAddr
  1624 ;;		_WriteCmdXLCD
  1625 ;;		_WriteDataXLCD
  1626 ;;		_ReadAddrXLCD
  1627 ;;		_ReadDataXLCD
  1628 ;;		_SetCGRamAddr
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text10
  1633  007B1A                     __ptext10:
  1634                           	opt stack 0
  1635  007B1A                     _DelayFor18TCY:
  1636                           	opt stack 28
  1637                           
  1638                           ;incstack = 0
  1639  007B1A  0E06               	movlw	6
  1640  007B1C                     u507:
  1641  007B1C  2EE8               	decfsz	wreg,f,c
  1642  007B1E  D7FE               	bra	u507
  1643  007B20  D000               	nop2	
  1644  007B22  0012               	return	
  1645  007B24                     __end_of_DelayFor18TCY:
  1646                           	opt stack 0
  1647  0000                     wreg	equ	0xFE8
  1648                           indf2	equ	0xFDF
  1649                           fsr2h	equ	0xFDA
  1650                           fsr2l	equ	0xFD9
  1651                           status	equ	0xFD8
  1652                           wreg	equ	0xFE8
  1653                           indf2	equ	0xFDF
  1654                           fsr2h	equ	0xFDA
  1655                           fsr2l	equ	0xFD9
  1656                           status	equ	0xFD8
  1657                           
  1658                           	psect	rparam
  1659  0000                     wreg	equ	0xFE8
  1660                           indf2	equ	0xFDF
  1661                           fsr2h	equ	0xFDA
  1662                           fsr2l	equ	0xFD9
  1663                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     30      30
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 3
		 -> main@order(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _putrsXLCD->_WriteDataXLCD
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0    1288
                                              5 COMRAM    25    25      0
                          _init_XLCD
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            2     0      2     303
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     120
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0      90
                                              4 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      30
                                              0 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _Delay10KTCYx
       _DelayPORXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _putrsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     1E      1E       1       23.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Oct 30 14:40:29 2017

                     l30 7E24                       l40 7F80                       l32 7E4C  
                     l33 7EA2                       l42 7FA8                       l35 7ED2  
                     l27 7D9C                       l28 7DF4                       l37 7EFA  
                     l70 7BBC                       l38 7F50                       l59 7B50  
                     l94 7CD6                       u30 7CE0                       u25 7C62  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$XT 000000  
            __CFG_LVP$ON 000000                      l100 7CF0                      l103 7D00  
                    l112 7D30                      l121 7B86                      l106 7D10  
                    l122 7B6A                      l109 7D20                      l458 7B36  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000                      u507 7B1C  
                    u457 7E96                      u467 7F44                      u477 7FF2  
                    u487 7B2A                      u497 7B3C    __size_of_WriteCmdXLCD 003E  
                    wreg 000FE8             __CFG_WDT$OFF 000000                     l1401 7DF4  
                   _LATA 000F89                     _LATB 000F8A             __CFG_PWRT$ON 000000  
                   _main 7D42                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9   __size_of_WriteDataXLCD 003E                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
           _WriteCmdXLCD 7BD0            ?_SetDDRamAddr 0001                    ?_main 0001  
                  _PORTB 000F81                    _TRISB 000F93                    _TRISD 000F95  
           main@duration 000C    __size_of_Delay10KTCYx 0016            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000             main@recorded 0008            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000           __CFG_BOREN$OFF 000000                    status 000FD8  
        __initialization 7B14             __end_of_main 8000         __end_of_BusyXLCD 7BD0  
           _Delay10KTCYx 7B34    __size_of_DelayPORXLCD 0010           ??_SetDDRamAddr 0001  
       __end_of_OpenXLCD 7D42                   ??_main 0006            __activetblptr 000000  
          _WriteDataXLCD 7C0E                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
           _DelayPORXLCD 7B24           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
         ?_WriteDataXLCD 0001               __accesstop 0080  __end_of__initialization 7B14  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
 __size_of_DelayFor18TCY 000A                ?_BusyXLCD 0001          WriteCmdXLCD@cmd 0001  
   __end_of_SetDDRamAddr 7C9E       __size_of_init_XLCD 001E                ?_OpenXLCD 0001  
      WriteDataXLCD@data 0001          ??_WriteDataXLCD 0001       __size_of_putrsXLCD 002E  
             ??_BusyXLCD 0001               ??_OpenXLCD 0005                  __Hparam 0000  
                __Lparam 0000            _DelayFor18TCY 7B1A                  __pcinit 7B14  
        putrsXLCD@buffer 0002                  __ramtop 0600                  __ptext0 7D42  
                __ptext1 7B68                  __ptext2 7C0E                  __ptext3 7B4A  
                __ptext4 7C9E                  __ptext5 7BD0                  __ptext6 7C4C  
                __ptext7 7B24                  __ptext8 7B34                  __ptext9 7B96  
      __end_of_init_XLCD 7B68     end_of_initialization 7B14           ?_DelayFor18TCY 0001  
      __end_of_putrsXLCD 7B96           main@startcount 000A                _PORTDbits 000F83  
              _TRISAbits 000F92                _TRISDbits 000F95    __size_of_SetDDRamAddr 0052  
             main@rd0end 000E               main@rd1end 0010               main@rd2end 0012  
           _SetDDRamAddr 7C4C       SetDDRamAddr@DDaddr 0004      start_initialization 7B14  
      __size_of_BusyXLCD 003A          ??_DelayFor18TCY 0001        __size_of_OpenXLCD 00A4  
          ?_WriteCmdXLCD 0001         __CFG_LPT1OSC$OFF 000000        __CFG_CCP2MX$PORTC 000000  
         ??_WriteCmdXLCD 0001            ?_Delay10KTCYx 0001    __end_of_WriteDataXLCD 7C4C  
              _init_XLCD 7B4A                 _LATAbits 000F89                 _PIE1bits 000F9D  
          ?_DelayPORXLCD 0001                 _PIR1bits 000F9E          OpenXLCD@lcdtype 0005  
       __CFG_WDTPS$32768 000000           ??_Delay10KTCYx 0001               _ADCON0bits 000FC2  
              _putrsXLCD 7B68                main@count 0018                main@order 001C  
       Delay10KTCYx@unit 0002               ?_init_XLCD 0001                 _BusyXLCD 7B96  
         ??_DelayPORXLCD 0001                 _OpenXLCD 7C9E                 __Hrparam 0000  
               __Lrparam 0000               ?_putrsXLCD 0002                 __ptext10 7B1A  
   __end_of_WriteCmdXLCD 7C0E            __size_of_main 02BE          main@tempcounter 0014  
             _INTCONbits 000FF2              ??_init_XLCD 0006     __end_of_Delay10KTCYx 7B4A  
  __end_of_DelayFor18TCY 7B24     __end_of_DelayPORXLCD 7B34              ??_putrsXLCD 0004  
