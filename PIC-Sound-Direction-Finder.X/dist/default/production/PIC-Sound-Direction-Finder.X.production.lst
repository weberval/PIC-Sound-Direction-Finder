

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Nov 10 09:12:16 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24  0000                     
    25                           ; Version 1.44
    26                           ; Generated 14/09/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4520 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	idataCOMRAM
    61  007B4C                     __pidataCOMRAM:
    62                           	opt stack 0
    63                           
    64                           ;initializer for _rd2start
    65  007B4C  0001               	dw	1
    66                           
    67                           ;initializer for _rd1start
    68  007B4E  0001               	dw	1
    69                           
    70                           ;initializer for _rd0start
    71  007B50  0001               	dw	1
    72  0000                     _TRISAbits	set	3986
    73  0000                     _TRISB	set	3987
    74  0000                     _PORTB	set	3969
    75  0000                     _LATAbits	set	3977
    76  0000                     _PORTDbits	set	3971
    77  0000                     _TRISDbits	set	3989
    78  0000                     _TRISD	set	3989
    79  0000                     _LATB	set	3978
    80  0000                     _LATA	set	3977
    81                           
    82                           ; #config settings
    83  0000                     
    84                           	psect	cinit
    85  007BF8                     __pcinit:
    86                           	opt stack 0
    87  007BF8                     start_initialization:
    88                           	opt stack 0
    89  007BF8                     __initialization:
    90                           	opt stack 0
    91                           
    92                           ; Initialize objects allocated to COMRAM (6 bytes)
    93                           ; load TBLPTR registers with __pidataCOMRAM
    94  007BF8  0E4C               	movlw	low __pidataCOMRAM
    95  007BFA  6EF6               	movwf	tblptrl,c
    96  007BFC  0E7B               	movlw	high __pidataCOMRAM
    97  007BFE  6EF7               	movwf	tblptrh,c
    98  007C00  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    99  007C02  6EF8               	movwf	tblptru,c
   100  007C04  EE00  F010         	lfsr	0,__pdataCOMRAM
   101  007C08  EE10 F006          	lfsr	1,6
   102  007C0C                     copy_data0:
   103  007C0C  0009               	tblrd		*+
   104  007C0E  CFF5 FFEE          	movff	tablat,postinc0
   105  007C12  50E5               	movf	postdec1,w,c
   106  007C14  50E1               	movf	fsr1l,w,c
   107  007C16  E1FA               	bnz	copy_data0
   108                           
   109                           ; Clear objects allocated to COMRAM (4 bytes)
   110  007C18  6A19               	clrf	(__pbssCOMRAM+3)& (0+255),c
   111  007C1A  6A18               	clrf	(__pbssCOMRAM+2)& (0+255),c
   112  007C1C  6A17               	clrf	(__pbssCOMRAM+1)& (0+255),c
   113  007C1E  6A16               	clrf	__pbssCOMRAM& (0+255),c
   114  007C20                     end_of_initialization:
   115                           	opt stack 0
   116  007C20                     __end_of__initialization:
   117                           	opt stack 0
   118  007C20  0100               	movlb	0
   119  007C22  EFE9  F03E         	goto	_main	;jump to C main() function
   120                           tblptru	equ	0xFF8
   121                           tblptrh	equ	0xFF7
   122                           tblptrl	equ	0xFF6
   123                           tablat	equ	0xFF5
   124                           postinc0	equ	0xFEE
   125                           postdec1	equ	0xFE5
   126                           fsr1l	equ	0xFE1
   127                           
   128                           	psect	bssCOMRAM
   129  000016                     __pbssCOMRAM:
   130                           	opt stack 0
   131  000016                     _duration:
   132                           	opt stack 0
   133  000016                     	ds	2
   134  000018                     _order:
   135                           	opt stack 0
   136  000018                     	ds	2
   137                           tblptru	equ	0xFF8
   138                           tblptrh	equ	0xFF7
   139                           tblptrl	equ	0xFF6
   140                           tablat	equ	0xFF5
   141                           postinc0	equ	0xFEE
   142                           postdec1	equ	0xFE5
   143                           fsr1l	equ	0xFE1
   144                           
   145                           	psect	dataCOMRAM
   146  000010                     __pdataCOMRAM:
   147                           	opt stack 0
   148  000010                     _rd2start:
   149                           	opt stack 0
   150  000010                     	ds	2
   151  000012                     _rd1start:
   152                           	opt stack 0
   153  000012                     	ds	2
   154  000014                     _rd0start:
   155                           	opt stack 0
   156  000014                     	ds	2
   157                           tblptru	equ	0xFF8
   158                           tblptrh	equ	0xFF7
   159                           tblptrl	equ	0xFF6
   160                           tablat	equ	0xFF5
   161                           postinc0	equ	0xFEE
   162                           postdec1	equ	0xFE5
   163                           fsr1l	equ	0xFE1
   164                           
   165                           	psect	cstackCOMRAM
   166  000001                     __pcstackCOMRAM:
   167                           	opt stack 0
   168  000001                     ??_Delay10KTCYx:
   169  000001                     ??_SetDDRamAddr:
   170  000001                     ??_DelayPORXLCD:
   171  000001                     WriteCmdXLCD@cmd:
   172                           	opt stack 0
   173  000001                     WriteDataXLCD@data:
   174                           	opt stack 0
   175                           
   176                           ; 1 bytes @ 0x0
   177  000001                     	ds	1
   178  000002                     Delay10KTCYx@unit:
   179                           	opt stack 0
   180  000002                     putrsXLCD@buffer:
   181                           	opt stack 0
   182                           
   183                           ; 2 bytes @ 0x1
   184  000002                     	ds	2
   185  000004                     SetDDRamAddr@DDaddr:
   186                           	opt stack 0
   187                           
   188                           ; 1 bytes @ 0x3
   189  000004                     	ds	1
   190  000005                     OpenXLCD@lcdtype:
   191                           	opt stack 0
   192                           
   193                           ; 1 bytes @ 0x4
   194  000005                     	ds	1
   195  000006                     ??_main:
   196                           
   197                           ; 1 bytes @ 0x5
   198  000006                     	ds	2
   199  000008                     main@tempcounter:
   200                           	opt stack 0
   201                           
   202                           ; 4 bytes @ 0x7
   203  000008                     	ds	4
   204  00000C                     main@count:
   205                           	opt stack 0
   206                           
   207                           ; 4 bytes @ 0xB
   208  00000C                     	ds	4
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           tblptrl	equ	0xFF6
   212                           tablat	equ	0xFF5
   213                           postinc0	equ	0xFEE
   214                           postdec1	equ	0xFE5
   215                           fsr1l	equ	0xFE1
   216                           
   217 ;;
   218 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   219 ;;
   220 ;; *************** function _main *****************
   221 ;; Defined at:
   222 ;;		line 11 in file "main.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;		None
   225 ;; Auto vars:     Size  Location     Type
   226 ;;  count           4   11[COMRAM] unsigned long 
   227 ;;  tempcounter     4    7[COMRAM] unsigned long 
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   232 ;; Tracked objects:
   233 ;;		On entry : 0/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   237 ;;      Params:         0       0       0       0       0       0       0
   238 ;;      Locals:         8       0       0       0       0       0       0
   239 ;;      Temps:          2       0       0       0       0       0       0
   240 ;;      Totals:        10       0       0       0       0       0       0
   241 ;;Total ram usage:       10 bytes
   242 ;; Hardware stack levels required when called:    4
   243 ;; This function calls:
   244 ;;		_init_XLCD
   245 ;;		_putrsXLCD
   246 ;;		_reset
   247 ;; This function is called by:
   248 ;;		Startup code after reset
   249 ;; This function uses a non-reentrant model
   250 ;;
   251                           
   252                           	psect	text0
   253  007DD2                     __ptext0:
   254                           	opt stack 0
   255  007DD2                     _main:
   256                           	opt stack 27
   257                           
   258                           ;main.c: 13: LATA = 0xFF;
   259                           
   260                           ;incstack = 0
   261  007DD2  6889               	setf	3977,c	;volatile
   262                           
   263                           ;main.c: 14: LATB = 0xFF;
   264  007DD4  688A               	setf	3978,c	;volatile
   265                           
   266                           ;main.c: 15: TRISD = 0;
   267  007DD6  0E00               	movlw	0
   268  007DD8  6E95               	movwf	3989,c	;volatile
   269                           
   270                           ;main.c: 16: TRISDbits.RD0 = 1;
   271  007DDA  8095               	bsf	3989,0,c	;volatile
   272                           
   273                           ;main.c: 17: TRISDbits.RD1 = 1;
   274  007DDC  8295               	bsf	3989,1,c	;volatile
   275                           
   276                           ;main.c: 18: TRISDbits.RD2 = 1;
   277  007DDE  8495               	bsf	3989,2,c	;volatile
   278                           
   279                           ;main.c: 20: init_XLCD();
   280  007DE0  ECC1  F03D         	call	_init_XLCD	;wreg free
   281                           
   282                           ;main.c: 23: unsigned long tempcounter = 0;
   283  007DE4  0E00               	movlw	0
   284  007DE6  6E08               	movwf	main@tempcounter,c
   285  007DE8  0E00               	movlw	0
   286  007DEA  6E09               	movwf	main@tempcounter+1,c
   287  007DEC  0E00               	movlw	0
   288  007DEE  6E0A               	movwf	main@tempcounter+2,c
   289  007DF0  0E00               	movlw	0
   290  007DF2  6E0B               	movwf	main@tempcounter+3,c
   291                           
   292                           ;main.c: 24: unsigned long count = 0;
   293  007DF4  0E00               	movlw	0
   294  007DF6  6E0C               	movwf	main@count,c
   295  007DF8  0E00               	movlw	0
   296  007DFA  6E0D               	movwf	main@count+1,c
   297  007DFC  0E00               	movlw	0
   298  007DFE  6E0E               	movwf	main@count+2,c
   299  007E00  0E00               	movlw	0
   300  007E02  6E0F               	movwf	main@count+3,c
   301  007E04                     
   302                           ;main.c: 27: ++count;
   303  007E04  0E01               	movlw	1
   304  007E06  260C               	addwf	main@count,f,c
   305  007E08  0E00               	movlw	0
   306  007E0A  220D               	addwfc	main@count+1,f,c
   307  007E0C  220E               	addwfc	main@count+2,f,c
   308  007E0E  220F               	addwfc	main@count+3,f,c
   309                           
   310                           ;main.c: 28: if(count == 100000) {
   311  007E10  0EA0               	movlw	160
   312  007E12  180C               	xorwf	main@count,w,c
   313  007E14  E113               	bnz	l1273
   314  007E16  0E86               	movlw	134
   315  007E18  180D               	xorwf	main@count+1,w,c
   316  007E1A  E110               	bnz	l1273
   317  007E1C  040E               	decf	main@count+2,w,c
   318  007E1E  100F               	iorwf	main@count+3,w,c
   319  007E20  A4D8               	btfss	status,2,c
   320  007E22  D00C               	goto	l40
   321                           
   322                           ;main.c: 29: init_XLCD();
   323  007E24  ECC1  F03D         	call	_init_XLCD	;wreg free
   324                           
   325                           ;main.c: 30: reset();
   326  007E28  ECD0  F03D         	call	_reset	;wreg free
   327                           
   328                           ;main.c: 31: count = 0;
   329  007E2C  0E00               	movlw	0
   330  007E2E  6E0C               	movwf	main@count,c
   331  007E30  0E00               	movlw	0
   332  007E32  6E0D               	movwf	main@count+1,c
   333  007E34  0E00               	movlw	0
   334  007E36  6E0E               	movwf	main@count+2,c
   335  007E38  0E00               	movlw	0
   336  007E3A  6E0F               	movwf	main@count+3,c
   337  007E3C                     l40:
   338  007E3C                     l1273:
   339                           
   340                           ;main.c: 33: }
   341                           ;main.c: 36: if(PORTDbits.RD0 == 1 && rd0start == 1) {
   342  007E3C  A083               	btfss	3971,0,c	;volatile
   343  007E3E  D049               	goto	l45
   344  007E40  0414               	decf	_rd0start,w,c
   345  007E42  1015               	iorwf	_rd0start+1,w,c
   346  007E44  A4D8               	btfss	status,2,c
   347  007E46  D045               	goto	l45
   348                           
   349                           ;main.c: 38: rd0start = 0;
   350  007E48  0E00               	movlw	0
   351  007E4A  6E15               	movwf	_rd0start+1,c
   352  007E4C  0E00               	movlw	0
   353  007E4E  6E14               	movwf	_rd0start,c
   354                           
   355                           ;main.c: 39: if(order[0] == (0)) {
   356  007E50  5018               	movf	_order,w,c
   357  007E52  A4D8               	btfss	status,2,c
   358  007E54  D00B               	goto	l42
   359                           
   360                           ;main.c: 40: order[0] = 'M';
   361  007E56  0E4D               	movlw	77
   362  007E58  6E18               	movwf	_order,c
   363                           
   364                           ;main.c: 41: tempcounter = count;
   365  007E5A  C00C  F008         	movff	main@count,main@tempcounter
   366  007E5E  C00D  F009         	movff	main@count+1,main@tempcounter+1
   367  007E62  C00E  F00A         	movff	main@count+2,main@tempcounter+2
   368  007E66  C00F  F00B         	movff	main@count+3,main@tempcounter+3
   369                           
   370                           ;main.c: 42: }
   371  007E6A  D033               	goto	l45
   372  007E6C                     l42:
   373                           
   374                           ;main.c: 43: else if(order[1] == (0)) {
   375  007E6C  5019               	movf	_order+1,w,c
   376  007E6E  A4D8               	btfss	status,2,c
   377  007E70  D011               	goto	l44
   378                           
   379                           ;main.c: 44: order[1] = 'M';
   380  007E72  0E4D               	movlw	77
   381  007E74  6E19               	movwf	_order+1,c
   382                           
   383                           ;main.c: 45: duration = count - tempcounter;
   384  007E76  C008  F006         	movff	main@tempcounter,??_main
   385  007E7A  C009  F007         	movff	main@tempcounter+1,??_main+1
   386  007E7E  1E06               	comf	??_main,f,c
   387  007E80  1E07               	comf	??_main+1,f,c
   388  007E82  4A06               	infsnz	??_main,f,c
   389  007E84  2A07               	incf	??_main+1,f,c
   390  007E86  500C               	movf	main@count,w,c
   391  007E88  2406               	addwf	??_main,w,c
   392  007E8A  6E16               	movwf	_duration,c
   393  007E8C  500D               	movf	main@count+1,w,c
   394  007E8E  2007               	addwfc	??_main+1,w,c
   395  007E90  6E17               	movwf	_duration+1,c
   396                           
   397                           ;main.c: 46: }
   398  007E92  D01F               	goto	l45
   399  007E94                     l44:
   400                           
   401                           ;main.c: 47: else {
   402                           ;main.c: 48: if(duration > 0x000F) {
   403  007E94  BE17               	btfsc	_duration+1,7,c
   404  007E96  D008               	goto	l46
   405  007E98  5017               	movf	_duration+1,w,c
   406  007E9A  E104               	bnz	u390
   407  007E9C  0E10               	movlw	16
   408  007E9E  5C16               	subwf	_duration,w,c
   409  007EA0  A0D8               	btfss	status,0,c
   410  007EA2  D002               	goto	l46
   411  007EA4                     u390:
   412                           
   413                           ;main.c: 49: order[1] = (0);
   414  007EA4  0E00               	movlw	0
   415  007EA6  6E19               	movwf	_order+1,c
   416  007EA8                     l46:
   417                           
   418                           ;main.c: 50: }
   419                           ;main.c: 51: init_XLCD();
   420  007EA8  ECC1  F03D         	call	_init_XLCD	;wreg free
   421                           
   422                           ;main.c: 52: putrsXLCD(order);
   423  007EAC  0E18               	movlw	low _order
   424  007EAE  6E02               	movwf	putrsXLCD@buffer,c
   425  007EB0  0E00               	movlw	high _order
   426  007EB2  6E03               	movwf	putrsXLCD@buffer+1,c
   427  007EB4  ECE5  F03D         	call	_putrsXLCD	;wreg free
   428                           
   429                           ;main.c: 53: reset();
   430  007EB8  ECD0  F03D         	call	_reset	;wreg free
   431                           
   432                           ;main.c: 54: _delay((unsigned long)((2000)*(4000000/4000.0)));
   433  007EBC  0E0B               	movlw	11
   434  007EBE  6E07               	movwf	(??_main+1)& (0+255),c
   435  007EC0  0E26               	movlw	38
   436  007EC2  6E06               	movwf	??_main& (0+255),c
   437  007EC4  0E5E               	movlw	94
   438  007EC6                     u507:
   439  007EC6  2EE8               	decfsz	wreg,f,c
   440  007EC8  D7FE               	bra	u507
   441  007ECA  2E06               	decfsz	??_main& (0+255),f,c
   442  007ECC  D7FC               	bra	u507
   443  007ECE  2E07               	decfsz	(??_main+1)& (0+255),f,c
   444  007ED0  D7FA               	bra	u507
   445  007ED2                     l45:
   446                           
   447                           ;main.c: 56: }
   448                           ;main.c: 57: }
   449                           ;main.c: 59: if(PORTDbits.RD1 == 1 && rd1start == 1) {
   450  007ED2  A283               	btfss	3971,1,c	;volatile
   451  007ED4  D049               	goto	l51
   452  007ED6  0412               	decf	_rd1start,w,c
   453  007ED8  1013               	iorwf	_rd1start+1,w,c
   454  007EDA  A4D8               	btfss	status,2,c
   455  007EDC  D045               	goto	l51
   456                           
   457                           ;main.c: 60: rd1start = 0;
   458  007EDE  0E00               	movlw	0
   459  007EE0  6E13               	movwf	_rd1start+1,c
   460  007EE2  0E00               	movlw	0
   461  007EE4  6E12               	movwf	_rd1start,c
   462                           
   463                           ;main.c: 61: if(order[0] == (0)) {
   464  007EE6  5018               	movf	_order,w,c
   465  007EE8  A4D8               	btfss	status,2,c
   466  007EEA  D00B               	goto	l48
   467                           
   468                           ;main.c: 62: order[0] = 'L';
   469  007EEC  0E4C               	movlw	76
   470  007EEE  6E18               	movwf	_order,c
   471                           
   472                           ;main.c: 63: tempcounter = count;
   473  007EF0  C00C  F008         	movff	main@count,main@tempcounter
   474  007EF4  C00D  F009         	movff	main@count+1,main@tempcounter+1
   475  007EF8  C00E  F00A         	movff	main@count+2,main@tempcounter+2
   476  007EFC  C00F  F00B         	movff	main@count+3,main@tempcounter+3
   477                           
   478                           ;main.c: 64: }
   479  007F00  D033               	goto	l51
   480  007F02                     l48:
   481                           
   482                           ;main.c: 65: else if(order[1] == (0)) {
   483  007F02  5019               	movf	_order+1,w,c
   484  007F04  A4D8               	btfss	status,2,c
   485  007F06  D011               	goto	l50
   486                           
   487                           ;main.c: 66: order[1] = 'L';
   488  007F08  0E4C               	movlw	76
   489  007F0A  6E19               	movwf	_order+1,c
   490                           
   491                           ;main.c: 67: duration = count - tempcounter;
   492  007F0C  C008  F006         	movff	main@tempcounter,??_main
   493  007F10  C009  F007         	movff	main@tempcounter+1,??_main+1
   494  007F14  1E06               	comf	??_main,f,c
   495  007F16  1E07               	comf	??_main+1,f,c
   496  007F18  4A06               	infsnz	??_main,f,c
   497  007F1A  2A07               	incf	??_main+1,f,c
   498  007F1C  500C               	movf	main@count,w,c
   499  007F1E  2406               	addwf	??_main,w,c
   500  007F20  6E16               	movwf	_duration,c
   501  007F22  500D               	movf	main@count+1,w,c
   502  007F24  2007               	addwfc	??_main+1,w,c
   503  007F26  6E17               	movwf	_duration+1,c
   504                           
   505                           ;main.c: 68: }
   506  007F28  D01F               	goto	l51
   507  007F2A                     l50:
   508                           
   509                           ;main.c: 69: else {
   510                           ;main.c: 70: if(duration > 0x000F) {
   511  007F2A  BE17               	btfsc	_duration+1,7,c
   512  007F2C  D008               	goto	l52
   513  007F2E  5017               	movf	_duration+1,w,c
   514  007F30  E104               	bnz	u440
   515  007F32  0E10               	movlw	16
   516  007F34  5C16               	subwf	_duration,w,c
   517  007F36  A0D8               	btfss	status,0,c
   518  007F38  D002               	goto	l52
   519  007F3A                     u440:
   520                           
   521                           ;main.c: 71: order[1] = (0);
   522  007F3A  0E00               	movlw	0
   523  007F3C  6E19               	movwf	_order+1,c
   524  007F3E                     l52:
   525                           
   526                           ;main.c: 72: }
   527                           ;main.c: 73: init_XLCD();
   528  007F3E  ECC1  F03D         	call	_init_XLCD	;wreg free
   529                           
   530                           ;main.c: 74: putrsXLCD(order);
   531  007F42  0E18               	movlw	low _order
   532  007F44  6E02               	movwf	putrsXLCD@buffer,c
   533  007F46  0E00               	movlw	high _order
   534  007F48  6E03               	movwf	putrsXLCD@buffer+1,c
   535  007F4A  ECE5  F03D         	call	_putrsXLCD	;wreg free
   536                           
   537                           ;main.c: 75: reset();
   538  007F4E  ECD0  F03D         	call	_reset	;wreg free
   539                           
   540                           ;main.c: 76: _delay((unsigned long)((2000)*(4000000/4000.0)));
   541  007F52  0E0B               	movlw	11
   542  007F54  6E07               	movwf	(??_main+1)& (0+255),c
   543  007F56  0E26               	movlw	38
   544  007F58  6E06               	movwf	??_main& (0+255),c
   545  007F5A  0E5E               	movlw	94
   546  007F5C                     u517:
   547  007F5C  2EE8               	decfsz	wreg,f,c
   548  007F5E  D7FE               	bra	u517
   549  007F60  2E06               	decfsz	??_main& (0+255),f,c
   550  007F62  D7FC               	bra	u517
   551  007F64  2E07               	decfsz	(??_main+1)& (0+255),f,c
   552  007F66  D7FA               	bra	u517
   553  007F68                     l51:
   554                           
   555                           ;main.c: 78: }
   556                           ;main.c: 79: }
   557                           ;main.c: 81: if(PORTDbits.RD2 == 1 && rd2start == 1) {
   558  007F68  A483               	btfss	3971,2,c	;volatile
   559  007F6A  D74C               	goto	l39
   560  007F6C  0410               	decf	_rd2start,w,c
   561  007F6E  1011               	iorwf	_rd2start+1,w,c
   562  007F70  A4D8               	btfss	status,2,c
   563  007F72  D748               	goto	l39
   564                           
   565                           ;main.c: 82: rd2start = 0;
   566  007F74  0E00               	movlw	0
   567  007F76  6E11               	movwf	_rd2start+1,c
   568  007F78  0E00               	movlw	0
   569  007F7A  6E10               	movwf	_rd2start,c
   570                           
   571                           ;main.c: 83: if(order[0] == (0)) {
   572  007F7C  5018               	movf	_order,w,c
   573  007F7E  A4D8               	btfss	status,2,c
   574  007F80  D00B               	goto	l54
   575                           
   576                           ;main.c: 84: order[0] = 'R';
   577  007F82  0E52               	movlw	82
   578  007F84  6E18               	movwf	_order,c
   579                           
   580                           ;main.c: 85: tempcounter = count;
   581  007F86  C00C  F008         	movff	main@count,main@tempcounter
   582  007F8A  C00D  F009         	movff	main@count+1,main@tempcounter+1
   583  007F8E  C00E  F00A         	movff	main@count+2,main@tempcounter+2
   584  007F92  C00F  F00B         	movff	main@count+3,main@tempcounter+3
   585                           
   586                           ;main.c: 86: }
   587  007F96  D736               	goto	l39
   588  007F98                     l54:
   589                           
   590                           ;main.c: 87: else if(order[1] == (0)) {
   591  007F98  5019               	movf	_order+1,w,c
   592  007F9A  A4D8               	btfss	status,2,c
   593  007F9C  D011               	goto	l56
   594                           
   595                           ;main.c: 88: order[1] = 'R';
   596  007F9E  0E52               	movlw	82
   597  007FA0  6E19               	movwf	_order+1,c
   598                           
   599                           ;main.c: 89: duration = count - tempcounter;
   600  007FA2  C008  F006         	movff	main@tempcounter,??_main
   601  007FA6  C009  F007         	movff	main@tempcounter+1,??_main+1
   602  007FAA  1E06               	comf	??_main,f,c
   603  007FAC  1E07               	comf	??_main+1,f,c
   604  007FAE  4A06               	infsnz	??_main,f,c
   605  007FB0  2A07               	incf	??_main+1,f,c
   606  007FB2  500C               	movf	main@count,w,c
   607  007FB4  2406               	addwf	??_main,w,c
   608  007FB6  6E16               	movwf	_duration,c
   609  007FB8  500D               	movf	main@count+1,w,c
   610  007FBA  2007               	addwfc	??_main+1,w,c
   611  007FBC  6E17               	movwf	_duration+1,c
   612                           
   613                           ;main.c: 90: }
   614  007FBE  D722               	goto	l39
   615  007FC0                     l56:
   616                           
   617                           ;main.c: 91: else {
   618                           ;main.c: 92: if(duration > 0x000F) {
   619  007FC0  BE17               	btfsc	_duration+1,7,c
   620  007FC2  D008               	goto	l58
   621  007FC4  5017               	movf	_duration+1,w,c
   622  007FC6  E104               	bnz	u490
   623  007FC8  0E10               	movlw	16
   624  007FCA  5C16               	subwf	_duration,w,c
   625  007FCC  A0D8               	btfss	status,0,c
   626  007FCE  D002               	goto	l58
   627  007FD0                     u490:
   628                           
   629                           ;main.c: 93: order[1] = (0);
   630  007FD0  0E00               	movlw	0
   631  007FD2  6E19               	movwf	_order+1,c
   632  007FD4                     l58:
   633                           
   634                           ;main.c: 94: }
   635                           ;main.c: 95: init_XLCD();
   636  007FD4  ECC1  F03D         	call	_init_XLCD	;wreg free
   637                           
   638                           ;main.c: 96: putrsXLCD(order);
   639  007FD8  0E18               	movlw	low _order
   640  007FDA  6E02               	movwf	putrsXLCD@buffer,c
   641  007FDC  0E00               	movlw	high _order
   642  007FDE  6E03               	movwf	putrsXLCD@buffer+1,c
   643  007FE0  ECE5  F03D         	call	_putrsXLCD	;wreg free
   644                           
   645                           ;main.c: 97: reset();
   646  007FE4  ECD0  F03D         	call	_reset	;wreg free
   647                           
   648                           ;main.c: 98: _delay((unsigned long)((2000)*(4000000/4000.0)));
   649  007FE8  0E0B               	movlw	11
   650  007FEA  6E07               	movwf	(??_main+1)& (0+255),c
   651  007FEC  0E26               	movlw	38
   652  007FEE  6E06               	movwf	??_main& (0+255),c
   653  007FF0  0E5E               	movlw	94
   654  007FF2                     u527:
   655  007FF2  2EE8               	decfsz	wreg,f,c
   656  007FF4  D7FE               	bra	u527
   657  007FF6  2E06               	decfsz	??_main& (0+255),f,c
   658  007FF8  D7FC               	bra	u527
   659  007FFA  2E07               	decfsz	(??_main+1)& (0+255),f,c
   660  007FFC  D7FA               	bra	u527
   661  007FFE  D702               	goto	l39
   662  008000                     __end_of_main:
   663                           	opt stack 0
   664                           tblptru	equ	0xFF8
   665                           tblptrh	equ	0xFF7
   666                           tblptrl	equ	0xFF6
   667                           tablat	equ	0xFF5
   668                           postinc0	equ	0xFEE
   669                           wreg	equ	0xFE8
   670                           postdec1	equ	0xFE5
   671                           fsr1l	equ	0xFE1
   672                           status	equ	0xFD8
   673                           
   674 ;; *************** function _reset *****************
   675 ;; Defined at:
   676 ;;		line 107 in file "main.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  2   12[None  ] int 
   683 ;; Registers used:
   684 ;;		wreg, status,2
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   690 ;;      Params:         0       0       0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0       0       0
   692 ;;      Temps:          0       0       0       0       0       0       0
   693 ;;      Totals:         0       0       0       0       0       0       0
   694 ;;Total ram usage:        0 bytes
   695 ;; Hardware stack levels used:    1
   696 ;; This function calls:
   697 ;;		Nothing
   698 ;; This function is called by:
   699 ;;		_main
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           	psect	text1
   704  007BA0                     __ptext1:
   705                           	opt stack 0
   706  007BA0                     _reset:
   707                           	opt stack 30
   708                           
   709                           ;main.c: 109: order[0] = (0);
   710                           
   711                           ;incstack = 0
   712  007BA0  0E00               	movlw	0
   713  007BA2  6E18               	movwf	_order,c
   714                           
   715                           ;main.c: 110: order[1] = (0);
   716  007BA4  0E00               	movlw	0
   717  007BA6  6E19               	movwf	_order+1,c
   718                           
   719                           ;main.c: 111: rd0start = 1;
   720  007BA8  0E00               	movlw	0
   721  007BAA  6E15               	movwf	_rd0start+1,c
   722  007BAC  0E01               	movlw	1
   723  007BAE  6E14               	movwf	_rd0start,c
   724                           
   725                           ;main.c: 112: rd1start = 1;
   726  007BB0  0E00               	movlw	0
   727  007BB2  6E13               	movwf	_rd1start+1,c
   728  007BB4  0E01               	movlw	1
   729  007BB6  6E12               	movwf	_rd1start,c
   730                           
   731                           ;main.c: 113: rd2start = 1;
   732  007BB8  0E00               	movlw	0
   733  007BBA  6E11               	movwf	_rd2start+1,c
   734  007BBC  0E01               	movlw	1
   735  007BBE  6E10               	movwf	_rd2start,c
   736                           
   737                           ;main.c: 114: duration = 0;
   738  007BC0  0E00               	movlw	0
   739  007BC2  6E17               	movwf	_duration+1,c
   740  007BC4  0E00               	movlw	0
   741  007BC6  6E16               	movwf	_duration,c
   742  007BC8  0012               	return	
   743  007BCA                     __end_of_reset:
   744                           	opt stack 0
   745                           tblptru	equ	0xFF8
   746                           tblptrh	equ	0xFF7
   747                           tblptrl	equ	0xFF6
   748                           tablat	equ	0xFF5
   749                           postinc0	equ	0xFEE
   750                           wreg	equ	0xFE8
   751                           postdec1	equ	0xFE5
   752                           fsr1l	equ	0xFE1
   753                           status	equ	0xFD8
   754                           
   755 ;; *************** function _putrsXLCD *****************
   756 ;; Defined at:
   757 ;;		line 16 in file "putrxlcd.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;  buffer          2    1[COMRAM] PTR const unsigned char 
   760 ;;		 -> order(2), 
   761 ;; Auto vars:     Size  Location     Type
   762 ;;		None
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   772 ;;      Params:         2       0       0       0       0       0       0
   773 ;;      Locals:         0       0       0       0       0       0       0
   774 ;;      Temps:          0       0       0       0       0       0       0
   775 ;;      Totals:         2       0       0       0       0       0       0
   776 ;;Total ram usage:        2 bytes
   777 ;; Hardware stack levels used:    1
   778 ;; Hardware stack levels required when called:    2
   779 ;; This function calls:
   780 ;;		_BusyXLCD
   781 ;;		_WriteDataXLCD
   782 ;; This function is called by:
   783 ;;		_main
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           	psect	text2
   788  007BCA                     __ptext2:
   789                           	opt stack 0
   790  007BCA                     _putrsXLCD:
   791                           	opt stack 28
   792                           
   793                           ;putrxlcd.c: 18: while(*buffer)
   794                           
   795                           ;incstack = 0
   796  007BCA  D00E               	goto	l139
   797  007BCC                     
   798                           ;putrxlcd.c: 19: {
   799                           ;putrxlcd.c: 20: while(BusyXLCD());
   800  007BCC  EC13  F03E         	call	_BusyXLCD	;wreg free
   801  007BD0  0900               	iorlw	0
   802  007BD2  A4D8               	btfss	status,2,c
   803  007BD4  D7FB               	goto	l140
   804                           
   805                           ;putrxlcd.c: 21: WriteDataXLCD(*buffer);
   806  007BD6  C002  FFD9         	movff	putrsXLCD@buffer,fsr2l
   807  007BDA  C003  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
   808  007BDE  50DF               	movf	indf2,w,c
   809  007BE0  EC4F  F03E         	call	_WriteDataXLCD
   810                           
   811                           ;putrxlcd.c: 22: buffer++;
   812  007BE4  4A02               	infsnz	putrsXLCD@buffer,f,c
   813  007BE6  2A03               	incf	putrsXLCD@buffer+1,f,c
   814  007BE8                     l139:
   815  007BE8  C002  FFD9         	movff	putrsXLCD@buffer,fsr2l
   816  007BEC  C003  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
   817  007BF0  50DF               	movf	indf2,w,c
   818  007BF2  B4D8               	btfsc	status,2,c
   819  007BF4  0012               	return	
   820  007BF6  D7EA               	goto	l140
   821  007BF8                     __end_of_putrsXLCD:
   822                           	opt stack 0
   823                           tblptru	equ	0xFF8
   824                           tblptrh	equ	0xFF7
   825                           tblptrl	equ	0xFF6
   826                           tablat	equ	0xFF5
   827                           postinc0	equ	0xFEE
   828                           wreg	equ	0xFE8
   829                           postdec1	equ	0xFE5
   830                           fsr1l	equ	0xFE1
   831                           indf2	equ	0xFDF
   832                           fsr2h	equ	0xFDA
   833                           fsr2l	equ	0xFD9
   834                           status	equ	0xFD8
   835                           
   836 ;; *************** function _WriteDataXLCD *****************
   837 ;; Defined at:
   838 ;;		line 16 in file "writdata.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;  data            1    wreg     unsigned char 
   841 ;; Auto vars:     Size  Location     Type
   842 ;;  data            1    0[COMRAM] unsigned char 
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		wreg, status,2, status,0, cstack
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   852 ;;      Params:         0       0       0       0       0       0       0
   853 ;;      Locals:         1       0       0       0       0       0       0
   854 ;;      Temps:          0       0       0       0       0       0       0
   855 ;;      Totals:         1       0       0       0       0       0       0
   856 ;;Total ram usage:        1 bytes
   857 ;; Hardware stack levels used:    1
   858 ;; Hardware stack levels required when called:    1
   859 ;; This function calls:
   860 ;;		_DelayFor18TCY
   861 ;; This function is called by:
   862 ;;		_putrsXLCD
   863 ;;		_putsXLCD
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	text3
   868  007C9E                     __ptext3:
   869                           	opt stack 0
   870  007C9E                     _WriteDataXLCD:
   871                           	opt stack 28
   872                           
   873                           ;incstack = 0
   874                           ;WriteDataXLCD@data stored from wreg
   875  007C9E  6E01               	movwf	WriteDataXLCD@data,c
   876                           
   877                           ;writdata.c: 35: TRISB &= 0xf0;
   878  007CA0  0EF0               	movlw	240
   879  007CA2  1693               	andwf	3987,f,c	;volatile
   880                           
   881                           ;writdata.c: 36: PORTB &= 0xf0;
   882  007CA4  0EF0               	movlw	240
   883  007CA6  1681               	andwf	3969,f,c	;volatile
   884                           
   885                           ;writdata.c: 37: PORTB |= ((data>>4)&0x0f);
   886  007CA8  3801               	swapf	WriteDataXLCD@data,w,c
   887  007CAA  0B0F               	andlw	15
   888  007CAC  0B0F               	andlw	15
   889  007CAE  1281               	iorwf	3969,f,c	;volatile
   890                           
   891                           ;writdata.c: 39: LATAbits.LATA3 = 1;
   892  007CB0  8689               	bsf	3977,3,c	;volatile
   893                           
   894                           ;writdata.c: 40: LATAbits.LATA2 = 0;
   895  007CB2  9489               	bcf	3977,2,c	;volatile
   896                           
   897                           ;writdata.c: 41: DelayFor18TCY();
   898  007CB4  ECA9  F03D         	call	_DelayFor18TCY	;wreg free
   899                           
   900                           ;writdata.c: 42: LATAbits.LATA1 = 1;
   901  007CB8  8289               	bsf	3977,1,c	;volatile
   902                           
   903                           ;writdata.c: 43: DelayFor18TCY();
   904  007CBA  ECA9  F03D         	call	_DelayFor18TCY	;wreg free
   905                           
   906                           ;writdata.c: 44: LATAbits.LATA1 = 0;
   907  007CBE  9289               	bcf	3977,1,c	;volatile
   908                           
   909                           ;writdata.c: 49: PORTB &= 0xf0;
   910  007CC0  0EF0               	movlw	240
   911  007CC2  1681               	andwf	3969,f,c	;volatile
   912                           
   913                           ;writdata.c: 50: PORTB |= (data&0x0f);
   914  007CC4  5001               	movf	WriteDataXLCD@data,w,c
   915  007CC6  0B0F               	andlw	15
   916  007CC8  1281               	iorwf	3969,f,c	;volatile
   917                           
   918                           ;writdata.c: 52: DelayFor18TCY();
   919  007CCA  ECA9  F03D         	call	_DelayFor18TCY	;wreg free
   920                           
   921                           ;writdata.c: 53: LATAbits.LATA1 = 1;
   922  007CCE  8289               	bsf	3977,1,c	;volatile
   923                           
   924                           ;writdata.c: 54: DelayFor18TCY();
   925  007CD0  ECA9  F03D         	call	_DelayFor18TCY	;wreg free
   926                           
   927                           ;writdata.c: 55: LATAbits.LATA1 = 0;
   928  007CD4  9289               	bcf	3977,1,c	;volatile
   929                           
   930                           ;writdata.c: 59: TRISB |= 0x0f;
   931  007CD6  0E0F               	movlw	15
   932  007CD8  1293               	iorwf	3987,f,c	;volatile
   933  007CDA  0012               	return	
   934  007CDC                     __end_of_WriteDataXLCD:
   935                           	opt stack 0
   936                           tblptru	equ	0xFF8
   937                           tblptrh	equ	0xFF7
   938                           tblptrl	equ	0xFF6
   939                           tablat	equ	0xFF5
   940                           postinc0	equ	0xFEE
   941                           wreg	equ	0xFE8
   942                           postdec1	equ	0xFE5
   943                           fsr1l	equ	0xFE1
   944                           indf2	equ	0xFDF
   945                           fsr2h	equ	0xFDA
   946                           fsr2l	equ	0xFD9
   947                           status	equ	0xFD8
   948                           
   949 ;; *************** function _init_XLCD *****************
   950 ;; Defined at:
   951 ;;		line 136 in file "main.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;		None
   954 ;; Auto vars:     Size  Location     Type
   955 ;;		None
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		wreg, status,2, status,0, cstack
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   965 ;;      Params:         0       0       0       0       0       0       0
   966 ;;      Locals:         0       0       0       0       0       0       0
   967 ;;      Temps:          0       0       0       0       0       0       0
   968 ;;      Totals:         0       0       0       0       0       0       0
   969 ;;Total ram usage:        0 bytes
   970 ;; Hardware stack levels used:    1
   971 ;; Hardware stack levels required when called:    3
   972 ;; This function calls:
   973 ;;		_BusyXLCD
   974 ;;		_OpenXLCD
   975 ;;		_WriteCmdXLCD
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text4
   982  007B82                     __ptext4:
   983                           	opt stack 0
   984  007B82                     _init_XLCD:
   985                           	opt stack 27
   986                           
   987                           ;main.c: 138: OpenXLCD(0b00101100&0b00111000);
   988                           
   989                           ;incstack = 0
   990  007B82  0E28               	movlw	40
   991  007B84  EC97  F03E         	call	_OpenXLCD
   992  007B88  EC13  F03E         	call	_BusyXLCD	;wreg free
   993  007B8C  0900               	iorlw	0
   994  007B8E  A4D8               	btfss	status,2,c
   995  007B90  D7FB               	goto	l77
   996                           
   997                           ;main.c: 142: WriteCmdXLCD(0x06);
   998  007B92  0E06               	movlw	6
   999  007B94  EC30  F03E         	call	_WriteCmdXLCD
  1000                           
  1001                           ;main.c: 143: WriteCmdXLCD(0x0C);
  1002  007B98  0E0C               	movlw	12
  1003  007B9A  EC30  F03E         	call	_WriteCmdXLCD
  1004  007B9E  0012               	return		;funcret
  1005  007BA0                     __end_of_init_XLCD:
  1006                           	opt stack 0
  1007                           tblptru	equ	0xFF8
  1008                           tblptrh	equ	0xFF7
  1009                           tblptrl	equ	0xFF6
  1010                           tablat	equ	0xFF5
  1011                           postinc0	equ	0xFEE
  1012                           wreg	equ	0xFE8
  1013                           postdec1	equ	0xFE5
  1014                           fsr1l	equ	0xFE1
  1015                           indf2	equ	0xFDF
  1016                           fsr2h	equ	0xFDA
  1017                           fsr2l	equ	0xFD9
  1018                           status	equ	0xFD8
  1019                           
  1020 ;; *************** function _OpenXLCD *****************
  1021 ;; Defined at:
  1022 ;;		line 19 in file "openxlcd.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  lcdtype         1    wreg     unsigned char 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  lcdtype         1    4[COMRAM] unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      void 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, status,0, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1036 ;;      Params:         0       0       0       0       0       0       0
  1037 ;;      Locals:         1       0       0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0
  1039 ;;      Totals:         1       0       0       0       0       0       0
  1040 ;;Total ram usage:        1 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:    2
  1043 ;; This function calls:
  1044 ;;		_BusyXLCD
  1045 ;;		_Delay10KTCYx
  1046 ;;		_DelayPORXLCD
  1047 ;;		_SetDDRamAddr
  1048 ;;		_WriteCmdXLCD
  1049 ;; This function is called by:
  1050 ;;		_init_XLCD
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text5
  1055  007D2E                     __ptext5:
  1056                           	opt stack 0
  1057  007D2E                     _OpenXLCD:
  1058                           	opt stack 27
  1059                           
  1060                           ;incstack = 0
  1061                           ;OpenXLCD@lcdtype stored from wreg
  1062  007D2E  6E05               	movwf	OpenXLCD@lcdtype,c
  1063                           
  1064                           ;openxlcd.c: 31: PORTB &= 0xf0;
  1065  007D30  0EF0               	movlw	240
  1066  007D32  1681               	andwf	3969,f,c	;volatile
  1067                           
  1068                           ;openxlcd.c: 32: TRISB &= 0xF0;
  1069  007D34  0EF0               	movlw	240
  1070  007D36  1693               	andwf	3987,f,c	;volatile
  1071                           
  1072                           ;openxlcd.c: 35: TRISAbits.TRISA2 = 0;
  1073  007D38  9492               	bcf	3986,2,c	;volatile
  1074                           
  1075                           ;openxlcd.c: 36: TRISAbits.TRISA3 = 0;
  1076  007D3A  9692               	bcf	3986,3,c	;volatile
  1077                           
  1078                           ;openxlcd.c: 37: TRISAbits.TRISA1 = 0;
  1079  007D3C  9292               	bcf	3986,1,c	;volatile
  1080                           
  1081                           ;openxlcd.c: 38: LATAbits.LATA2 = 0;
  1082  007D3E  9489               	bcf	3977,2,c	;volatile
  1083                           
  1084                           ;openxlcd.c: 39: LATAbits.LATA3 = 0;
  1085  007D40  9689               	bcf	3977,3,c	;volatile
  1086                           
  1087                           ;openxlcd.c: 40: LATAbits.LATA1 = 0;
  1088  007D42  9289               	bcf	3977,1,c	;volatile
  1089                           
  1090                           ;openxlcd.c: 43: DelayPORXLCD();
  1091  007D44  ECAE  F03D         	call	_DelayPORXLCD	;wreg free
  1092                           
  1093                           ;openxlcd.c: 45: WriteCmdXLCD(0x30);
  1094  007D48  0E30               	movlw	48
  1095  007D4A  EC30  F03E         	call	_WriteCmdXLCD
  1096                           
  1097                           ;openxlcd.c: 46: Delay10KTCYx(0x05);
  1098  007D4E  0E05               	movlw	5
  1099  007D50  ECB6  F03D         	call	_Delay10KTCYx
  1100                           
  1101                           ;openxlcd.c: 48: WriteCmdXLCD(0x30);
  1102  007D54  0E30               	movlw	48
  1103  007D56  EC30  F03E         	call	_WriteCmdXLCD
  1104                           
  1105                           ;openxlcd.c: 49: Delay10KTCYx(0x01);
  1106  007D5A  0E01               	movlw	1
  1107  007D5C  ECB6  F03D         	call	_Delay10KTCYx
  1108                           
  1109                           ;openxlcd.c: 52: WriteCmdXLCD(0x32);
  1110  007D60  0E32               	movlw	50
  1111  007D62  EC30  F03E         	call	_WriteCmdXLCD
  1112  007D66  EC13  F03E         	call	_BusyXLCD	;wreg free
  1113  007D6A  0900               	iorlw	0
  1114  007D6C  A4D8               	btfss	status,2,c
  1115  007D6E  D7FB               	goto	l112
  1116  007D70                     u30:
  1117                           
  1118                           ;openxlcd.c: 58: while(BusyXLCD());
  1119  007D70  EC13  F03E         	call	_BusyXLCD	;wreg free
  1120  007D74  0900               	iorlw	0
  1121  007D76  A4D8               	btfss	status,2,c
  1122  007D78  D7FB               	goto	u30
  1123                           
  1124                           ;openxlcd.c: 59: WriteCmdXLCD(lcdtype);
  1125  007D7A  5005               	movf	OpenXLCD@lcdtype,w,c
  1126  007D7C  EC30  F03E         	call	_WriteCmdXLCD
  1127  007D80  EC13  F03E         	call	_BusyXLCD	;wreg free
  1128  007D84  0900               	iorlw	0
  1129  007D86  A4D8               	btfss	status,2,c
  1130  007D88  D7FB               	goto	l118
  1131                           
  1132                           ;openxlcd.c: 63: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  1133  007D8A  0E08               	movlw	8
  1134  007D8C  EC30  F03E         	call	_WriteCmdXLCD
  1135  007D90  EC13  F03E         	call	_BusyXLCD	;wreg free
  1136  007D94  0900               	iorlw	0
  1137  007D96  A4D8               	btfss	status,2,c
  1138  007D98  D7FB               	goto	l121
  1139                           
  1140                           ;openxlcd.c: 65: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  1141  007D9A  0E0F               	movlw	15
  1142  007D9C  EC30  F03E         	call	_WriteCmdXLCD
  1143  007DA0  EC13  F03E         	call	_BusyXLCD	;wreg free
  1144  007DA4  0900               	iorlw	0
  1145  007DA6  A4D8               	btfss	status,2,c
  1146  007DA8  D7FB               	goto	l124
  1147                           
  1148                           ;openxlcd.c: 69: WriteCmdXLCD(0x01);
  1149  007DAA  0E01               	movlw	1
  1150  007DAC  EC30  F03E         	call	_WriteCmdXLCD
  1151  007DB0  EC13  F03E         	call	_BusyXLCD	;wreg free
  1152  007DB4  0900               	iorlw	0
  1153  007DB6  A4D8               	btfss	status,2,c
  1154  007DB8  D7FB               	goto	l127
  1155                           
  1156                           ;openxlcd.c: 73: WriteCmdXLCD(0b00000100);
  1157  007DBA  0E04               	movlw	4
  1158  007DBC  EC30  F03E         	call	_WriteCmdXLCD
  1159  007DC0  EC13  F03E         	call	_BusyXLCD	;wreg free
  1160  007DC4  0900               	iorlw	0
  1161  007DC6  A4D8               	btfss	status,2,c
  1162  007DC8  D7FB               	goto	l130
  1163                           
  1164                           ;openxlcd.c: 77: SetDDRamAddr(0x80);
  1165  007DCA  0E80               	movlw	128
  1166  007DCC  EC6E  F03E         	call	_SetDDRamAddr
  1167  007DD0  0012               	return	
  1168  007DD2                     __end_of_OpenXLCD:
  1169                           	opt stack 0
  1170                           tblptru	equ	0xFF8
  1171                           tblptrh	equ	0xFF7
  1172                           tblptrl	equ	0xFF6
  1173                           tablat	equ	0xFF5
  1174                           postinc0	equ	0xFEE
  1175                           wreg	equ	0xFE8
  1176                           postdec1	equ	0xFE5
  1177                           fsr1l	equ	0xFE1
  1178                           indf2	equ	0xFDF
  1179                           fsr2h	equ	0xFDA
  1180                           fsr2l	equ	0xFD9
  1181                           status	equ	0xFD8
  1182                           
  1183 ;; *************** function _WriteCmdXLCD *****************
  1184 ;; Defined at:
  1185 ;;		line 13 in file "wcmdxlcd.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  cmd             1    wreg     unsigned char 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  cmd             1    0[COMRAM] unsigned char 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, status,2, status,0, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1199 ;;      Params:         0       0       0       0       0       0       0
  1200 ;;      Locals:         1       0       0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0
  1202 ;;      Totals:         1       0       0       0       0       0       0
  1203 ;;Total ram usage:        1 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    1
  1206 ;; This function calls:
  1207 ;;		_DelayFor18TCY
  1208 ;; This function is called by:
  1209 ;;		_init_XLCD
  1210 ;;		_OpenXLCD
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text6
  1215  007C60                     __ptext6:
  1216                           	opt stack 0
  1217  007C60                     _WriteCmdXLCD:
  1218                           	opt stack 28
  1219                           
  1220                           ;incstack = 0
  1221                           ;WriteCmdXLCD@cmd stored from wreg
  1222  007C60  6E01               	movwf	WriteCmdXLCD@cmd,c
  1223                           
  1224                           ;wcmdxlcd.c: 32: TRISB &= 0xf0;
  1225  007C62  0EF0               	movlw	240
  1226  007C64  1693               	andwf	3987,f,c	;volatile
  1227                           
  1228                           ;wcmdxlcd.c: 33: PORTB &= 0xf0;
  1229  007C66  0EF0               	movlw	240
  1230  007C68  1681               	andwf	3969,f,c	;volatile
  1231                           
  1232                           ;wcmdxlcd.c: 34: PORTB |= (cmd>>4)&0x0f;
  1233  007C6A  3801               	swapf	WriteCmdXLCD@cmd,w,c
  1234  007C6C  0B0F               	andlw	15
  1235  007C6E  0B0F               	andlw	15
  1236  007C70  1281               	iorwf	3969,f,c	;volatile
  1237                           
  1238                           ;wcmdxlcd.c: 36: LATAbits.LATA2 = 0;
  1239  007C72  9489               	bcf	3977,2,c	;volatile
  1240                           
  1241                           ;wcmdxlcd.c: 37: LATAbits.LATA3 = 0;
  1242  007C74  9689               	bcf	3977,3,c	;volatile
  1243                           
  1244                           ;wcmdxlcd.c: 38: DelayFor18TCY();
  1245  007C76  ECA9  F03D         	call	_DelayFor18TCY	;wreg free
  1246                           
  1247                           ;wcmdxlcd.c: 39: LATAbits.LATA1 = 1;
  1248  007C7A  8289               	bsf	3977,1,c	;volatile
  1249                           
  1250                           ;wcmdxlcd.c: 40: DelayFor18TCY();
  1251  007C7C  ECA9  F03D         	call	_DelayFor18TCY	;wreg free
  1252                           
  1253                           ;wcmdxlcd.c: 41: LATAbits.LATA1 = 0;
  1254  007C80  9289               	bcf	3977,1,c	;volatile
  1255                           
  1256                           ;wcmdxlcd.c: 46: PORTB &= 0xf0;
  1257  007C82  0EF0               	movlw	240
  1258  007C84  1681               	andwf	3969,f,c	;volatile
  1259                           
  1260                           ;wcmdxlcd.c: 47: PORTB |= cmd&0x0f;
  1261  007C86  5001               	movf	WriteCmdXLCD@cmd,w,c
  1262  007C88  0B0F               	andlw	15
  1263  007C8A  1281               	iorwf	3969,f,c	;volatile
  1264                           
  1265                           ;wcmdxlcd.c: 49: DelayFor18TCY();
  1266  007C8C  ECA9  F03D         	call	_DelayFor18TCY	;wreg free
  1267                           
  1268                           ;wcmdxlcd.c: 50: LATAbits.LATA1 = 1;
  1269  007C90  8289               	bsf	3977,1,c	;volatile
  1270                           
  1271                           ;wcmdxlcd.c: 51: DelayFor18TCY();
  1272  007C92  ECA9  F03D         	call	_DelayFor18TCY	;wreg free
  1273                           
  1274                           ;wcmdxlcd.c: 52: LATAbits.LATA1 = 0;
  1275  007C96  9289               	bcf	3977,1,c	;volatile
  1276                           
  1277                           ;wcmdxlcd.c: 56: TRISB |= 0x0f;
  1278  007C98  0E0F               	movlw	15
  1279  007C9A  1293               	iorwf	3987,f,c	;volatile
  1280  007C9C  0012               	return	
  1281  007C9E                     __end_of_WriteCmdXLCD:
  1282                           	opt stack 0
  1283                           tblptru	equ	0xFF8
  1284                           tblptrh	equ	0xFF7
  1285                           tblptrl	equ	0xFF6
  1286                           tablat	equ	0xFF5
  1287                           postinc0	equ	0xFEE
  1288                           wreg	equ	0xFE8
  1289                           postdec1	equ	0xFE5
  1290                           fsr1l	equ	0xFE1
  1291                           indf2	equ	0xFDF
  1292                           fsr2h	equ	0xFDA
  1293                           fsr2l	equ	0xFD9
  1294                           status	equ	0xFD8
  1295                           
  1296 ;; *************** function _SetDDRamAddr *****************
  1297 ;; Defined at:
  1298 ;;		line 13 in file "setddram.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  DDaddr          1    wreg     unsigned char 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  DDaddr          1    3[COMRAM] unsigned char 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1312 ;;      Params:         0       0       0       0       0       0       0
  1313 ;;      Locals:         1       0       0       0       0       0       0
  1314 ;;      Temps:          3       0       0       0       0       0       0
  1315 ;;      Totals:         4       0       0       0       0       0       0
  1316 ;;Total ram usage:        4 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    1
  1319 ;; This function calls:
  1320 ;;		_DelayFor18TCY
  1321 ;; This function is called by:
  1322 ;;		_OpenXLCD
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text7
  1327  007CDC                     __ptext7:
  1328                           	opt stack 0
  1329  007CDC                     _SetDDRamAddr:
  1330                           	opt stack 27
  1331                           
  1332                           ;incstack = 0
  1333                           ;SetDDRamAddr@DDaddr stored from wreg
  1334  007CDC  6E04               	movwf	SetDDRamAddr@DDaddr,c
  1335                           
  1336                           ;setddram.c: 32: TRISB &= 0xf0;
  1337  007CDE  0EF0               	movlw	240
  1338  007CE0  1693               	andwf	3987,f,c	;volatile
  1339                           
  1340                           ;setddram.c: 33: PORTB &= 0xf0;
  1341  007CE2  0EF0               	movlw	240
  1342  007CE4  1681               	andwf	3969,f,c	;volatile
  1343                           
  1344                           ;setddram.c: 34: PORTB |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  1345  007CE6  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1346  007CE8  6E01               	movwf	??_SetDDRamAddr& (0+255),c
  1347  007CEA  6A02               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  1348  007CEC  8E01               	bsf	??_SetDDRamAddr,7,c
  1349  007CEE  0E04               	movlw	4
  1350  007CF0  6E03               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  1351  007CF2                     u25:
  1352  007CF2  3402               	rlcf	??_SetDDRamAddr+1,w,c
  1353  007CF4  3202               	rrcf	??_SetDDRamAddr+1,f,c
  1354  007CF6  3201               	rrcf	??_SetDDRamAddr,f,c
  1355  007CF8  2E03               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  1356  007CFA  D7FB               	goto	u25
  1357  007CFC  5001               	movf	??_SetDDRamAddr,w,c
  1358  007CFE  0B0F               	andlw	15
  1359  007D00  1281               	iorwf	3969,f,c	;volatile
  1360                           
  1361                           ;setddram.c: 36: LATAbits.LATA2 = 0;
  1362  007D02  9489               	bcf	3977,2,c	;volatile
  1363                           
  1364                           ;setddram.c: 37: LATAbits.LATA3 = 0;
  1365  007D04  9689               	bcf	3977,3,c	;volatile
  1366                           
  1367                           ;setddram.c: 38: DelayFor18TCY();
  1368  007D06  ECA9  F03D         	call	_DelayFor18TCY	;wreg free
  1369                           
  1370                           ;setddram.c: 39: LATAbits.LATA1 = 1;
  1371  007D0A  8289               	bsf	3977,1,c	;volatile
  1372                           
  1373                           ;setddram.c: 40: DelayFor18TCY();
  1374  007D0C  ECA9  F03D         	call	_DelayFor18TCY	;wreg free
  1375                           
  1376                           ;setddram.c: 41: LATAbits.LATA1 = 0;
  1377  007D10  9289               	bcf	3977,1,c	;volatile
  1378                           
  1379                           ;setddram.c: 46: PORTB &= 0xf0;
  1380  007D12  0EF0               	movlw	240
  1381  007D14  1681               	andwf	3969,f,c	;volatile
  1382                           
  1383                           ;setddram.c: 47: PORTB |= (DDaddr&0x0f);
  1384  007D16  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1385  007D18  0B0F               	andlw	15
  1386  007D1A  1281               	iorwf	3969,f,c	;volatile
  1387                           
  1388                           ;setddram.c: 49: DelayFor18TCY();
  1389  007D1C  ECA9  F03D         	call	_DelayFor18TCY	;wreg free
  1390                           
  1391                           ;setddram.c: 50: LATAbits.LATA1 = 1;
  1392  007D20  8289               	bsf	3977,1,c	;volatile
  1393                           
  1394                           ;setddram.c: 51: DelayFor18TCY();
  1395  007D22  ECA9  F03D         	call	_DelayFor18TCY	;wreg free
  1396                           
  1397                           ;setddram.c: 52: LATAbits.LATA1 = 0;
  1398  007D26  9289               	bcf	3977,1,c	;volatile
  1399                           
  1400                           ;setddram.c: 56: TRISB |= 0x0f;
  1401  007D28  0E0F               	movlw	15
  1402  007D2A  1293               	iorwf	3987,f,c	;volatile
  1403  007D2C  0012               	return	
  1404  007D2E                     __end_of_SetDDRamAddr:
  1405                           	opt stack 0
  1406                           tblptru	equ	0xFF8
  1407                           tblptrh	equ	0xFF7
  1408                           tblptrl	equ	0xFF6
  1409                           tablat	equ	0xFF5
  1410                           postinc0	equ	0xFEE
  1411                           wreg	equ	0xFE8
  1412                           postdec1	equ	0xFE5
  1413                           fsr1l	equ	0xFE1
  1414                           indf2	equ	0xFDF
  1415                           fsr2h	equ	0xFDA
  1416                           fsr2l	equ	0xFD9
  1417                           status	equ	0xFD8
  1418                           
  1419 ;; *************** function _DelayPORXLCD *****************
  1420 ;; Defined at:
  1421 ;;		line 123 in file "main.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1435 ;;      Params:         0       0       0       0       0       0       0
  1436 ;;      Locals:         0       0       0       0       0       0       0
  1437 ;;      Temps:          1       0       0       0       0       0       0
  1438 ;;      Totals:         1       0       0       0       0       0       0
  1439 ;;Total ram usage:        1 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_OpenXLCD
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text8
  1449  007B5C                     __ptext8:
  1450                           	opt stack 0
  1451  007B5C                     _DelayPORXLCD:
  1452                           	opt stack 28
  1453                           
  1454                           ;main.c: 125: _delay((unsigned long)((15)*(4000000/4000.0)));
  1455                           
  1456                           ;incstack = 0
  1457  007B5C  0E14               	movlw	20
  1458  007B5E  6E01               	movwf	??_DelayPORXLCD& (0+255),c
  1459  007B60  0E7A               	movlw	122
  1460  007B62                     u537:
  1461  007B62  2EE8               	decfsz	wreg,f,c
  1462  007B64  D7FE               	bra	u537
  1463  007B66  2E01               	decfsz	??_DelayPORXLCD& (0+255),f,c
  1464  007B68  D7FC               	bra	u537
  1465  007B6A  0012               	return		;funcret
  1466  007B6C                     __end_of_DelayPORXLCD:
  1467                           	opt stack 0
  1468                           tblptru	equ	0xFF8
  1469                           tblptrh	equ	0xFF7
  1470                           tblptrl	equ	0xFF6
  1471                           tablat	equ	0xFF5
  1472                           postinc0	equ	0xFEE
  1473                           wreg	equ	0xFE8
  1474                           postdec1	equ	0xFE5
  1475                           fsr1l	equ	0xFE1
  1476                           indf2	equ	0xFDF
  1477                           fsr2h	equ	0xFDA
  1478                           fsr2l	equ	0xFD9
  1479                           status	equ	0xFD8
  1480                           
  1481 ;; *************** function _Delay10KTCYx *****************
  1482 ;; Defined at:
  1483 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\pic18\d10ktcyx.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;  unit            1    wreg     unsigned char 
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  unit            1    1[COMRAM] unsigned char 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1497 ;;      Params:         0       0       0       0       0       0       0
  1498 ;;      Locals:         1       0       0       0       0       0       0
  1499 ;;      Temps:          1       0       0       0       0       0       0
  1500 ;;      Totals:         2       0       0       0       0       0       0
  1501 ;;Total ram usage:        2 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_OpenXLCD
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text9
  1511  007B6C                     __ptext9:
  1512                           	opt stack 0
  1513  007B6C                     _Delay10KTCYx:
  1514                           	opt stack 28
  1515                           
  1516                           ;incstack = 0
  1517                           ;Delay10KTCYx@unit stored from wreg
  1518  007B6C  6E02               	movwf	Delay10KTCYx@unit,c
  1519  007B6E                     l422:
  1520  007B6E  0E0D               	movlw	13
  1521  007B70  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  1522  007B72  0EFC               	movlw	252
  1523  007B74                     u547:
  1524  007B74  2EE8               	decfsz	wreg,f,c
  1525  007B76  D7FE               	bra	u547
  1526  007B78  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1527  007B7A  D7FC               	bra	u547
  1528  007B7C  2E02               	decfsz	Delay10KTCYx@unit,f,c
  1529  007B7E  D7F7               	goto	l422
  1530  007B80  0012               	return	
  1531  007B82                     __end_of_Delay10KTCYx:
  1532                           	opt stack 0
  1533                           tblptru	equ	0xFF8
  1534                           tblptrh	equ	0xFF7
  1535                           tblptrl	equ	0xFF6
  1536                           tablat	equ	0xFF5
  1537                           postinc0	equ	0xFEE
  1538                           wreg	equ	0xFE8
  1539                           postdec1	equ	0xFE5
  1540                           fsr1l	equ	0xFE1
  1541                           indf2	equ	0xFDF
  1542                           fsr2h	equ	0xFDA
  1543                           fsr2l	equ	0xFD9
  1544                           status	equ	0xFD8
  1545                           
  1546 ;; *************** function _BusyXLCD *****************
  1547 ;; Defined at:
  1548 ;;		line 11 in file "busyxlcd.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;		None
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      unsigned char 
  1555 ;; Registers used:
  1556 ;;		wreg, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1562 ;;      Params:         0       0       0       0       0       0       0
  1563 ;;      Locals:         0       0       0       0       0       0       0
  1564 ;;      Temps:          0       0       0       0       0       0       0
  1565 ;;      Totals:         0       0       0       0       0       0       0
  1566 ;;Total ram usage:        0 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    1
  1569 ;; This function calls:
  1570 ;;		_DelayFor18TCY
  1571 ;; This function is called by:
  1572 ;;		_init_XLCD
  1573 ;;		_OpenXLCD
  1574 ;;		_putrsXLCD
  1575 ;;		_putsXLCD
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           	psect	text10
  1580  007C26                     __ptext10:
  1581                           	opt stack 0
  1582  007C26                     _BusyXLCD:
  1583                           	opt stack 28
  1584                           
  1585                           ;busyxlcd.c: 13: LATAbits.LATA2 = 1;
  1586                           
  1587                           ;incstack = 0
  1588  007C26  8489               	bsf	3977,2,c	;volatile
  1589                           
  1590                           ;busyxlcd.c: 14: LATAbits.LATA3 = 0;
  1591  007C28  9689               	bcf	3977,3,c	;volatile
  1592                           
  1593                           ;busyxlcd.c: 15: DelayFor18TCY();
  1594  007C2A  ECA9  F03D         	call	_DelayFor18TCY	;wreg free
  1595                           
  1596                           ;busyxlcd.c: 16: LATAbits.LATA1 = 1;
  1597  007C2E  8289               	bsf	3977,1,c	;volatile
  1598                           
  1599                           ;busyxlcd.c: 17: DelayFor18TCY();
  1600  007C30  ECA9  F03D         	call	_DelayFor18TCY	;wreg free
  1601                           
  1602                           ;busyxlcd.c: 35: if(PORTB&0x08)
  1603  007C34  A681               	btfss	3969,3,c	;volatile
  1604  007C36  D00A               	goto	l88
  1605                           
  1606                           ;busyxlcd.c: 37: {
  1607                           ;busyxlcd.c: 38: LATAbits.LATA1 = 0;
  1608  007C38  9289               	bcf	3977,1,c	;volatile
  1609                           
  1610                           ;busyxlcd.c: 39: DelayFor18TCY();
  1611  007C3A  ECA9  F03D         	call	_DelayFor18TCY	;wreg free
  1612                           
  1613                           ;busyxlcd.c: 40: LATAbits.LATA1 = 1;
  1614  007C3E  8289               	bsf	3977,1,c	;volatile
  1615                           
  1616                           ;busyxlcd.c: 41: DelayFor18TCY();
  1617  007C40  ECA9  F03D         	call	_DelayFor18TCY	;wreg free
  1618                           
  1619                           ;busyxlcd.c: 42: LATAbits.LATA1 = 0;
  1620  007C44  9289               	bcf	3977,1,c	;volatile
  1621                           
  1622                           ;busyxlcd.c: 43: LATAbits.LATA2 = 0;
  1623  007C46  9489               	bcf	3977,2,c	;volatile
  1624                           
  1625                           ;busyxlcd.c: 44: return 1;
  1626  007C48  0E01               	movlw	1
  1627                           
  1628                           ;busyxlcd.c: 45: }
  1629  007C4A  0012               	return	
  1630  007C4C                     l88:
  1631                           
  1632                           ;busyxlcd.c: 46: else
  1633                           ;busyxlcd.c: 47: {
  1634                           ;busyxlcd.c: 48: LATAbits.LATA1 = 0;
  1635  007C4C  9289               	bcf	3977,1,c	;volatile
  1636                           
  1637                           ;busyxlcd.c: 49: DelayFor18TCY();
  1638  007C4E  ECA9  F03D         	call	_DelayFor18TCY	;wreg free
  1639                           
  1640                           ;busyxlcd.c: 50: LATAbits.LATA1 = 1;
  1641  007C52  8289               	bsf	3977,1,c	;volatile
  1642                           
  1643                           ;busyxlcd.c: 51: DelayFor18TCY();
  1644  007C54  ECA9  F03D         	call	_DelayFor18TCY	;wreg free
  1645                           
  1646                           ;busyxlcd.c: 52: LATAbits.LATA1 = 0;
  1647  007C58  9289               	bcf	3977,1,c	;volatile
  1648                           
  1649                           ;busyxlcd.c: 53: LATAbits.LATA2 = 0;
  1650  007C5A  9489               	bcf	3977,2,c	;volatile
  1651                           
  1652                           ;busyxlcd.c: 54: return 0;
  1653  007C5C  0E00               	movlw	0
  1654  007C5E  0012               	return	
  1655  007C60                     __end_of_BusyXLCD:
  1656                           	opt stack 0
  1657                           tblptru	equ	0xFF8
  1658                           tblptrh	equ	0xFF7
  1659                           tblptrl	equ	0xFF6
  1660                           tablat	equ	0xFF5
  1661                           postinc0	equ	0xFEE
  1662                           wreg	equ	0xFE8
  1663                           postdec1	equ	0xFE5
  1664                           fsr1l	equ	0xFE1
  1665                           indf2	equ	0xFDF
  1666                           fsr2h	equ	0xFDA
  1667                           fsr2l	equ	0xFD9
  1668                           status	equ	0xFD8
  1669                           
  1670 ;; *************** function _DelayFor18TCY *****************
  1671 ;; Defined at:
  1672 ;;		line 118 in file "main.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;		None
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		wreg
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1686 ;;      Params:         0       0       0       0       0       0       0
  1687 ;;      Locals:         0       0       0       0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0       0       0
  1689 ;;      Totals:         0       0       0       0       0       0       0
  1690 ;;Total ram usage:        0 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_BusyXLCD
  1696 ;;		_SetDDRamAddr
  1697 ;;		_WriteCmdXLCD
  1698 ;;		_WriteDataXLCD
  1699 ;;		_ReadAddrXLCD
  1700 ;;		_ReadDataXLCD
  1701 ;;		_SetCGRamAddr
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text11
  1706  007B52                     __ptext11:
  1707                           	opt stack 0
  1708  007B52                     _DelayFor18TCY:
  1709                           	opt stack 28
  1710                           
  1711                           ;incstack = 0
  1712  007B52  0E06               	movlw	6
  1713  007B54                     u557:
  1714  007B54  2EE8               	decfsz	wreg,f,c
  1715  007B56  D7FE               	bra	u557
  1716  007B58  D000               	nop2	
  1717  007B5A  0012               	return	
  1718  007B5C                     __end_of_DelayFor18TCY:
  1719                           	opt stack 0
  1720  0000                     tblptru	equ	0xFF8
  1721                           tblptrh	equ	0xFF7
  1722                           tblptrl	equ	0xFF6
  1723                           tablat	equ	0xFF5
  1724                           postinc0	equ	0xFEE
  1725                           wreg	equ	0xFE8
  1726                           postdec1	equ	0xFE5
  1727                           fsr1l	equ	0xFE1
  1728                           indf2	equ	0xFDF
  1729                           fsr2h	equ	0xFDA
  1730                           fsr2l	equ	0xFD9
  1731                           status	equ	0xFD8
  1732                           tblptru	equ	0xFF8
  1733                           tblptrh	equ	0xFF7
  1734                           tblptrl	equ	0xFF6
  1735                           tablat	equ	0xFF5
  1736                           postinc0	equ	0xFEE
  1737                           wreg	equ	0xFE8
  1738                           postdec1	equ	0xFE5
  1739                           fsr1l	equ	0xFE1
  1740                           indf2	equ	0xFDF
  1741                           fsr2h	equ	0xFDA
  1742                           fsr2l	equ	0xFD9
  1743                           status	equ	0xFD8
  1744                           
  1745                           	psect	rparam
  1746  0000                     tblptru	equ	0xFF8
  1747                           tblptrh	equ	0xFF7
  1748                           tblptrl	equ	0xFF6
  1749                           tablat	equ	0xFF5
  1750                           postinc0	equ	0xFEE
  1751                           wreg	equ	0xFE8
  1752                           postdec1	equ	0xFE5
  1753                           fsr1l	equ	0xFE1
  1754                           indf2	equ	0xFDF
  1755                           fsr2h	equ	0xFDA
  1756                           fsr2l	equ	0xFD9
  1757                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     15      25
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 2
		 -> order(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _putrsXLCD->_WriteDataXLCD
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     650
                                              5 COMRAM    10    10      0
                          _init_XLCD
                          _putrsXLCD
                              _reset
 ---------------------------------------------------------------------------------
 (1) _reset                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            2     0      2     303
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     120
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0      90
                                              4 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      30
                                              0 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _Delay10KTCYx
       _DelayPORXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _putrsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _reset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      F      19       1       19.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      15        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Nov 10 09:12:16 2017

                     l40 7E3C                       l50 7F2A                       l42 7E6C  
                     l51 7F68                       l52 7F3E                       l44 7E94  
                     l45 7ED2                       l54 7F98                       l46 7EA8  
                     l39 7E04                       l56 7FC0                       l48 7F02  
                     l58 7FD4                       l77 7B88                       l88 7C4C  
                     u30 7D70                       u25 7CF2              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_OSC$XT 000000              __CFG_LVP$ON 000000  
                    l112 7D66                      l121 7D90                      l130 7DC0  
                    l124 7DA0                      l140 7BCC                      l118 7D80  
                    l127 7DB0                      l139 7BE8                      l422 7B6E  
           __CFG_CPB$OFF 000000                      u440 7F3A             __CFG_CPD$OFF 000000  
                    u507 7EC6                      u517 7F5C                      u390 7EA4  
                    u527 7FF2                      u537 7B62                      u490 7FD0  
                    u547 7B74                      u557 7B54    __size_of_WriteCmdXLCD 003E  
                    wreg 000FE8             __CFG_WDT$OFF 000000                     l1273 7E3C  
                   _LATA 000F89                     _LATB 000F8A             __CFG_PWRT$ON 000000  
                   _main 7DD2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9   __size_of_WriteDataXLCD 003E  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000             _WriteCmdXLCD 7C60            ?_SetDDRamAddr 0001  
                  ?_main 0001                    _PORTB 000F81                    _TRISB 000F93  
                  _TRISD 000F95    __size_of_Delay10KTCYx 0016            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _order 0018                    _reset 7BA0           __CFG_BOREN$OFF 000000  
                  tablat 000FF5                    status 000FD8          __initialization 7BF8  
           __end_of_main 8000         __end_of_BusyXLCD 7C60             _Delay10KTCYx 7B6C  
  __size_of_DelayPORXLCD 0010           ??_SetDDRamAddr 0001         __end_of_OpenXLCD 7DD2  
                 ??_main 0006            __activetblptr 000000            _WriteDataXLCD 7C9E  
                 ?_reset 0001             _DelayPORXLCD 7B5C           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000           ?_WriteDataXLCD 0001             __pdataCOMRAM 0010  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0080  __end_of__initialization 7C20          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001            __end_of_reset 7BCA  
                ??_reset 0001   __size_of_DelayFor18TCY 000A                ?_BusyXLCD 0001  
        WriteCmdXLCD@cmd 0001     __end_of_SetDDRamAddr 7D2E       __size_of_init_XLCD 001E  
              ?_OpenXLCD 0001        WriteDataXLCD@data 0001          ??_WriteDataXLCD 0001  
     __size_of_putrsXLCD 002E               ??_BusyXLCD 0001               ??_OpenXLCD 0005  
                __Hparam 0000                  __Lparam 0000            _DelayFor18TCY 7B52  
                __pcinit 7BF8          putrsXLCD@buffer 0002                  __ramtop 0600  
                __ptext0 7DD2                  __ptext1 7BA0                  __ptext2 7BCA  
                __ptext3 7C9E                  __ptext4 7B82                  __ptext5 7D2E  
                __ptext6 7C60                  __ptext7 7CDC                  __ptext8 7B5C  
                __ptext9 7B6C        __end_of_init_XLCD 7BA0     end_of_initialization 7C20  
         ?_DelayFor18TCY 0001                  postdec1 000FE5                  postinc0 000FEE  
      __end_of_putrsXLCD 7BF8                _PORTDbits 000F83                _TRISAbits 000F92  
              _TRISDbits 000F95    __size_of_SetDDRamAddr 0052            __pidataCOMRAM 7B4C  
           _SetDDRamAddr 7CDC       SetDDRamAddr@DDaddr 0004      start_initialization 7BF8  
      __size_of_BusyXLCD 003A          ??_DelayFor18TCY 0001        __size_of_OpenXLCD 00A4  
          ?_WriteCmdXLCD 0001         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0016  
      __CFG_CCP2MX$PORTC 000000           ??_WriteCmdXLCD 0001            ?_Delay10KTCYx 0001  
  __end_of_WriteDataXLCD 7CDC                _init_XLCD 7B82           __size_of_reset 002A  
               _LATAbits 000F89            ?_DelayPORXLCD 0001          OpenXLCD@lcdtype 0005  
       __CFG_WDTPS$32768 000000           ??_Delay10KTCYx 0001                _putrsXLCD 7BCA  
              main@count 000C         Delay10KTCYx@unit 0002               ?_init_XLCD 0001  
              copy_data0 7C0C                 _BusyXLCD 7C26           ??_DelayPORXLCD 0001  
               _OpenXLCD 7D2E                 __Hrparam 0000                 __Lrparam 0000  
             ?_putrsXLCD 0002                 _rd0start 0014                 _rd1start 0012  
               _rd2start 0010                 __ptext10 7C26                 __ptext11 7B52  
   __end_of_WriteCmdXLCD 7C9E                 _duration 0016            __size_of_main 022E  
        main@tempcounter 0008              ??_init_XLCD 0006     __end_of_Delay10KTCYx 7B82  
  __end_of_DelayFor18TCY 7B5C     __end_of_DelayPORXLCD 7B6C              ??_putrsXLCD 0004  
