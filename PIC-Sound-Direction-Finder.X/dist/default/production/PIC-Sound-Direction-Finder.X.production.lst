

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Oct 27 15:14:55 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24  0000                     
    25                           ; Version 1.44
    26                           ; Generated 14/09/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4520 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	smallconst
    61  000600                     __psmallconst:
    62                           	opt stack 0
    63  000600  00                 	db	0
    64  000601                     _dpowers:
    65                           	opt stack 0
    66  000601  0001               	dw	1
    67  000603  000A               	dw	10
    68  000605  0064               	dw	100
    69  000607  03E8               	dw	1000
    70  000609  2710               	dw	10000
    71  00060B                     __end_of_dpowers:
    72                           	opt stack 0
    73  0000                     _ADRESL	set	4035
    74  0000                     _ADRESH	set	4036
    75  0000                     _INTCONbits	set	4082
    76  0000                     _PIR1bits	set	3998
    77  0000                     _ADCON1	set	4033
    78  0000                     _ADCON2	set	4032
    79  0000                     _ADCON0	set	4034
    80  0000                     _PIE1bits	set	3997
    81  0000                     _ADCON0bits	set	4034
    82  0000                     _TRISAbits	set	3986
    83  0000                     _TRISB	set	3987
    84  0000                     _PORTB	set	3969
    85  0000                     _LATAbits	set	3977
    86  0000                     _PORTBbits	set	3969
    87  0000                     _TRISBbits	set	3987
    88  0000                     _TRISD	set	3989
    89  0000                     _LATB	set	3978
    90  0000                     _LATA	set	3977
    91  00060B                     STR_1:
    92  00060B  25                 	db	37
    93  00060C  64                 	db	100	;'d'
    94  00060D  00                 	db	0
    95                           
    96                           ; #config settings
    97  00060E  00                 	db	0	; dummy byte at the end
    98  0000                     
    99                           	psect	cinit
   100  000AB0                     __pcinit:
   101                           	opt stack 0
   102  000AB0                     start_initialization:
   103                           	opt stack 0
   104  000AB0                     __initialization:
   105                           	opt stack 0
   106  000AB0                     end_of_initialization:
   107                           	opt stack 0
   108  000AB0                     __end_of__initialization:
   109                           	opt stack 0
   110  000AB0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   111  000AB2  6EF8               	movwf	tblptru,c
   112  000AB4  0100               	movlb	0
   113  000AB6  EFAC  F003         	goto	_main	;jump to C main() function
   114                           tblptru	equ	0xFF8
   115                           
   116                           	psect	cstackCOMRAM
   117  000001                     __pcstackCOMRAM:
   118                           	opt stack 0
   119  000001                     ??_Delay10KTCYx:
   120  000001                     ??_SetDDRamAddr:
   121  000001                     ??_DelayPORXLCD:
   122  000001                     ?___lwdiv:
   123                           	opt stack 0
   124  000001                     WriteCmdXLCD@cmd:
   125                           	opt stack 0
   126  000001                     WriteDataXLCD@data:
   127                           	opt stack 0
   128  000001                     ___lwdiv@dividend:
   129                           	opt stack 0
   130                           
   131                           ; 2 bytes @ 0x0
   132  000001                     	ds	1
   133  000002                     Delay10KTCYx@unit:
   134                           	opt stack 0
   135  000002                     putrsXLCD@buffer:
   136                           	opt stack 0
   137                           
   138                           ; 2 bytes @ 0x1
   139  000002                     	ds	1
   140  000003                     ___lwdiv@divisor:
   141                           	opt stack 0
   142                           
   143                           ; 2 bytes @ 0x2
   144  000003                     	ds	1
   145  000004                     SetDDRamAddr@DDaddr:
   146                           	opt stack 0
   147                           
   148                           ; 1 bytes @ 0x3
   149  000004                     	ds	1
   150  000005                     OpenXLCD@lcdtype:
   151                           	opt stack 0
   152  000005                     ___lwdiv@quotient:
   153                           	opt stack 0
   154                           
   155                           ; 2 bytes @ 0x4
   156  000005                     	ds	1
   157  000006                     
   158                           ; 1 bytes @ 0x5
   159  000006                     	ds	1
   160  000007                     ___lwdiv@counter:
   161                           	opt stack 0
   162                           
   163                           ; 1 bytes @ 0x6
   164  000007                     	ds	1
   165  000008                     ?___lwmod:
   166                           	opt stack 0
   167  000008                     ___lwmod@dividend:
   168                           	opt stack 0
   169                           
   170                           ; 2 bytes @ 0x7
   171  000008                     	ds	2
   172  00000A                     ___lwmod@divisor:
   173                           	opt stack 0
   174                           
   175                           ; 2 bytes @ 0x9
   176  00000A                     	ds	2
   177  00000C                     ___lwmod@counter:
   178                           	opt stack 0
   179                           
   180                           ; 1 bytes @ 0xB
   181  00000C                     	ds	1
   182  00000D                     ?_sprintf:
   183                           	opt stack 0
   184  00000D                     sprintf@sp:
   185                           	opt stack 0
   186                           
   187                           ; 2 bytes @ 0xC
   188  00000D                     	ds	2
   189  00000F                     sprintf@f:
   190                           	opt stack 0
   191                           
   192                           ; 2 bytes @ 0xE
   193  00000F                     	ds	4
   194  000013                     ??_sprintf:
   195                           
   196                           ; 1 bytes @ 0x12
   197  000013                     	ds	1
   198  000014                     sprintf@ap:
   199                           	opt stack 0
   200                           
   201                           ; 2 bytes @ 0x13
   202  000014                     	ds	2
   203  000016                     sprintf@flag:
   204                           	opt stack 0
   205                           
   206                           ; 1 bytes @ 0x15
   207  000016                     	ds	1
   208  000017                     sprintf@prec:
   209                           	opt stack 0
   210                           
   211                           ; 1 bytes @ 0x16
   212  000017                     	ds	1
   213  000018                     sprintf@val:
   214                           	opt stack 0
   215                           
   216                           ; 2 bytes @ 0x17
   217  000018                     	ds	2
   218  00001A                     sprintf@c:
   219                           	opt stack 0
   220                           
   221                           ; 1 bytes @ 0x19
   222  00001A                     	ds	1
   223  00001B                     ??_main:
   224                           
   225                           ; 1 bytes @ 0x1A
   226  00001B                     	ds	2
   227  00001D                     main@buffer:
   228                           	opt stack 0
   229                           
   230                           ; 10 bytes @ 0x1C
   231  00001D                     	ds	10
   232  000027                     main@testbuffer:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x26
   236  000027                     	ds	2
   237  000029                     main@tempvariable:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x28
   241  000029                     	ds	2
   242                           tblptru	equ	0xFF8
   243                           
   244 ;;
   245 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   246 ;;
   247 ;; *************** function _main *****************
   248 ;; Defined at:
   249 ;;		line 6 in file "main.c"
   250 ;; Parameters:    Size  Location     Type
   251 ;;		None
   252 ;; Auto vars:     Size  Location     Type
   253 ;;  buffer         10   28[COMRAM] unsigned char [10]
   254 ;;  tempvariable    2   40[COMRAM] int 
   255 ;;  testbuffer      2   38[COMRAM] int 
   256 ;; Return value:  Size  Location     Type
   257 ;;                  1    wreg      void 
   258 ;; Registers used:
   259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   260 ;; Tracked objects:
   261 ;;		On entry : 0/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   265 ;;      Params:         0       0       0       0       0       0       0
   266 ;;      Locals:        14       0       0       0       0       0       0
   267 ;;      Temps:          2       0       0       0       0       0       0
   268 ;;      Totals:        16       0       0       0       0       0       0
   269 ;;Total ram usage:       16 bytes
   270 ;; Hardware stack levels required when called:    4
   271 ;; This function calls:
   272 ;;		_BusyXLCD
   273 ;;		_init_XLCD
   274 ;;		_putrsXLCD
   275 ;;		_sprintf
   276 ;; This function is called by:
   277 ;;		Startup code after reset
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281                           	psect	text0
   282  000758                     __ptext0:
   283                           	opt stack 0
   284  000758                     _main:
   285                           	opt stack 27
   286                           
   287                           ;main.c: 8: LATA = 0xFF;
   288                           
   289                           ;incstack = 0
   290  000758  6889               	setf	3977,c	;volatile
   291                           
   292                           ;main.c: 9: LATB = 0xFF;
   293  00075A  688A               	setf	3978,c	;volatile
   294                           
   295                           ;main.c: 10: TRISD = 0xFF;
   296  00075C  6895               	setf	3989,c	;volatile
   297                           
   298                           ;main.c: 12: TRISBbits.RB4 = 1;
   299  00075E  8893               	bsf	3987,4,c	;volatile
   300                           
   301                           ;main.c: 13: TRISBbits.RB5 = 1;
   302  000760  8A93               	bsf	3987,5,c	;volatile
   303                           
   304                           ;main.c: 14: init_XLCD();
   305  000762  EC36  F005         	call	_init_XLCD	;wreg free
   306                           
   307                           ;main.c: 15: int testbuffer = -1;
   308  000766  6827               	setf	main@testbuffer,c
   309  000768  6828               	setf	main@testbuffer+1,c
   310                           
   311                           ;main.c: 16: __nop();
   312  00076A  F000               	nop	
   313  00076C                     
   314                           ;main.c: 19: int tempvariable = PORTBbits.RB5;
   315  00076C  AA81               	btfss	3969,5,c	;volatile
   316  00076E  D003               	goto	u530
   317  000770  6A1B               	clrf	??_main& (0+255),c
   318  000772  2A1B               	incf	??_main& (0+255),f,c
   319  000774  D001               	goto	u538
   320  000776                     u530:
   321  000776  6A1B               	clrf	??_main& (0+255),c
   322  000778                     u538:
   323  000778  501B               	movf	??_main,w,c
   324  00077A  6E29               	movwf	main@tempvariable,c
   325  00077C  6A2A               	clrf	main@tempvariable+1,c
   326                           
   327                           ;main.c: 20: if(testbuffer != tempvariable) {
   328  00077E  5029               	movf	main@tempvariable,w,c
   329  000780  1827               	xorwf	main@testbuffer,w,c
   330  000782  E104               	bnz	u540
   331  000784  502A               	movf	main@tempvariable+1,w,c
   332  000786  1828               	xorwf	main@testbuffer+1,w,c
   333  000788  B4D8               	btfsc	status,2,c
   334  00078A  D034               	goto	l42
   335  00078C                     u540:
   336                           
   337                           ;main.c: 21: char buffer[10];
   338                           ;main.c: 22: sprintf(buffer, "%d", tempvariable);
   339  00078C  0E1D               	movlw	low main@buffer
   340  00078E  6E0D               	movwf	sprintf@sp,c
   341  000790  0E00               	movlw	high main@buffer
   342  000792  6E0E               	movwf	sprintf@sp+1,c
   343  000794  0E0B               	movlw	low STR_1
   344  000796  6E0F               	movwf	sprintf@f,c
   345  000798  0E06               	movlw	high STR_1
   346  00079A  6E10               	movwf	sprintf@f+1,c
   347  00079C  C029  F011         	movff	main@tempvariable,?_sprintf+4
   348  0007A0  C02A  F012         	movff	main@tempvariable+1,?_sprintf+5
   349  0007A4  EC08  F003         	call	_sprintf	;wreg free
   350  0007A8  EC02  F005         	call	_BusyXLCD	;wreg free
   351  0007AC  0900               	iorlw	0
   352  0007AE  A4D8               	btfss	status,2,c
   353  0007B0  D7FB               	goto	l34
   354                           
   355                           ;main.c: 24: init_XLCD();
   356  0007B2  EC36  F005         	call	_init_XLCD	;wreg free
   357  0007B6  EC02  F005         	call	_BusyXLCD	;wreg free
   358  0007BA  0900               	iorlw	0
   359  0007BC  A4D8               	btfss	status,2,c
   360  0007BE  D7FB               	goto	l37
   361                           
   362                           ;main.c: 26: putrsXLCD(buffer);
   363  0007C0  0E1D               	movlw	low main@buffer
   364  0007C2  6E02               	movwf	putrsXLCD@buffer,c
   365  0007C4  0E00               	movlw	high main@buffer
   366  0007C6  6E03               	movwf	putrsXLCD@buffer+1,c
   367  0007C8  EC1F  F005         	call	_putrsXLCD	;wreg free
   368  0007CC  EC02  F005         	call	_BusyXLCD	;wreg free
   369  0007D0  0900               	iorlw	0
   370  0007D2  A4D8               	btfss	status,2,c
   371  0007D4  D7FB               	goto	l40
   372                           
   373                           ;main.c: 28: if(tempvariable == 1) {
   374  0007D6  0429               	decf	main@tempvariable,w,c
   375  0007D8  102A               	iorwf	main@tempvariable+1,w,c
   376  0007DA  A4D8               	btfss	status,2,c
   377  0007DC  D00B               	goto	l42
   378                           
   379                           ;main.c: 29: _delay((unsigned long)((1000)*(4000000/4000.0)));
   380  0007DE  0E06               	movlw	6
   381  0007E0  6E1C               	movwf	(??_main+1)& (0+255),c
   382  0007E2  0E13               	movlw	19
   383  0007E4  6E1B               	movwf	??_main& (0+255),c
   384  0007E6  0EAE               	movlw	174
   385  0007E8                     u597:
   386  0007E8  2EE8               	decfsz	wreg,f,c
   387  0007EA  D7FE               	bra	u597
   388  0007EC  2E1B               	decfsz	??_main& (0+255),f,c
   389  0007EE  D7FC               	bra	u597
   390  0007F0  2E1C               	decfsz	(??_main+1)& (0+255),f,c
   391  0007F2  D7FA               	bra	u597
   392  0007F4                     l42:
   393                           
   394                           ;main.c: 30: }
   395                           ;main.c: 32: }
   396                           ;main.c: 33: testbuffer = tempvariable;
   397  0007F4  C029  F027         	movff	main@tempvariable,main@testbuffer
   398  0007F8  C02A  F028         	movff	main@tempvariable+1,main@testbuffer+1
   399  0007FC  D7B7               	goto	l31
   400  0007FE                     __end_of_main:
   401                           	opt stack 0
   402                           tblptru	equ	0xFF8
   403                           wreg	equ	0xFE8
   404                           status	equ	0xFD8
   405                           
   406 ;; *************** function _sprintf *****************
   407 ;; Defined at:
   408 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;  sp              2   12[COMRAM] PTR unsigned char 
   411 ;;		 -> main@buffer(10), 
   412 ;;  f               2   14[COMRAM] PTR const unsigned char 
   413 ;;		 -> STR_1(3), 
   414 ;; Auto vars:     Size  Location     Type
   415 ;;  tmpval          4    0        struct .
   416 ;;  cp              3    0        PTR const unsigned char 
   417 ;;  val             2   23[COMRAM] unsigned int 
   418 ;;  ap              2   19[COMRAM] PTR void [1]
   419 ;;		 -> ?_sprintf(2), 
   420 ;;  len             2    0        unsigned int 
   421 ;;  c               1   25[COMRAM] char 
   422 ;;  prec            1   22[COMRAM] char 
   423 ;;  flag            1   21[COMRAM] unsigned char 
   424 ;; Return value:  Size  Location     Type
   425 ;;                  2   12[COMRAM] int 
   426 ;; Registers used:
   427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   433 ;;      Params:         6       0       0       0       0       0       0
   434 ;;      Locals:         7       0       0       0       0       0       0
   435 ;;      Temps:          1       0       0       0       0       0       0
   436 ;;      Totals:        14       0       0       0       0       0       0
   437 ;;Total ram usage:       14 bytes
   438 ;; Hardware stack levels used:    1
   439 ;; Hardware stack levels required when called:    1
   440 ;; This function calls:
   441 ;;		___lwdiv
   442 ;;		___lwmod
   443 ;; This function is called by:
   444 ;;		_main
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           	psect	text1
   449  000610                     __ptext1:
   450                           	opt stack 0
   451  000610                     _sprintf:
   452                           	opt stack 29
   453                           
   454                           ;doprnt.c: 494: va_list ap;
   455                           ;doprnt.c: 499: signed char c;
   456                           ;doprnt.c: 506: signed char prec;
   457                           ;doprnt.c: 508: unsigned char flag;
   458                           ;doprnt.c: 523: union {
   459                           ;doprnt.c: 524: unsigned long vd;
   460                           ;doprnt.c: 525: double integ;
   461                           ;doprnt.c: 526: } tmpval;
   462                           ;doprnt.c: 528: unsigned int val;
   463                           ;doprnt.c: 529: unsigned len;
   464                           ;doprnt.c: 530: const char * cp;
   465                           ;doprnt.c: 533: *ap = __va_start();
   466                           
   467                           ;incstack = 0
   468  000610  0E11               	movlw	low (?_sprintf+4)
   469  000612  6E14               	movwf	sprintf@ap,c
   470  000614  0E00               	movlw	high (?_sprintf+4)
   471  000616  6E15               	movwf	sprintf@ap+1,c
   472                           
   473                           ;doprnt.c: 536: while(c = *f++) {
   474  000618  D08C               	goto	u490
   475  00061A                     
   476                           ;doprnt.c: 538: if(c != '%')
   477  00061A  0E25               	movlw	37
   478  00061C  181A               	xorwf	sprintf@c,w,c
   479  00061E  B4D8               	btfsc	status,2,c
   480  000620  D009               	goto	l266
   481                           
   482                           ;doprnt.c: 540: {
   483                           ;doprnt.c: 541: ((*sp++ = (c)));
   484  000622  C00D  FFD9         	movff	sprintf@sp,fsr2l
   485  000626  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   486  00062A  C01A  FFDF         	movff	sprintf@c,indf2
   487  00062E  4A0D               	infsnz	sprintf@sp,f,c
   488  000630  2A0E               	incf	sprintf@sp+1,f,c
   489                           
   490                           ;doprnt.c: 542: continue;
   491  000632  D07F               	goto	u490
   492  000634                     l266:
   493                           
   494                           ;doprnt.c: 543: }
   495                           ;doprnt.c: 548: flag = 0;
   496  000634  0E00               	movlw	0
   497  000636  6E16               	movwf	sprintf@flag,c
   498                           
   499                           ;doprnt.c: 822: }
   500                           
   501                           ;doprnt.c: 813: continue;
   502                           
   503                           ;doprnt.c: 802: default:
   504                           
   505                           ;doprnt.c: 698: case 'i':
   506                           ;doprnt.c: 699: break;
   507                           
   508                           ;doprnt.c: 697: case 'd':
   509                           
   510                           ;doprnt.c: 638: goto alldone;
   511                           
   512                           ;doprnt.c: 637: case 0:
   513                           
   514                           ;doprnt.c: 635: switch(c = *f++) {
   515  000638  C00F  FFF6         	movff	sprintf@f,tblptrl
   516  00063C  C010  FFF7         	movff	sprintf@f+1,tblptrh
   517  000640  4A0F               	infsnz	sprintf@f,f,c
   518  000642  2A10               	incf	sprintf@f+1,f,c
   519  000644                     	if	0	;tblptru may be non-zero
   520  000644                     	endif
   521  000644                     	if	0	;tblptru may be non-zero
   522  000644                     	endif
   523  000644  0008               	tblrd		*
   524  000646  CFF5 F01A          	movff	tablat,sprintf@c
   525  00064A  501A               	movf	sprintf@c,w,c
   526                           
   527                           ; Switch size 1, requested type "space"
   528                           ; Number of cases is 3, Range of values is 0 to 105
   529                           ; switch strategies available:
   530                           ; Name         Instructions Cycles
   531                           ; simple_byte           10     6 (average)
   532                           ;	Chosen strategy is simple_byte
   533  00064C  0A00               	xorlw	0	; case 0
   534  00064E  B4D8               	btfsc	status,2,c
   535  000650  D07C               	goto	u500
   536  000652  0A64               	xorlw	100	; case 100
   537  000654  B4D8               	btfsc	status,2,c
   538  000656  D003               	goto	l272
   539  000658  0A0D               	xorlw	13	; case 105
   540  00065A  A4D8               	btfss	status,2,c
   541  00065C  D06A               	goto	u490
   542  00065E                     l272:
   543                           
   544                           ;doprnt.c: 1253: {
   545                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   546  00065E  C014  FFD9         	movff	sprintf@ap,fsr2l
   547  000662  C015  FFDA         	movff	sprintf@ap+1,fsr2h
   548  000666  CFDE F018          	movff	postinc2,sprintf@val
   549  00066A  CFDD F019          	movff	postdec2,sprintf@val+1
   550  00066E  0E02               	movlw	2
   551  000670  2614               	addwf	sprintf@ap,f,c
   552  000672  0E00               	movlw	0
   553  000674  2215               	addwfc	sprintf@ap+1,f,c
   554                           
   555                           ;doprnt.c: 1261: if((int)val < 0) {
   556  000676  AE19               	btfss	sprintf@val+1,7,c
   557  000678  D006               	goto	l274
   558                           
   559                           ;doprnt.c: 1262: flag |= 0x03;
   560  00067A  0E03               	movlw	3
   561  00067C  1216               	iorwf	sprintf@flag,f,c
   562                           
   563                           ;doprnt.c: 1263: val = -val;
   564  00067E  6C18               	negf	sprintf@val,c
   565  000680  1E19               	comf	sprintf@val+1,f,c
   566  000682  B0D8               	btfsc	status,0,c
   567  000684  2A19               	incf	sprintf@val+1,f,c
   568  000686                     l274:
   569                           
   570                           ;doprnt.c: 1264: }
   571                           ;doprnt.c: 1266: }
   572                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   573  000686  0E01               	movlw	1
   574  000688  6E1A               	movwf	sprintf@c,c
   575  00068A                     l1408:
   576  00068A  0E05               	movlw	5
   577  00068C  181A               	xorwf	sprintf@c,w,c
   578  00068E  B4D8               	btfsc	status,2,c
   579  000690  D012               	goto	u470
   580                           
   581                           ;doprnt.c: 1306: if(val < dpowers[c])
   582  000692  501A               	movf	sprintf@c,w,c
   583  000694  0D02               	mullw	2
   584  000696  0E01               	movlw	low _dpowers
   585  000698  24F3               	addwf	prodl,w,c
   586  00069A  6EF6               	movwf	tblptrl,c
   587  00069C  0E06               	movlw	high _dpowers
   588  00069E  20F4               	addwfc	prodh,w,c
   589  0006A0  6EF7               	movwf	tblptrh,c
   590  0006A2                     	if	0	;There are less than 3 active tblptr bytes
   591  0006A2                     	endif
   592  0006A2  0009               	tblrd		*+
   593  0006A4  50F5               	movf	tablat,w,c
   594  0006A6  5C18               	subwf	sprintf@val,w,c
   595  0006A8  0009               	tblrd		*+
   596  0006AA  50F5               	movf	tablat,w,c
   597  0006AC  5819               	subwfb	sprintf@val+1,w,c
   598  0006AE  A0D8               	btfss	status,0,c
   599  0006B0  D002               	goto	u470
   600                           
   601                           ;doprnt.c: 1307: break;
   602  0006B2  2A1A               	incf	sprintf@c,f,c
   603  0006B4  D7EA               	goto	l1408
   604  0006B6                     u470:
   605                           
   606                           ;doprnt.c: 1422: {
   607                           ;doprnt.c: 1438: if(flag & 0x03)
   608  0006B6  C016  F013         	movff	sprintf@flag,??_sprintf
   609  0006BA  0E03               	movlw	3
   610  0006BC  1613               	andwf	??_sprintf,f,c
   611  0006BE  B4D8               	btfsc	status,2,c
   612  0006C0  D008               	goto	l278
   613                           
   614                           ;doprnt.c: 1439: ((*sp++ = ('-')));
   615  0006C2  C00D  FFD9         	movff	sprintf@sp,fsr2l
   616  0006C6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   617  0006CA  0E2D               	movlw	45
   618  0006CC  6EDF               	movwf	indf2,c
   619  0006CE  4A0D               	infsnz	sprintf@sp,f,c
   620  0006D0  2A0E               	incf	sprintf@sp+1,f,c
   621  0006D2                     l278:
   622                           
   623                           ;doprnt.c: 1469: }
   624                           ;doprnt.c: 1472: prec = c;
   625  0006D2  C01A  F017         	movff	sprintf@c,sprintf@prec
   626                           
   627                           ;doprnt.c: 1474: while(prec--) {
   628  0006D6  D029               	goto	l279
   629  0006D8                     
   630                           ;doprnt.c: 1478: {
   631                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   632  0006D8  5017               	movf	sprintf@prec,w,c
   633  0006DA  0D02               	mullw	2
   634  0006DC  0E01               	movlw	low _dpowers
   635  0006DE  24F3               	addwf	prodl,w,c
   636  0006E0  6EF6               	movwf	tblptrl,c
   637  0006E2  0E06               	movlw	high _dpowers
   638  0006E4  20F4               	addwfc	prodh,w,c
   639  0006E6  6EF7               	movwf	tblptrh,c
   640  0006E8                     	if	0	;There are less than 3 active tblptr bytes
   641  0006E8                     	endif
   642  0006E8  0009               	tblrd		*+
   643  0006EA  CFF5 F003          	movff	tablat,___lwdiv@divisor
   644  0006EE  000A               	tblrd		*-
   645  0006F0  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
   646  0006F4  C018  F001         	movff	sprintf@val,___lwdiv@dividend
   647  0006F8  C019  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
   648  0006FC  EC51  F004         	call	___lwdiv	;wreg free
   649  000700  C001  F008         	movff	?___lwdiv,___lwmod@dividend
   650  000704  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
   651  000708  0E00               	movlw	0
   652  00070A  6E0B               	movwf	___lwmod@divisor+1,c
   653  00070C  0E0A               	movlw	10
   654  00070E  6E0A               	movwf	___lwmod@divisor,c
   655  000710  ECA3  F004         	call	___lwmod	;wreg free
   656  000714  5008               	movf	?___lwmod,w,c
   657  000716  0F30               	addlw	48
   658  000718  6E1A               	movwf	sprintf@c,c
   659                           
   660                           ;doprnt.c: 1523: }
   661                           ;doprnt.c: 1524: ((*sp++ = (c)));
   662  00071A  C00D  FFD9         	movff	sprintf@sp,fsr2l
   663  00071E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   664  000722  C01A  FFDF         	movff	sprintf@c,indf2
   665  000726  4A0D               	infsnz	sprintf@sp,f,c
   666  000728  2A0E               	incf	sprintf@sp+1,f,c
   667  00072A                     l279:
   668  00072A  0617               	decf	sprintf@prec,f,c
   669  00072C  2817               	incf	sprintf@prec,w,c
   670  00072E  A4D8               	btfss	status,2,c
   671  000730  D7D3               	goto	l280
   672  000732                     u490:
   673  000732  C00F  FFF6         	movff	sprintf@f,tblptrl
   674  000736  C010  FFF7         	movff	sprintf@f+1,tblptrh
   675  00073A  4A0F               	infsnz	sprintf@f,f,c
   676  00073C  2A10               	incf	sprintf@f+1,f,c
   677  00073E                     	if	0	;tblptru may be non-zero
   678  00073E                     	endif
   679  00073E                     	if	0	;tblptru may be non-zero
   680  00073E                     	endif
   681  00073E  0008               	tblrd		*
   682  000740  CFF5 F01A          	movff	tablat,sprintf@c
   683  000744  501A               	movf	sprintf@c,w,c
   684  000746  A4D8               	btfss	status,2,c
   685  000748  D768               	goto	l265
   686  00074A                     u500:
   687                           
   688                           ;doprnt.c: 1538: *sp = 0;
   689                           
   690                           ;doprnt.c: 1525: }
   691                           ;doprnt.c: 1533: }
   692                           ;doprnt.c: 1535: alldone:
   693  00074A  C00D  FFD9         	movff	sprintf@sp,fsr2l
   694  00074E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   695  000752  0E00               	movlw	0
   696  000754  6EDF               	movwf	indf2,c
   697  000756  0012               	return	
   698  000758                     __end_of_sprintf:
   699                           	opt stack 0
   700                           tblptru	equ	0xFF8
   701                           tblptrh	equ	0xFF7
   702                           tblptrl	equ	0xFF6
   703                           tablat	equ	0xFF5
   704                           prodh	equ	0xFF4
   705                           prodl	equ	0xFF3
   706                           wreg	equ	0xFE8
   707                           indf2	equ	0xFDF
   708                           postinc2	equ	0xFDE
   709                           postdec2	equ	0xFDD
   710                           fsr2h	equ	0xFDA
   711                           fsr2l	equ	0xFD9
   712                           status	equ	0xFD8
   713                           
   714 ;; *************** function ___lwmod *****************
   715 ;; Defined at:
   716 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;  dividend        2    7[COMRAM] unsigned int 
   719 ;;  divisor         2    9[COMRAM] unsigned int 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  counter         1   11[COMRAM] unsigned char 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  2    7[COMRAM] unsigned int 
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   731 ;;      Params:         4       0       0       0       0       0       0
   732 ;;      Locals:         1       0       0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0
   734 ;;      Totals:         5       0       0       0       0       0       0
   735 ;;Total ram usage:        5 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; This function calls:
   738 ;;		Nothing
   739 ;; This function is called by:
   740 ;;		_sprintf
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text2
   745  000946                     __ptext2:
   746                           	opt stack 0
   747  000946                     ___lwmod:
   748                           	opt stack 29
   749                           
   750                           ;incstack = 0
   751  000946  500A               	movf	___lwmod@divisor,w,c
   752  000948  100B               	iorwf	___lwmod@divisor+1,w,c
   753  00094A  B4D8               	btfsc	status,2,c
   754  00094C  D018               	goto	l709
   755  00094E  0E01               	movlw	1
   756  000950  6E0C               	movwf	___lwmod@counter,c
   757  000952  D004               	goto	l704
   758  000954  90D8               	bcf	status,0,c
   759  000956  360A               	rlcf	___lwmod@divisor,f,c
   760  000958  360B               	rlcf	___lwmod@divisor+1,f,c
   761  00095A  2A0C               	incf	___lwmod@counter,f,c
   762  00095C                     l704:
   763  00095C  AE0B               	btfss	___lwmod@divisor+1,7,c
   764  00095E  D7FA               	goto	l705
   765  000960                     u410:
   766  000960  500A               	movf	___lwmod@divisor,w,c
   767  000962  5C08               	subwf	___lwmod@dividend,w,c
   768  000964  500B               	movf	___lwmod@divisor+1,w,c
   769  000966  5809               	subwfb	___lwmod@dividend+1,w,c
   770  000968  A0D8               	btfss	status,0,c
   771  00096A  D004               	goto	l708
   772  00096C  500A               	movf	___lwmod@divisor,w,c
   773  00096E  5E08               	subwf	___lwmod@dividend,f,c
   774  000970  500B               	movf	___lwmod@divisor+1,w,c
   775  000972  5A09               	subwfb	___lwmod@dividend+1,f,c
   776  000974                     l708:
   777  000974  90D8               	bcf	status,0,c
   778  000976  320B               	rrcf	___lwmod@divisor+1,f,c
   779  000978  320A               	rrcf	___lwmod@divisor,f,c
   780  00097A  2E0C               	decfsz	___lwmod@counter,f,c
   781  00097C  D7F1               	goto	u410
   782  00097E                     l709:
   783  00097E  C008  F008         	movff	___lwmod@dividend,?___lwmod
   784  000982  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
   785  000986  0012               	return		;funcret
   786  000988                     __end_of___lwmod:
   787                           	opt stack 0
   788                           tblptru	equ	0xFF8
   789                           tblptrh	equ	0xFF7
   790                           tblptrl	equ	0xFF6
   791                           tablat	equ	0xFF5
   792                           prodh	equ	0xFF4
   793                           prodl	equ	0xFF3
   794                           wreg	equ	0xFE8
   795                           indf2	equ	0xFDF
   796                           postinc2	equ	0xFDE
   797                           postdec2	equ	0xFDD
   798                           fsr2h	equ	0xFDA
   799                           fsr2l	equ	0xFD9
   800                           status	equ	0xFD8
   801                           
   802 ;; *************** function ___lwdiv *****************
   803 ;; Defined at:
   804 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  dividend        2    0[COMRAM] unsigned int 
   807 ;;  divisor         2    2[COMRAM] unsigned int 
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  quotient        2    4[COMRAM] unsigned int 
   810 ;;  counter         1    6[COMRAM] unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  2    0[COMRAM] unsigned int 
   813 ;; Registers used:
   814 ;;		wreg, status,2, status,0
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   820 ;;      Params:         4       0       0       0       0       0       0
   821 ;;      Locals:         3       0       0       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0       0       0
   823 ;;      Totals:         7       0       0       0       0       0       0
   824 ;;Total ram usage:        7 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_sprintf
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text3
   834  0008A2                     __ptext3:
   835                           	opt stack 0
   836  0008A2                     ___lwdiv:
   837                           	opt stack 29
   838                           
   839                           ;incstack = 0
   840  0008A2  0E00               	movlw	0
   841  0008A4  6E06               	movwf	___lwdiv@quotient+1,c
   842  0008A6  0E00               	movlw	0
   843  0008A8  6E05               	movwf	___lwdiv@quotient,c
   844  0008AA  5003               	movf	___lwdiv@divisor,w,c
   845  0008AC  1004               	iorwf	___lwdiv@divisor+1,w,c
   846  0008AE  B4D8               	btfsc	status,2,c
   847  0008B0  D01C               	goto	l699
   848  0008B2  0E01               	movlw	1
   849  0008B4  6E07               	movwf	___lwdiv@counter,c
   850  0008B6  D004               	goto	l694
   851  0008B8  90D8               	bcf	status,0,c
   852  0008BA  3603               	rlcf	___lwdiv@divisor,f,c
   853  0008BC  3604               	rlcf	___lwdiv@divisor+1,f,c
   854  0008BE  2A07               	incf	___lwdiv@counter,f,c
   855  0008C0                     l694:
   856  0008C0  AE04               	btfss	___lwdiv@divisor+1,7,c
   857  0008C2  D7FA               	goto	l695
   858  0008C4                     u380:
   859  0008C4  90D8               	bcf	status,0,c
   860  0008C6  3605               	rlcf	___lwdiv@quotient,f,c
   861  0008C8  3606               	rlcf	___lwdiv@quotient+1,f,c
   862  0008CA  5003               	movf	___lwdiv@divisor,w,c
   863  0008CC  5C01               	subwf	___lwdiv@dividend,w,c
   864  0008CE  5004               	movf	___lwdiv@divisor+1,w,c
   865  0008D0  5802               	subwfb	___lwdiv@dividend+1,w,c
   866  0008D2  A0D8               	btfss	status,0,c
   867  0008D4  D005               	goto	l698
   868  0008D6  5003               	movf	___lwdiv@divisor,w,c
   869  0008D8  5E01               	subwf	___lwdiv@dividend,f,c
   870  0008DA  5004               	movf	___lwdiv@divisor+1,w,c
   871  0008DC  5A02               	subwfb	___lwdiv@dividend+1,f,c
   872  0008DE  8005               	bsf	___lwdiv@quotient,0,c
   873  0008E0                     l698:
   874  0008E0  90D8               	bcf	status,0,c
   875  0008E2  3204               	rrcf	___lwdiv@divisor+1,f,c
   876  0008E4  3203               	rrcf	___lwdiv@divisor,f,c
   877  0008E6  2E07               	decfsz	___lwdiv@counter,f,c
   878  0008E8  D7ED               	goto	u380
   879  0008EA                     l699:
   880  0008EA  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
   881  0008EE  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
   882  0008F2  0012               	return		;funcret
   883  0008F4                     __end_of___lwdiv:
   884                           	opt stack 0
   885                           tblptru	equ	0xFF8
   886                           tblptrh	equ	0xFF7
   887                           tblptrl	equ	0xFF6
   888                           tablat	equ	0xFF5
   889                           prodh	equ	0xFF4
   890                           prodl	equ	0xFF3
   891                           wreg	equ	0xFE8
   892                           indf2	equ	0xFDF
   893                           postinc2	equ	0xFDE
   894                           postdec2	equ	0xFDD
   895                           fsr2h	equ	0xFDA
   896                           fsr2l	equ	0xFD9
   897                           status	equ	0xFD8
   898                           
   899 ;; *************** function _putrsXLCD *****************
   900 ;; Defined at:
   901 ;;		line 16 in file "putrxlcd.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;  buffer          2    1[COMRAM] PTR const unsigned char 
   904 ;;		 -> main@buffer(10), 
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   916 ;;      Params:         2       0       0       0       0       0       0
   917 ;;      Locals:         0       0       0       0       0       0       0
   918 ;;      Temps:          0       0       0       0       0       0       0
   919 ;;      Totals:         2       0       0       0       0       0       0
   920 ;;Total ram usage:        2 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; Hardware stack levels required when called:    2
   923 ;; This function calls:
   924 ;;		_BusyXLCD
   925 ;;		_WriteDataXLCD
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text4
   932  000A3E                     __ptext4:
   933                           	opt stack 0
   934  000A3E                     _putrsXLCD:
   935                           	opt stack 28
   936                           
   937                           ;putrxlcd.c: 18: while(*buffer)
   938                           
   939                           ;incstack = 0
   940  000A3E  D00E               	goto	l120
   941  000A40                     
   942                           ;putrxlcd.c: 19: {
   943                           ;putrxlcd.c: 20: while(BusyXLCD());
   944  000A40  EC02  F005         	call	_BusyXLCD	;wreg free
   945  000A44  0900               	iorlw	0
   946  000A46  A4D8               	btfss	status,2,c
   947  000A48  D7FB               	goto	l121
   948                           
   949                           ;putrxlcd.c: 21: WriteDataXLCD(*buffer);
   950  000A4A  C002  FFD9         	movff	putrsXLCD@buffer,fsr2l
   951  000A4E  C003  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
   952  000A52  50DF               	movf	indf2,w,c
   953  000A54  ECC4  F004         	call	_WriteDataXLCD
   954                           
   955                           ;putrxlcd.c: 22: buffer++;
   956  000A58  4A02               	infsnz	putrsXLCD@buffer,f,c
   957  000A5A  2A03               	incf	putrsXLCD@buffer+1,f,c
   958  000A5C                     l120:
   959  000A5C  C002  FFD9         	movff	putrsXLCD@buffer,fsr2l
   960  000A60  C003  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
   961  000A64  50DF               	movf	indf2,w,c
   962  000A66  B4D8               	btfsc	status,2,c
   963  000A68  0012               	return	
   964  000A6A  D7EA               	goto	l121
   965  000A6C                     __end_of_putrsXLCD:
   966                           	opt stack 0
   967                           tblptru	equ	0xFF8
   968                           tblptrh	equ	0xFF7
   969                           tblptrl	equ	0xFF6
   970                           tablat	equ	0xFF5
   971                           prodh	equ	0xFF4
   972                           prodl	equ	0xFF3
   973                           wreg	equ	0xFE8
   974                           indf2	equ	0xFDF
   975                           postinc2	equ	0xFDE
   976                           postdec2	equ	0xFDD
   977                           fsr2h	equ	0xFDA
   978                           fsr2l	equ	0xFD9
   979                           status	equ	0xFD8
   980                           
   981 ;; *************** function _WriteDataXLCD *****************
   982 ;; Defined at:
   983 ;;		line 16 in file "writdata.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;  data            1    wreg     unsigned char 
   986 ;; Auto vars:     Size  Location     Type
   987 ;;  data            1    0[COMRAM] unsigned char 
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   997 ;;      Params:         0       0       0       0       0       0       0
   998 ;;      Locals:         1       0       0       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0       0       0
  1000 ;;      Totals:         1       0       0       0       0       0       0
  1001 ;;Total ram usage:        1 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; Hardware stack levels required when called:    1
  1004 ;; This function calls:
  1005 ;;		_DelayFor18TCY
  1006 ;; This function is called by:
  1007 ;;		_putrsXLCD
  1008 ;;		_putsXLCD
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text5
  1013  000988                     __ptext5:
  1014                           	opt stack 0
  1015  000988                     _WriteDataXLCD:
  1016                           	opt stack 28
  1017                           
  1018                           ;incstack = 0
  1019                           ;WriteDataXLCD@data stored from wreg
  1020  000988  6E01               	movwf	WriteDataXLCD@data,c
  1021                           
  1022                           ;writdata.c: 35: TRISB &= 0xf0;
  1023  00098A  0EF0               	movlw	240
  1024  00098C  1693               	andwf	3987,f,c	;volatile
  1025                           
  1026                           ;writdata.c: 36: PORTB &= 0xf0;
  1027  00098E  0EF0               	movlw	240
  1028  000990  1681               	andwf	3969,f,c	;volatile
  1029                           
  1030                           ;writdata.c: 37: PORTB |= ((data>>4)&0x0f);
  1031  000992  3801               	swapf	WriteDataXLCD@data,w,c
  1032  000994  0B0F               	andlw	15
  1033  000996  0B0F               	andlw	15
  1034  000998  1281               	iorwf	3969,f,c	;volatile
  1035                           
  1036                           ;writdata.c: 39: LATAbits.LATA3 = 1;
  1037  00099A  8689               	bsf	3977,3,c	;volatile
  1038                           
  1039                           ;writdata.c: 40: LATAbits.LATA2 = 0;
  1040  00099C  9489               	bcf	3977,2,c	;volatile
  1041                           
  1042                           ;writdata.c: 41: DelayFor18TCY();
  1043  00099E  EC5D  F005         	call	_DelayFor18TCY	;wreg free
  1044                           
  1045                           ;writdata.c: 42: LATAbits.LATA1 = 1;
  1046  0009A2  8289               	bsf	3977,1,c	;volatile
  1047                           
  1048                           ;writdata.c: 43: DelayFor18TCY();
  1049  0009A4  EC5D  F005         	call	_DelayFor18TCY	;wreg free
  1050                           
  1051                           ;writdata.c: 44: LATAbits.LATA1 = 0;
  1052  0009A8  9289               	bcf	3977,1,c	;volatile
  1053                           
  1054                           ;writdata.c: 49: PORTB &= 0xf0;
  1055  0009AA  0EF0               	movlw	240
  1056  0009AC  1681               	andwf	3969,f,c	;volatile
  1057                           
  1058                           ;writdata.c: 50: PORTB |= (data&0x0f);
  1059  0009AE  5001               	movf	WriteDataXLCD@data,w,c
  1060  0009B0  0B0F               	andlw	15
  1061  0009B2  1281               	iorwf	3969,f,c	;volatile
  1062                           
  1063                           ;writdata.c: 52: DelayFor18TCY();
  1064  0009B4  EC5D  F005         	call	_DelayFor18TCY	;wreg free
  1065                           
  1066                           ;writdata.c: 53: LATAbits.LATA1 = 1;
  1067  0009B8  8289               	bsf	3977,1,c	;volatile
  1068                           
  1069                           ;writdata.c: 54: DelayFor18TCY();
  1070  0009BA  EC5D  F005         	call	_DelayFor18TCY	;wreg free
  1071                           
  1072                           ;writdata.c: 55: LATAbits.LATA1 = 0;
  1073  0009BE  9289               	bcf	3977,1,c	;volatile
  1074                           
  1075                           ;writdata.c: 59: TRISB |= 0x0f;
  1076  0009C0  0E0F               	movlw	15
  1077  0009C2  1293               	iorwf	3987,f,c	;volatile
  1078  0009C4  0012               	return	
  1079  0009C6                     __end_of_WriteDataXLCD:
  1080                           	opt stack 0
  1081                           tblptru	equ	0xFF8
  1082                           tblptrh	equ	0xFF7
  1083                           tblptrl	equ	0xFF6
  1084                           tablat	equ	0xFF5
  1085                           prodh	equ	0xFF4
  1086                           prodl	equ	0xFF3
  1087                           wreg	equ	0xFE8
  1088                           indf2	equ	0xFDF
  1089                           postinc2	equ	0xFDE
  1090                           postdec2	equ	0xFDD
  1091                           fsr2h	equ	0xFDA
  1092                           fsr2l	equ	0xFD9
  1093                           status	equ	0xFD8
  1094                           
  1095 ;; *************** function _init_XLCD *****************
  1096 ;; Defined at:
  1097 ;;		line 57 in file "main.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;		None
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      void 
  1104 ;; Registers used:
  1105 ;;		wreg, status,2, status,0, cstack
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1111 ;;      Params:         0       0       0       0       0       0       0
  1112 ;;      Locals:         0       0       0       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0       0       0
  1114 ;;      Totals:         0       0       0       0       0       0       0
  1115 ;;Total ram usage:        0 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    3
  1118 ;; This function calls:
  1119 ;;		_BusyXLCD
  1120 ;;		_OpenXLCD
  1121 ;;		_WriteCmdXLCD
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text6
  1128  000A6C                     __ptext6:
  1129                           	opt stack 0
  1130  000A6C                     _init_XLCD:
  1131                           	opt stack 27
  1132                           
  1133                           ;main.c: 59: OpenXLCD(0b00101100&0b00111000);
  1134                           
  1135                           ;incstack = 0
  1136  000A6C  0E28               	movlw	40
  1137  000A6E  ECFF  F003         	call	_OpenXLCD
  1138  000A72  EC02  F005         	call	_BusyXLCD	;wreg free
  1139  000A76  0900               	iorlw	0
  1140  000A78  A4D8               	btfss	status,2,c
  1141  000A7A  D7FB               	goto	l58
  1142                           
  1143                           ;main.c: 63: WriteCmdXLCD(0x06);
  1144  000A7C  0E06               	movlw	6
  1145  000A7E  ECE3  F004         	call	_WriteCmdXLCD
  1146                           
  1147                           ;main.c: 64: WriteCmdXLCD(0x0C);
  1148  000A82  0E0C               	movlw	12
  1149  000A84  ECE3  F004         	call	_WriteCmdXLCD
  1150  000A88  0012               	return		;funcret
  1151  000A8A                     __end_of_init_XLCD:
  1152                           	opt stack 0
  1153                           tblptru	equ	0xFF8
  1154                           tblptrh	equ	0xFF7
  1155                           tblptrl	equ	0xFF6
  1156                           tablat	equ	0xFF5
  1157                           prodh	equ	0xFF4
  1158                           prodl	equ	0xFF3
  1159                           wreg	equ	0xFE8
  1160                           indf2	equ	0xFDF
  1161                           postinc2	equ	0xFDE
  1162                           postdec2	equ	0xFDD
  1163                           fsr2h	equ	0xFDA
  1164                           fsr2l	equ	0xFD9
  1165                           status	equ	0xFD8
  1166                           
  1167 ;; *************** function _OpenXLCD *****************
  1168 ;; Defined at:
  1169 ;;		line 19 in file "openxlcd.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;  lcdtype         1    wreg     unsigned char 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  lcdtype         1    4[COMRAM] unsigned char 
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2, status,0, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1183 ;;      Params:         0       0       0       0       0       0       0
  1184 ;;      Locals:         1       0       0       0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0       0       0
  1186 ;;      Totals:         1       0       0       0       0       0       0
  1187 ;;Total ram usage:        1 bytes
  1188 ;; Hardware stack levels used:    1
  1189 ;; Hardware stack levels required when called:    2
  1190 ;; This function calls:
  1191 ;;		_BusyXLCD
  1192 ;;		_Delay10KTCYx
  1193 ;;		_DelayPORXLCD
  1194 ;;		_SetDDRamAddr
  1195 ;;		_WriteCmdXLCD
  1196 ;; This function is called by:
  1197 ;;		_init_XLCD
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text7
  1202  0007FE                     __ptext7:
  1203                           	opt stack 0
  1204  0007FE                     _OpenXLCD:
  1205                           	opt stack 27
  1206                           
  1207                           ;incstack = 0
  1208                           ;OpenXLCD@lcdtype stored from wreg
  1209  0007FE  6E05               	movwf	OpenXLCD@lcdtype,c
  1210                           
  1211                           ;openxlcd.c: 31: PORTB &= 0xf0;
  1212  000800  0EF0               	movlw	240
  1213  000802  1681               	andwf	3969,f,c	;volatile
  1214                           
  1215                           ;openxlcd.c: 32: TRISB &= 0xF0;
  1216  000804  0EF0               	movlw	240
  1217  000806  1693               	andwf	3987,f,c	;volatile
  1218                           
  1219                           ;openxlcd.c: 35: TRISAbits.TRISA2 = 0;
  1220  000808  9492               	bcf	3986,2,c	;volatile
  1221                           
  1222                           ;openxlcd.c: 36: TRISAbits.TRISA3 = 0;
  1223  00080A  9692               	bcf	3986,3,c	;volatile
  1224                           
  1225                           ;openxlcd.c: 37: TRISAbits.TRISA1 = 0;
  1226  00080C  9292               	bcf	3986,1,c	;volatile
  1227                           
  1228                           ;openxlcd.c: 38: LATAbits.LATA2 = 0;
  1229  00080E  9489               	bcf	3977,2,c	;volatile
  1230                           
  1231                           ;openxlcd.c: 39: LATAbits.LATA3 = 0;
  1232  000810  9689               	bcf	3977,3,c	;volatile
  1233                           
  1234                           ;openxlcd.c: 40: LATAbits.LATA1 = 0;
  1235  000812  9289               	bcf	3977,1,c	;volatile
  1236                           
  1237                           ;openxlcd.c: 43: DelayPORXLCD();
  1238  000814  EC50  F005         	call	_DelayPORXLCD	;wreg free
  1239                           
  1240                           ;openxlcd.c: 45: WriteCmdXLCD(0x30);
  1241  000818  0E30               	movlw	48
  1242  00081A  ECE3  F004         	call	_WriteCmdXLCD
  1243                           
  1244                           ;openxlcd.c: 46: Delay10KTCYx(0x05);
  1245  00081E  0E05               	movlw	5
  1246  000820  EC45  F005         	call	_Delay10KTCYx
  1247                           
  1248                           ;openxlcd.c: 48: WriteCmdXLCD(0x30);
  1249  000824  0E30               	movlw	48
  1250  000826  ECE3  F004         	call	_WriteCmdXLCD
  1251                           
  1252                           ;openxlcd.c: 49: Delay10KTCYx(0x01);
  1253  00082A  0E01               	movlw	1
  1254  00082C  EC45  F005         	call	_Delay10KTCYx
  1255                           
  1256                           ;openxlcd.c: 52: WriteCmdXLCD(0x32);
  1257  000830  0E32               	movlw	50
  1258  000832  ECE3  F004         	call	_WriteCmdXLCD
  1259  000836  EC02  F005         	call	_BusyXLCD	;wreg free
  1260  00083A  0900               	iorlw	0
  1261  00083C  A4D8               	btfss	status,2,c
  1262  00083E  D7FB               	goto	l93
  1263  000840                     u30:
  1264                           
  1265                           ;openxlcd.c: 58: while(BusyXLCD());
  1266  000840  EC02  F005         	call	_BusyXLCD	;wreg free
  1267  000844  0900               	iorlw	0
  1268  000846  A4D8               	btfss	status,2,c
  1269  000848  D7FB               	goto	u30
  1270                           
  1271                           ;openxlcd.c: 59: WriteCmdXLCD(lcdtype);
  1272  00084A  5005               	movf	OpenXLCD@lcdtype,w,c
  1273  00084C  ECE3  F004         	call	_WriteCmdXLCD
  1274  000850  EC02  F005         	call	_BusyXLCD	;wreg free
  1275  000854  0900               	iorlw	0
  1276  000856  A4D8               	btfss	status,2,c
  1277  000858  D7FB               	goto	l99
  1278                           
  1279                           ;openxlcd.c: 63: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  1280  00085A  0E08               	movlw	8
  1281  00085C  ECE3  F004         	call	_WriteCmdXLCD
  1282  000860  EC02  F005         	call	_BusyXLCD	;wreg free
  1283  000864  0900               	iorlw	0
  1284  000866  A4D8               	btfss	status,2,c
  1285  000868  D7FB               	goto	l102
  1286                           
  1287                           ;openxlcd.c: 65: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  1288  00086A  0E0F               	movlw	15
  1289  00086C  ECE3  F004         	call	_WriteCmdXLCD
  1290  000870  EC02  F005         	call	_BusyXLCD	;wreg free
  1291  000874  0900               	iorlw	0
  1292  000876  A4D8               	btfss	status,2,c
  1293  000878  D7FB               	goto	l105
  1294                           
  1295                           ;openxlcd.c: 69: WriteCmdXLCD(0x01);
  1296  00087A  0E01               	movlw	1
  1297  00087C  ECE3  F004         	call	_WriteCmdXLCD
  1298  000880  EC02  F005         	call	_BusyXLCD	;wreg free
  1299  000884  0900               	iorlw	0
  1300  000886  A4D8               	btfss	status,2,c
  1301  000888  D7FB               	goto	l108
  1302                           
  1303                           ;openxlcd.c: 73: WriteCmdXLCD(0b00000100);
  1304  00088A  0E04               	movlw	4
  1305  00088C  ECE3  F004         	call	_WriteCmdXLCD
  1306  000890  EC02  F005         	call	_BusyXLCD	;wreg free
  1307  000894  0900               	iorlw	0
  1308  000896  A4D8               	btfss	status,2,c
  1309  000898  D7FB               	goto	l111
  1310                           
  1311                           ;openxlcd.c: 77: SetDDRamAddr(0x80);
  1312  00089A  0E80               	movlw	128
  1313  00089C  EC7A  F004         	call	_SetDDRamAddr
  1314  0008A0  0012               	return	
  1315  0008A2                     __end_of_OpenXLCD:
  1316                           	opt stack 0
  1317                           tblptru	equ	0xFF8
  1318                           tblptrh	equ	0xFF7
  1319                           tblptrl	equ	0xFF6
  1320                           tablat	equ	0xFF5
  1321                           prodh	equ	0xFF4
  1322                           prodl	equ	0xFF3
  1323                           wreg	equ	0xFE8
  1324                           indf2	equ	0xFDF
  1325                           postinc2	equ	0xFDE
  1326                           postdec2	equ	0xFDD
  1327                           fsr2h	equ	0xFDA
  1328                           fsr2l	equ	0xFD9
  1329                           status	equ	0xFD8
  1330                           
  1331 ;; *************** function _WriteCmdXLCD *****************
  1332 ;; Defined at:
  1333 ;;		line 13 in file "wcmdxlcd.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  cmd             1    wreg     unsigned char 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  cmd             1    0[COMRAM] unsigned char 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      void 
  1340 ;; Registers used:
  1341 ;;		wreg, status,2, status,0, cstack
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1347 ;;      Params:         0       0       0       0       0       0       0
  1348 ;;      Locals:         1       0       0       0       0       0       0
  1349 ;;      Temps:          0       0       0       0       0       0       0
  1350 ;;      Totals:         1       0       0       0       0       0       0
  1351 ;;Total ram usage:        1 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; Hardware stack levels required when called:    1
  1354 ;; This function calls:
  1355 ;;		_DelayFor18TCY
  1356 ;; This function is called by:
  1357 ;;		_init_XLCD
  1358 ;;		_OpenXLCD
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text8
  1363  0009C6                     __ptext8:
  1364                           	opt stack 0
  1365  0009C6                     _WriteCmdXLCD:
  1366                           	opt stack 28
  1367                           
  1368                           ;incstack = 0
  1369                           ;WriteCmdXLCD@cmd stored from wreg
  1370  0009C6  6E01               	movwf	WriteCmdXLCD@cmd,c
  1371                           
  1372                           ;wcmdxlcd.c: 32: TRISB &= 0xf0;
  1373  0009C8  0EF0               	movlw	240
  1374  0009CA  1693               	andwf	3987,f,c	;volatile
  1375                           
  1376                           ;wcmdxlcd.c: 33: PORTB &= 0xf0;
  1377  0009CC  0EF0               	movlw	240
  1378  0009CE  1681               	andwf	3969,f,c	;volatile
  1379                           
  1380                           ;wcmdxlcd.c: 34: PORTB |= (cmd>>4)&0x0f;
  1381  0009D0  3801               	swapf	WriteCmdXLCD@cmd,w,c
  1382  0009D2  0B0F               	andlw	15
  1383  0009D4  0B0F               	andlw	15
  1384  0009D6  1281               	iorwf	3969,f,c	;volatile
  1385                           
  1386                           ;wcmdxlcd.c: 36: LATAbits.LATA2 = 0;
  1387  0009D8  9489               	bcf	3977,2,c	;volatile
  1388                           
  1389                           ;wcmdxlcd.c: 37: LATAbits.LATA3 = 0;
  1390  0009DA  9689               	bcf	3977,3,c	;volatile
  1391                           
  1392                           ;wcmdxlcd.c: 38: DelayFor18TCY();
  1393  0009DC  EC5D  F005         	call	_DelayFor18TCY	;wreg free
  1394                           
  1395                           ;wcmdxlcd.c: 39: LATAbits.LATA1 = 1;
  1396  0009E0  8289               	bsf	3977,1,c	;volatile
  1397                           
  1398                           ;wcmdxlcd.c: 40: DelayFor18TCY();
  1399  0009E2  EC5D  F005         	call	_DelayFor18TCY	;wreg free
  1400                           
  1401                           ;wcmdxlcd.c: 41: LATAbits.LATA1 = 0;
  1402  0009E6  9289               	bcf	3977,1,c	;volatile
  1403                           
  1404                           ;wcmdxlcd.c: 46: PORTB &= 0xf0;
  1405  0009E8  0EF0               	movlw	240
  1406  0009EA  1681               	andwf	3969,f,c	;volatile
  1407                           
  1408                           ;wcmdxlcd.c: 47: PORTB |= cmd&0x0f;
  1409  0009EC  5001               	movf	WriteCmdXLCD@cmd,w,c
  1410  0009EE  0B0F               	andlw	15
  1411  0009F0  1281               	iorwf	3969,f,c	;volatile
  1412                           
  1413                           ;wcmdxlcd.c: 49: DelayFor18TCY();
  1414  0009F2  EC5D  F005         	call	_DelayFor18TCY	;wreg free
  1415                           
  1416                           ;wcmdxlcd.c: 50: LATAbits.LATA1 = 1;
  1417  0009F6  8289               	bsf	3977,1,c	;volatile
  1418                           
  1419                           ;wcmdxlcd.c: 51: DelayFor18TCY();
  1420  0009F8  EC5D  F005         	call	_DelayFor18TCY	;wreg free
  1421                           
  1422                           ;wcmdxlcd.c: 52: LATAbits.LATA1 = 0;
  1423  0009FC  9289               	bcf	3977,1,c	;volatile
  1424                           
  1425                           ;wcmdxlcd.c: 56: TRISB |= 0x0f;
  1426  0009FE  0E0F               	movlw	15
  1427  000A00  1293               	iorwf	3987,f,c	;volatile
  1428  000A02  0012               	return	
  1429  000A04                     __end_of_WriteCmdXLCD:
  1430                           	opt stack 0
  1431                           tblptru	equ	0xFF8
  1432                           tblptrh	equ	0xFF7
  1433                           tblptrl	equ	0xFF6
  1434                           tablat	equ	0xFF5
  1435                           prodh	equ	0xFF4
  1436                           prodl	equ	0xFF3
  1437                           wreg	equ	0xFE8
  1438                           indf2	equ	0xFDF
  1439                           postinc2	equ	0xFDE
  1440                           postdec2	equ	0xFDD
  1441                           fsr2h	equ	0xFDA
  1442                           fsr2l	equ	0xFD9
  1443                           status	equ	0xFD8
  1444                           
  1445 ;; *************** function _SetDDRamAddr *****************
  1446 ;; Defined at:
  1447 ;;		line 13 in file "setddram.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  DDaddr          1    wreg     unsigned char 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  DDaddr          1    3[COMRAM] unsigned char 
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, status,2, status,0, cstack
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1461 ;;      Params:         0       0       0       0       0       0       0
  1462 ;;      Locals:         1       0       0       0       0       0       0
  1463 ;;      Temps:          3       0       0       0       0       0       0
  1464 ;;      Totals:         4       0       0       0       0       0       0
  1465 ;;Total ram usage:        4 bytes
  1466 ;; Hardware stack levels used:    1
  1467 ;; Hardware stack levels required when called:    1
  1468 ;; This function calls:
  1469 ;;		_DelayFor18TCY
  1470 ;; This function is called by:
  1471 ;;		_OpenXLCD
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text9
  1476  0008F4                     __ptext9:
  1477                           	opt stack 0
  1478  0008F4                     _SetDDRamAddr:
  1479                           	opt stack 27
  1480                           
  1481                           ;incstack = 0
  1482                           ;SetDDRamAddr@DDaddr stored from wreg
  1483  0008F4  6E04               	movwf	SetDDRamAddr@DDaddr,c
  1484                           
  1485                           ;setddram.c: 32: TRISB &= 0xf0;
  1486  0008F6  0EF0               	movlw	240
  1487  0008F8  1693               	andwf	3987,f,c	;volatile
  1488                           
  1489                           ;setddram.c: 33: PORTB &= 0xf0;
  1490  0008FA  0EF0               	movlw	240
  1491  0008FC  1681               	andwf	3969,f,c	;volatile
  1492                           
  1493                           ;setddram.c: 34: PORTB |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  1494  0008FE  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1495  000900  6E01               	movwf	??_SetDDRamAddr& (0+255),c
  1496  000902  6A02               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  1497  000904  8E01               	bsf	??_SetDDRamAddr,7,c
  1498  000906  0E04               	movlw	4
  1499  000908  6E03               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  1500  00090A                     u25:
  1501  00090A  3402               	rlcf	??_SetDDRamAddr+1,w,c
  1502  00090C  3202               	rrcf	??_SetDDRamAddr+1,f,c
  1503  00090E  3201               	rrcf	??_SetDDRamAddr,f,c
  1504  000910  2E03               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  1505  000912  D7FB               	goto	u25
  1506  000914  5001               	movf	??_SetDDRamAddr,w,c
  1507  000916  0B0F               	andlw	15
  1508  000918  1281               	iorwf	3969,f,c	;volatile
  1509                           
  1510                           ;setddram.c: 36: LATAbits.LATA2 = 0;
  1511  00091A  9489               	bcf	3977,2,c	;volatile
  1512                           
  1513                           ;setddram.c: 37: LATAbits.LATA3 = 0;
  1514  00091C  9689               	bcf	3977,3,c	;volatile
  1515                           
  1516                           ;setddram.c: 38: DelayFor18TCY();
  1517  00091E  EC5D  F005         	call	_DelayFor18TCY	;wreg free
  1518                           
  1519                           ;setddram.c: 39: LATAbits.LATA1 = 1;
  1520  000922  8289               	bsf	3977,1,c	;volatile
  1521                           
  1522                           ;setddram.c: 40: DelayFor18TCY();
  1523  000924  EC5D  F005         	call	_DelayFor18TCY	;wreg free
  1524                           
  1525                           ;setddram.c: 41: LATAbits.LATA1 = 0;
  1526  000928  9289               	bcf	3977,1,c	;volatile
  1527                           
  1528                           ;setddram.c: 46: PORTB &= 0xf0;
  1529  00092A  0EF0               	movlw	240
  1530  00092C  1681               	andwf	3969,f,c	;volatile
  1531                           
  1532                           ;setddram.c: 47: PORTB |= (DDaddr&0x0f);
  1533  00092E  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1534  000930  0B0F               	andlw	15
  1535  000932  1281               	iorwf	3969,f,c	;volatile
  1536                           
  1537                           ;setddram.c: 49: DelayFor18TCY();
  1538  000934  EC5D  F005         	call	_DelayFor18TCY	;wreg free
  1539                           
  1540                           ;setddram.c: 50: LATAbits.LATA1 = 1;
  1541  000938  8289               	bsf	3977,1,c	;volatile
  1542                           
  1543                           ;setddram.c: 51: DelayFor18TCY();
  1544  00093A  EC5D  F005         	call	_DelayFor18TCY	;wreg free
  1545                           
  1546                           ;setddram.c: 52: LATAbits.LATA1 = 0;
  1547  00093E  9289               	bcf	3977,1,c	;volatile
  1548                           
  1549                           ;setddram.c: 56: TRISB |= 0x0f;
  1550  000940  0E0F               	movlw	15
  1551  000942  1293               	iorwf	3987,f,c	;volatile
  1552  000944  0012               	return	
  1553  000946                     __end_of_SetDDRamAddr:
  1554                           	opt stack 0
  1555                           tblptru	equ	0xFF8
  1556                           tblptrh	equ	0xFF7
  1557                           tblptrl	equ	0xFF6
  1558                           tablat	equ	0xFF5
  1559                           prodh	equ	0xFF4
  1560                           prodl	equ	0xFF3
  1561                           wreg	equ	0xFE8
  1562                           indf2	equ	0xFDF
  1563                           postinc2	equ	0xFDE
  1564                           postdec2	equ	0xFDD
  1565                           fsr2h	equ	0xFDA
  1566                           fsr2l	equ	0xFD9
  1567                           status	equ	0xFD8
  1568                           
  1569 ;; *************** function _DelayPORXLCD *****************
  1570 ;; Defined at:
  1571 ;;		line 44 in file "main.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;		None
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;		None
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1585 ;;      Params:         0       0       0       0       0       0       0
  1586 ;;      Locals:         0       0       0       0       0       0       0
  1587 ;;      Temps:          1       0       0       0       0       0       0
  1588 ;;      Totals:         1       0       0       0       0       0       0
  1589 ;;Total ram usage:        1 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_OpenXLCD
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text10
  1599  000AA0                     __ptext10:
  1600                           	opt stack 0
  1601  000AA0                     _DelayPORXLCD:
  1602                           	opt stack 28
  1603                           
  1604                           ;main.c: 46: _delay((unsigned long)((15)*(4000000/4000.0)));
  1605                           
  1606                           ;incstack = 0
  1607  000AA0  0E14               	movlw	20
  1608  000AA2  6E01               	movwf	??_DelayPORXLCD& (0+255),c
  1609  000AA4  0E7A               	movlw	122
  1610  000AA6                     u607:
  1611  000AA6  2EE8               	decfsz	wreg,f,c
  1612  000AA8  D7FE               	bra	u607
  1613  000AAA  2E01               	decfsz	??_DelayPORXLCD& (0+255),f,c
  1614  000AAC  D7FC               	bra	u607
  1615  000AAE  0012               	return		;funcret
  1616  000AB0                     __end_of_DelayPORXLCD:
  1617                           	opt stack 0
  1618                           tblptru	equ	0xFF8
  1619                           tblptrh	equ	0xFF7
  1620                           tblptrl	equ	0xFF6
  1621                           tablat	equ	0xFF5
  1622                           prodh	equ	0xFF4
  1623                           prodl	equ	0xFF3
  1624                           wreg	equ	0xFE8
  1625                           indf2	equ	0xFDF
  1626                           postinc2	equ	0xFDE
  1627                           postdec2	equ	0xFDD
  1628                           fsr2h	equ	0xFDA
  1629                           fsr2l	equ	0xFD9
  1630                           status	equ	0xFD8
  1631                           
  1632 ;; *************** function _Delay10KTCYx *****************
  1633 ;; Defined at:
  1634 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\pic18\d10ktcyx.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  unit            1    wreg     unsigned char 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  unit            1    1[COMRAM] unsigned char 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      void 
  1641 ;; Registers used:
  1642 ;;		wreg
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1648 ;;      Params:         0       0       0       0       0       0       0
  1649 ;;      Locals:         1       0       0       0       0       0       0
  1650 ;;      Temps:          1       0       0       0       0       0       0
  1651 ;;      Totals:         2       0       0       0       0       0       0
  1652 ;;Total ram usage:        2 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_OpenXLCD
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text11
  1662  000A8A                     __ptext11:
  1663                           	opt stack 0
  1664  000A8A                     _Delay10KTCYx:
  1665                           	opt stack 28
  1666                           
  1667                           ;incstack = 0
  1668                           ;Delay10KTCYx@unit stored from wreg
  1669  000A8A  6E02               	movwf	Delay10KTCYx@unit,c
  1670  000A8C                     l485:
  1671  000A8C  0E0D               	movlw	13
  1672  000A8E  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  1673  000A90  0EFC               	movlw	252
  1674  000A92                     u617:
  1675  000A92  2EE8               	decfsz	wreg,f,c
  1676  000A94  D7FE               	bra	u617
  1677  000A96  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1678  000A98  D7FC               	bra	u617
  1679  000A9A  2E02               	decfsz	Delay10KTCYx@unit,f,c
  1680  000A9C  D7F7               	goto	l485
  1681  000A9E  0012               	return	
  1682  000AA0                     __end_of_Delay10KTCYx:
  1683                           	opt stack 0
  1684                           tblptru	equ	0xFF8
  1685                           tblptrh	equ	0xFF7
  1686                           tblptrl	equ	0xFF6
  1687                           tablat	equ	0xFF5
  1688                           prodh	equ	0xFF4
  1689                           prodl	equ	0xFF3
  1690                           wreg	equ	0xFE8
  1691                           indf2	equ	0xFDF
  1692                           postinc2	equ	0xFDE
  1693                           postdec2	equ	0xFDD
  1694                           fsr2h	equ	0xFDA
  1695                           fsr2l	equ	0xFD9
  1696                           status	equ	0xFD8
  1697                           
  1698 ;; *************** function _BusyXLCD *****************
  1699 ;; Defined at:
  1700 ;;		line 11 in file "busyxlcd.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      unsigned char 
  1707 ;; Registers used:
  1708 ;;		wreg, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1714 ;;      Params:         0       0       0       0       0       0       0
  1715 ;;      Locals:         0       0       0       0       0       0       0
  1716 ;;      Temps:          0       0       0       0       0       0       0
  1717 ;;      Totals:         0       0       0       0       0       0       0
  1718 ;;Total ram usage:        0 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    1
  1721 ;; This function calls:
  1722 ;;		_DelayFor18TCY
  1723 ;; This function is called by:
  1724 ;;		_main
  1725 ;;		_init_XLCD
  1726 ;;		_OpenXLCD
  1727 ;;		_putrsXLCD
  1728 ;;		_putsXLCD
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text12
  1733  000A04                     __ptext12:
  1734                           	opt stack 0
  1735  000A04                     _BusyXLCD:
  1736                           	opt stack 28
  1737                           
  1738                           ;busyxlcd.c: 13: LATAbits.LATA2 = 1;
  1739                           
  1740                           ;incstack = 0
  1741  000A04  8489               	bsf	3977,2,c	;volatile
  1742                           
  1743                           ;busyxlcd.c: 14: LATAbits.LATA3 = 0;
  1744  000A06  9689               	bcf	3977,3,c	;volatile
  1745                           
  1746                           ;busyxlcd.c: 15: DelayFor18TCY();
  1747  000A08  EC5D  F005         	call	_DelayFor18TCY	;wreg free
  1748                           
  1749                           ;busyxlcd.c: 16: LATAbits.LATA1 = 1;
  1750  000A0C  8289               	bsf	3977,1,c	;volatile
  1751                           
  1752                           ;busyxlcd.c: 17: DelayFor18TCY();
  1753  000A0E  EC5D  F005         	call	_DelayFor18TCY	;wreg free
  1754                           
  1755                           ;busyxlcd.c: 35: if(PORTB&0x08)
  1756  000A12  A681               	btfss	3969,3,c	;volatile
  1757  000A14  D00A               	goto	l69
  1758                           
  1759                           ;busyxlcd.c: 37: {
  1760                           ;busyxlcd.c: 38: LATAbits.LATA1 = 0;
  1761  000A16  9289               	bcf	3977,1,c	;volatile
  1762                           
  1763                           ;busyxlcd.c: 39: DelayFor18TCY();
  1764  000A18  EC5D  F005         	call	_DelayFor18TCY	;wreg free
  1765                           
  1766                           ;busyxlcd.c: 40: LATAbits.LATA1 = 1;
  1767  000A1C  8289               	bsf	3977,1,c	;volatile
  1768                           
  1769                           ;busyxlcd.c: 41: DelayFor18TCY();
  1770  000A1E  EC5D  F005         	call	_DelayFor18TCY	;wreg free
  1771                           
  1772                           ;busyxlcd.c: 42: LATAbits.LATA1 = 0;
  1773  000A22  9289               	bcf	3977,1,c	;volatile
  1774                           
  1775                           ;busyxlcd.c: 43: LATAbits.LATA2 = 0;
  1776  000A24  9489               	bcf	3977,2,c	;volatile
  1777                           
  1778                           ;busyxlcd.c: 44: return 1;
  1779  000A26  0E01               	movlw	1
  1780                           
  1781                           ;busyxlcd.c: 45: }
  1782  000A28  0012               	return	
  1783  000A2A                     l69:
  1784                           
  1785                           ;busyxlcd.c: 46: else
  1786                           ;busyxlcd.c: 47: {
  1787                           ;busyxlcd.c: 48: LATAbits.LATA1 = 0;
  1788  000A2A  9289               	bcf	3977,1,c	;volatile
  1789                           
  1790                           ;busyxlcd.c: 49: DelayFor18TCY();
  1791  000A2C  EC5D  F005         	call	_DelayFor18TCY	;wreg free
  1792                           
  1793                           ;busyxlcd.c: 50: LATAbits.LATA1 = 1;
  1794  000A30  8289               	bsf	3977,1,c	;volatile
  1795                           
  1796                           ;busyxlcd.c: 51: DelayFor18TCY();
  1797  000A32  EC5D  F005         	call	_DelayFor18TCY	;wreg free
  1798                           
  1799                           ;busyxlcd.c: 52: LATAbits.LATA1 = 0;
  1800  000A36  9289               	bcf	3977,1,c	;volatile
  1801                           
  1802                           ;busyxlcd.c: 53: LATAbits.LATA2 = 0;
  1803  000A38  9489               	bcf	3977,2,c	;volatile
  1804                           
  1805                           ;busyxlcd.c: 54: return 0;
  1806  000A3A  0E00               	movlw	0
  1807  000A3C  0012               	return	
  1808  000A3E                     __end_of_BusyXLCD:
  1809                           	opt stack 0
  1810                           tblptru	equ	0xFF8
  1811                           tblptrh	equ	0xFF7
  1812                           tblptrl	equ	0xFF6
  1813                           tablat	equ	0xFF5
  1814                           prodh	equ	0xFF4
  1815                           prodl	equ	0xFF3
  1816                           wreg	equ	0xFE8
  1817                           indf2	equ	0xFDF
  1818                           postinc2	equ	0xFDE
  1819                           postdec2	equ	0xFDD
  1820                           fsr2h	equ	0xFDA
  1821                           fsr2l	equ	0xFD9
  1822                           status	equ	0xFD8
  1823                           
  1824 ;; *************** function _DelayFor18TCY *****************
  1825 ;; Defined at:
  1826 ;;		line 39 in file "main.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1840 ;;      Params:         0       0       0       0       0       0       0
  1841 ;;      Locals:         0       0       0       0       0       0       0
  1842 ;;      Temps:          0       0       0       0       0       0       0
  1843 ;;      Totals:         0       0       0       0       0       0       0
  1844 ;;Total ram usage:        0 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; This function calls:
  1847 ;;		Nothing
  1848 ;; This function is called by:
  1849 ;;		_BusyXLCD
  1850 ;;		_SetDDRamAddr
  1851 ;;		_WriteCmdXLCD
  1852 ;;		_WriteDataXLCD
  1853 ;;		_ReadAddrXLCD
  1854 ;;		_ReadDataXLCD
  1855 ;;		_SetCGRamAddr
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text13
  1860  000ABA                     __ptext13:
  1861                           	opt stack 0
  1862  000ABA                     _DelayFor18TCY:
  1863                           	opt stack 28
  1864                           
  1865                           ;incstack = 0
  1866  000ABA  0E06               	movlw	6
  1867  000ABC                     u627:
  1868  000ABC  2EE8               	decfsz	wreg,f,c
  1869  000ABE  D7FE               	bra	u627
  1870  000AC0  D000               	nop2	
  1871  000AC2  0012               	return	
  1872  000AC4                     __end_of_DelayFor18TCY:
  1873                           	opt stack 0
  1874                           tblptru	equ	0xFF8
  1875                           tblptrh	equ	0xFF7
  1876                           tblptrl	equ	0xFF6
  1877                           tablat	equ	0xFF5
  1878                           prodh	equ	0xFF4
  1879                           prodl	equ	0xFF3
  1880                           wreg	equ	0xFE8
  1881                           indf2	equ	0xFDF
  1882                           postinc2	equ	0xFDE
  1883                           postdec2	equ	0xFDD
  1884                           fsr2h	equ	0xFDA
  1885                           fsr2l	equ	0xFD9
  1886                           status	equ	0xFD8
  1887                           tblptru	equ	0xFF8
  1888                           tblptrh	equ	0xFF7
  1889                           tblptrl	equ	0xFF6
  1890                           tablat	equ	0xFF5
  1891                           prodh	equ	0xFF4
  1892                           prodl	equ	0xFF3
  1893                           wreg	equ	0xFE8
  1894                           indf2	equ	0xFDF
  1895                           postinc2	equ	0xFDE
  1896                           postdec2	equ	0xFDD
  1897                           fsr2h	equ	0xFDA
  1898                           fsr2l	equ	0xFD9
  1899                           status	equ	0xFD8
  1900                           
  1901                           	psect	rparam
  1902  0000                     tblptru	equ	0xFF8
  1903                           tblptrh	equ	0xFF7
  1904                           tblptrl	equ	0xFF6
  1905                           tablat	equ	0xFF5
  1906                           prodh	equ	0xFF4
  1907                           prodl	equ	0xFF3
  1908                           wreg	equ	0xFE8
  1909                           indf2	equ	0xFDF
  1910                           postinc2	equ	0xFDE
  1911                           postdec2	equ	0xFDD
  1912                           fsr2h	equ	0xFDA
  1913                           fsr2l	equ	0xFD9
  1914                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     42      42
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(COMRAM[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 10
		 -> main@buffer(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _putrsXLCD->_WriteDataXLCD
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    1692
                                             26 COMRAM    16    16      0
                           _BusyXLCD
                          _init_XLCD
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    17      6    1254
                                             12 COMRAM    14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            2     0      2     151
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     120
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0      90
                                              4 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      30
                                              0 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyXLCD
     _DelayFor18TCY
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _Delay10KTCYx
       _DelayPORXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _putrsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     2A      2A       1       33.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Oct 27 15:14:55 2017

                     l31 076C                       l40 07CC                       l42 07F4  
                     l34 07A8                       l37 07B6                       l58 0A72  
                     l69 0A2A                       l93 0836                       l99 0850  
                     u30 0840                       u25 090A              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_OSC$XT 000000              __CFG_LVP$ON 000000  
                    l102 0860                      l111 0890                      l120 0A5C  
                    l105 0870                      l121 0A40                      l108 0880  
                    l280 06D8                      l272 065E                      l265 061A  
                    l274 0686                      l266 0634                      l278 06D2  
                    l279 072A                      l704 095C                      l705 0954  
                    l708 0974                      l485 0A8C                      l709 097E  
                    l694 08C0                      l695 08B8                      l698 08E0  
                    l699 08EA             __CFG_CPB$OFF 000000                      u410 0960  
                    u500 074A                      u530 0776             __CFG_CPD$OFF 000000  
                    u380 08C4                      u540 078C                      u470 06B6  
                    u607 0AA6                      u617 0A92                      u490 0732  
                    u538 0778                      u627 0ABC                      u597 07E8  
  __size_of_WriteCmdXLCD 003E                      wreg 000FE8             __CFG_WDT$OFF 000000  
                   l1408 068A                     STR_1 060B                     _LATA 000F89  
                   _LATB 000F8A             __CFG_PWRT$ON 000000                     _main 0758  
                   fsr2h 000FDA                     indf2 000FDF                     fsr2l 000FD9  
 __size_of_WriteDataXLCD 003E                     prodh 000FF4                     prodl 000FF3  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000             _WriteCmdXLCD 09C6            ?_SetDDRamAddr 0001  
                  ?_main 0001          __end_of___lwdiv 08F4          __end_of___lwmod 0988  
                  _PORTB 000F81                    _TRISB 000F93                    _TRISD 000F95  
  __size_of_Delay10KTCYx 0016            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000          __end_of_dpowers 060B  
         __CFG_BOREN$OFF 000000                    tablat 000FF5                    status 000FD8  
        __end_of_sprintf 0758          __initialization 0AB0             __end_of_main 07FE  
       __end_of_BusyXLCD 0A3E             _Delay10KTCYx 0A8A    __size_of_DelayPORXLCD 0010  
         ??_SetDDRamAddr 0001         __end_of_OpenXLCD 08A2                   ??_main 001B  
          __activetblptr 000002            _WriteDataXLCD 0988                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3             _DelayPORXLCD 0AA0           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000                ??___lwdiv 0005                ??___lwmod 000C  
         ?_WriteDataXLCD 0001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_sprintf 0013  
             __accesstop 0080  __end_of__initialization 0AB0          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001   __size_of_DelayFor18TCY 000A  
              ?_BusyXLCD 0001          WriteCmdXLCD@cmd 0001     __end_of_SetDDRamAddr 0946  
     __size_of_init_XLCD 001E                ?_OpenXLCD 0001        WriteDataXLCD@data 0001  
        ??_WriteDataXLCD 0001       __size_of_putrsXLCD 002E               ??_BusyXLCD 0001  
             ??_OpenXLCD 0005                  __Hparam 0000                  __Lparam 0000  
          _DelayFor18TCY 0ABA                  ___lwdiv 08A2                  ___lwmod 0946  
           __psmallconst 0600                  __pcinit 0AB0          putrsXLCD@buffer 0002  
                __ramtop 0600                  __ptext0 0758                  __ptext1 0610  
                __ptext2 0946                  __ptext3 08A2                  __ptext4 0A3E  
                __ptext5 0988                  __ptext6 0A6C                  __ptext7 07FE  
                __ptext8 09C6                  __ptext9 08F4        __end_of_init_XLCD 0A8A  
                _dpowers 0601                  _sprintf 0610     end_of_initialization 0AB0  
          __Lmediumconst 0000           main@testbuffer 0027           ?_DelayFor18TCY 0001  
                postdec2 000FDD                  postinc2 000FDE        __end_of_putrsXLCD 0A6C  
              _PORTBbits 000F81                _TRISAbits 000F92                _TRISBbits 000F93  
  __size_of_SetDDRamAddr 0052               main@buffer 001D             _SetDDRamAddr 08F4  
     SetDDRamAddr@DDaddr 0004      start_initialization 0AB0        __size_of_BusyXLCD 003A  
        ??_DelayFor18TCY 0001        __size_of_OpenXLCD 00A4            ?_WriteCmdXLCD 0001  
       __CFG_LPT1OSC$OFF 000000              sprintf@flag 0016              sprintf@prec 0017  
       ___lwdiv@dividend 0001        __CFG_CCP2MX$PORTC 000000           ??_WriteCmdXLCD 0001  
          ?_Delay10KTCYx 0001                 ?___lwdiv 0001                 ?___lwmod 0008  
  __end_of_WriteDataXLCD 09C6              __smallconst 0600                _init_XLCD 0A6C  
       ___lwdiv@quotient 0005                 ?_sprintf 000D                 _LATAbits 000F89  
               _PIE1bits 000F9D            ?_DelayPORXLCD 0001                 _PIR1bits 000F9E  
        OpenXLCD@lcdtype 0005         __CFG_WDTPS$32768 000000           ??_Delay10KTCYx 0001  
             _ADCON0bits 000FC2                _putrsXLCD 0A3E         Delay10KTCYx@unit 0002  
             ?_init_XLCD 0001                 _BusyXLCD 0A04           ??_DelayPORXLCD 0001  
               _OpenXLCD 07FE                 __Hrparam 0000         main@tempvariable 0029  
               __Lrparam 0000         __size_of___lwdiv 0052         __size_of___lwmod 0042  
             sprintf@val 0018               ?_putrsXLCD 0002          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                 __ptext10 0AA0                 __ptext11 0A8A  
               __ptext12 0A04                 __ptext13 0ABA     __end_of_WriteCmdXLCD 0A04  
       __size_of_sprintf 0148            __size_of_main 00A6               _INTCONbits 000FF2  
            ??_init_XLCD 0006     __end_of_Delay10KTCYx 0AA0                sprintf@ap 0014  
              sprintf@sp 000D         ___lwmod@dividend 0008    __end_of_DelayFor18TCY 0AC4  
               sprintf@c 001A                 sprintf@f 000F     __end_of_DelayPORXLCD 0AB0  
            ??_putrsXLCD 0004          ___lwmod@divisor 000A          ___lwmod@counter 000C  
