

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Oct 30 14:22:21 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	text10,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20  0000                     
    21                           ; Version 1.44
    22                           ; Generated 14/09/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4520 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _ADRESL	set	4035
    56  0000                     _ADRESH	set	4036
    57  0000                     _INTCONbits	set	4082
    58  0000                     _PIR1bits	set	3998
    59  0000                     _ADCON1	set	4033
    60  0000                     _ADCON2	set	4032
    61  0000                     _ADCON0	set	4034
    62  0000                     _PIE1bits	set	3997
    63  0000                     _ADCON0bits	set	4034
    64  0000                     _TRISAbits	set	3986
    65  0000                     _TRISB	set	3987
    66  0000                     _PORTB	set	3969
    67  0000                     _LATAbits	set	3977
    68  0000                     _PORTDbits	set	3971
    69  0000                     _TRISDbits	set	3989
    70  0000                     _TRISD	set	3989
    71  0000                     _LATB	set	3978
    72  0000                     _LATA	set	3977
    73                           
    74                           ; #config settings
    75  0000                     
    76                           	psect	cinit
    77  007BC0                     __pcinit:
    78                           	opt stack 0
    79  007BC0                     start_initialization:
    80                           	opt stack 0
    81  007BC0                     __initialization:
    82                           	opt stack 0
    83  007BC0                     end_of_initialization:
    84                           	opt stack 0
    85  007BC0                     __end_of__initialization:
    86                           	opt stack 0
    87  007BC0  0100               	movlb	0
    88  007BC2  EFF7  F03E         	goto	_main	;jump to C main() function
    89                           
    90                           	psect	cstackCOMRAM
    91  000001                     __pcstackCOMRAM:
    92                           	opt stack 0
    93  000001                     ??_Delay10KTCYx:
    94  000001                     ??_SetDDRamAddr:
    95  000001                     ??_DelayPORXLCD:
    96  000001                     WriteCmdXLCD@cmd:
    97                           	opt stack 0
    98  000001                     WriteDataXLCD@data:
    99                           	opt stack 0
   100                           
   101                           ; 1 bytes @ 0x0
   102  000001                     	ds	1
   103  000002                     Delay10KTCYx@unit:
   104                           	opt stack 0
   105  000002                     putrsXLCD@buffer:
   106                           	opt stack 0
   107                           
   108                           ; 2 bytes @ 0x1
   109  000002                     	ds	2
   110  000004                     SetDDRamAddr@DDaddr:
   111                           	opt stack 0
   112                           
   113                           ; 1 bytes @ 0x3
   114  000004                     	ds	1
   115  000005                     OpenXLCD@lcdtype:
   116                           	opt stack 0
   117                           
   118                           ; 1 bytes @ 0x4
   119  000005                     	ds	1
   120  000006                     ??_main:
   121                           
   122                           ; 1 bytes @ 0x5
   123  000006                     	ds	2
   124  000008                     main@recorded:
   125                           	opt stack 0
   126                           
   127                           ; 2 bytes @ 0x7
   128  000008                     	ds	2
   129  00000A                     main@startcount:
   130                           	opt stack 0
   131                           
   132                           ; 2 bytes @ 0x9
   133  00000A                     	ds	2
   134  00000C                     main@count:
   135                           	opt stack 0
   136                           
   137                           ; 4 bytes @ 0xB
   138  00000C                     	ds	4
   139  000010                     main@rd0end:
   140                           	opt stack 0
   141                           
   142                           ; 2 bytes @ 0xF
   143  000010                     	ds	2
   144  000012                     main@rd1end:
   145                           	opt stack 0
   146                           
   147                           ; 2 bytes @ 0x11
   148  000012                     	ds	2
   149  000014                     main@rd2end:
   150                           	opt stack 0
   151                           
   152                           ; 2 bytes @ 0x13
   153  000014                     	ds	2
   154  000016                     main@order:
   155                           	opt stack 0
   156                           
   157                           ; 3 bytes @ 0x15
   158  000016                     	ds	3
   159                           
   160 ;;
   161 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   162 ;;
   163 ;; *************** function _main *****************
   164 ;; Defined at:
   165 ;;		line 6 in file "main.c"
   166 ;; Parameters:    Size  Location     Type
   167 ;;		None
   168 ;; Auto vars:     Size  Location     Type
   169 ;;  count           4   11[COMRAM] unsigned long 
   170 ;;  order           3   21[COMRAM] unsigned char [3]
   171 ;;  rd2end          2   19[COMRAM] int 
   172 ;;  rd1end          2   17[COMRAM] int 
   173 ;;  rd0end          2   15[COMRAM] int 
   174 ;;  startcount      2    9[COMRAM] int 
   175 ;;  recorded        2    7[COMRAM] int 
   176 ;; Return value:  Size  Location     Type
   177 ;;                  1    wreg      void 
   178 ;; Registers used:
   179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   180 ;; Tracked objects:
   181 ;;		On entry : 0/0
   182 ;;		On exit  : 0/0
   183 ;;		Unchanged: 0/0
   184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   185 ;;      Params:         0       0       0       0       0       0       0
   186 ;;      Locals:        17       0       0       0       0       0       0
   187 ;;      Temps:          2       0       0       0       0       0       0
   188 ;;      Totals:        19       0       0       0       0       0       0
   189 ;;Total ram usage:       19 bytes
   190 ;; Hardware stack levels required when called:    4
   191 ;; This function calls:
   192 ;;		_init_XLCD
   193 ;;		_putrsXLCD
   194 ;; This function is called by:
   195 ;;		Startup code after reset
   196 ;; This function uses a non-reentrant model
   197 ;;
   198                           
   199                           	psect	text0
   200  007DEE                     __ptext0:
   201                           	opt stack 0
   202  007DEE                     _main:
   203                           	opt stack 27
   204                           
   205                           ;main.c: 8: LATA = 0xFF;
   206                           
   207                           ;incstack = 0
   208  007DEE  6889               	setf	3977,c	;volatile
   209                           
   210                           ;main.c: 9: LATB = 0xFF;
   211  007DF0  688A               	setf	3978,c	;volatile
   212                           
   213                           ;main.c: 10: TRISD = 0;
   214  007DF2  0E00               	movlw	0
   215  007DF4  6E95               	movwf	3989,c	;volatile
   216                           
   217                           ;main.c: 11: TRISDbits.RD0 = 1;
   218  007DF6  8095               	bsf	3989,0,c	;volatile
   219                           
   220                           ;main.c: 12: TRISDbits.RD1 = 1;
   221  007DF8  8295               	bsf	3989,1,c	;volatile
   222                           
   223                           ;main.c: 13: TRISDbits.RD2 = 1;
   224  007DFA  8495               	bsf	3989,2,c	;volatile
   225                           
   226                           ;main.c: 14: int recorded = 0;
   227  007DFC  0E00               	movlw	0
   228  007DFE  6E09               	movwf	main@recorded+1,c
   229  007E00  0E00               	movlw	0
   230  007E02  6E08               	movwf	main@recorded,c
   231                           
   232                           ;main.c: 16: init_XLCD();
   233  007E04  ECFB  F03D         	call	_init_XLCD	;wreg free
   234                           
   235                           ;main.c: 17: int startcount = 0;
   236  007E08  0E00               	movlw	0
   237  007E0A  6E0B               	movwf	main@startcount+1,c
   238  007E0C  0E00               	movlw	0
   239  007E0E  6E0A               	movwf	main@startcount,c
   240                           
   241                           ;main.c: 18: char order[3];
   242                           ;main.c: 19: int rd0end = 1;
   243  007E10  0E00               	movlw	0
   244  007E12  6E11               	movwf	main@rd0end+1,c
   245  007E14  0E01               	movlw	1
   246  007E16  6E10               	movwf	main@rd0end,c
   247                           
   248                           ;main.c: 20: int rd1end = 1;
   249  007E18  0E00               	movlw	0
   250  007E1A  6E13               	movwf	main@rd1end+1,c
   251  007E1C  0E01               	movlw	1
   252  007E1E  6E12               	movwf	main@rd1end,c
   253                           
   254                           ;main.c: 21: int rd2end = 1;
   255  007E20  0E00               	movlw	0
   256  007E22  6E15               	movwf	main@rd2end+1,c
   257  007E24  0E01               	movlw	1
   258  007E26  6E14               	movwf	main@rd2end,c
   259                           
   260                           ;main.c: 22: unsigned long count = 0;
   261  007E28  0E00               	movlw	0
   262  007E2A  6E0C               	movwf	main@count,c
   263  007E2C  0E00               	movlw	0
   264  007E2E  6E0D               	movwf	main@count+1,c
   265  007E30  0E00               	movlw	0
   266  007E32  6E0E               	movwf	main@count+2,c
   267  007E34  0E00               	movlw	0
   268  007E36  6E0F               	movwf	main@count+3,c
   269  007E38                     
   270                           ;main.c: 24: ++count;
   271  007E38  0E01               	movlw	1
   272  007E3A  260C               	addwf	main@count,f,c
   273  007E3C  0E00               	movlw	0
   274  007E3E  220D               	addwfc	main@count+1,f,c
   275  007E40  220E               	addwfc	main@count+2,f,c
   276  007E42  220F               	addwfc	main@count+3,f,c
   277                           
   278                           ;main.c: 25: if(count == 100000) {
   279  007E44  0EA0               	movlw	160
   280  007E46  180C               	xorwf	main@count,w,c
   281  007E48  E123               	bnz	l1379
   282  007E4A  0E86               	movlw	134
   283  007E4C  180D               	xorwf	main@count+1,w,c
   284  007E4E  E120               	bnz	l1379
   285  007E50  040E               	decf	main@count+2,w,c
   286  007E52  100F               	iorwf	main@count+3,w,c
   287  007E54  A4D8               	btfss	status,2,c
   288  007E56  D01C               	goto	l28
   289                           
   290                           ;main.c: 27: init_XLCD();
   291  007E58  ECFB  F03D         	call	_init_XLCD	;wreg free
   292                           
   293                           ;main.c: 28: order[0] = (0);
   294  007E5C  0E00               	movlw	0
   295  007E5E  6E16               	movwf	main@order,c
   296                           
   297                           ;main.c: 29: order[1] = (0);
   298  007E60  0E00               	movlw	0
   299  007E62  6E17               	movwf	main@order+1,c
   300                           
   301                           ;main.c: 30: order[2] = (0);
   302  007E64  0E00               	movlw	0
   303  007E66  6E18               	movwf	main@order+2,c
   304                           
   305                           ;main.c: 31: rd0end = 1;
   306  007E68  0E00               	movlw	0
   307  007E6A  6E11               	movwf	main@rd0end+1,c
   308  007E6C  0E01               	movlw	1
   309  007E6E  6E10               	movwf	main@rd0end,c
   310                           
   311                           ;main.c: 32: rd1end = 1;
   312  007E70  0E00               	movlw	0
   313  007E72  6E13               	movwf	main@rd1end+1,c
   314  007E74  0E01               	movlw	1
   315  007E76  6E12               	movwf	main@rd1end,c
   316                           
   317                           ;main.c: 33: rd2end = 1;
   318  007E78  0E00               	movlw	0
   319  007E7A  6E15               	movwf	main@rd2end+1,c
   320  007E7C  0E01               	movlw	1
   321  007E7E  6E14               	movwf	main@rd2end,c
   322                           
   323                           ;main.c: 34: count = 0;
   324  007E80  0E00               	movlw	0
   325  007E82  6E0C               	movwf	main@count,c
   326  007E84  0E00               	movlw	0
   327  007E86  6E0D               	movwf	main@count+1,c
   328  007E88  0E00               	movlw	0
   329  007E8A  6E0E               	movwf	main@count+2,c
   330  007E8C  0E00               	movlw	0
   331  007E8E  6E0F               	movwf	main@count+3,c
   332  007E90                     l28:
   333  007E90                     l1379:
   334                           
   335                           ;main.c: 35: }
   336                           ;main.c: 38: if(PORTDbits.RD0 == 1 && rd0end == 1) {
   337  007E90  A083               	btfss	3971,0,c	;volatile
   338  007E92  D03B               	goto	l33
   339  007E94  0410               	decf	main@rd0end,w,c
   340  007E96  1011               	iorwf	main@rd0end+1,w,c
   341  007E98  A4D8               	btfss	status,2,c
   342  007E9A  D037               	goto	l33
   343                           
   344                           ;main.c: 39: rd0end = 0;
   345  007E9C  0E00               	movlw	0
   346  007E9E  6E11               	movwf	main@rd0end+1,c
   347  007EA0  0E00               	movlw	0
   348  007EA2  6E10               	movwf	main@rd0end,c
   349                           
   350                           ;main.c: 40: if(order[0] == (0)) {
   351  007EA4  5016               	movf	main@order,w,c
   352  007EA6  A4D8               	btfss	status,2,c
   353  007EA8  D003               	goto	l30
   354                           
   355                           ;main.c: 41: order[0] = 'M';
   356  007EAA  0E4D               	movlw	77
   357  007EAC  6E16               	movwf	main@order,c
   358                           
   359                           ;main.c: 42: }
   360  007EAE  D02D               	goto	l33
   361  007EB0                     l30:
   362                           
   363                           ;main.c: 43: else if(order[1] == (0)) {
   364  007EB0  5017               	movf	main@order+1,w,c
   365  007EB2  A4D8               	btfss	status,2,c
   366  007EB4  D003               	goto	l32
   367                           
   368                           ;main.c: 44: order[1] = 'M';
   369  007EB6  0E4D               	movlw	77
   370  007EB8  6E17               	movwf	main@order+1,c
   371                           
   372                           ;main.c: 45: }
   373  007EBA  D027               	goto	l33
   374  007EBC                     l32:
   375                           
   376                           ;main.c: 46: else {
   377                           ;main.c: 47: order[2] = 'M';
   378  007EBC  0E4D               	movlw	77
   379  007EBE  6E18               	movwf	main@order+2,c
   380                           
   381                           ;main.c: 48: init_XLCD();
   382  007EC0  ECFB  F03D         	call	_init_XLCD	;wreg free
   383                           
   384                           ;main.c: 49: putrsXLCD(order);
   385  007EC4  0E16               	movlw	low main@order
   386  007EC6  6E02               	movwf	putrsXLCD@buffer,c
   387  007EC8  0E00               	movlw	high main@order
   388  007ECA  6E03               	movwf	putrsXLCD@buffer+1,c
   389  007ECC  EC0A  F03E         	call	_putrsXLCD	;wreg free
   390                           
   391                           ;main.c: 50: order[0] = (0);
   392  007ED0  0E00               	movlw	0
   393  007ED2  6E16               	movwf	main@order,c
   394                           
   395                           ;main.c: 51: order[1] = (0);
   396  007ED4  0E00               	movlw	0
   397  007ED6  6E17               	movwf	main@order+1,c
   398                           
   399                           ;main.c: 52: order[2] = (0);
   400  007ED8  0E00               	movlw	0
   401  007EDA  6E18               	movwf	main@order+2,c
   402                           
   403                           ;main.c: 53: rd0end = 1;
   404  007EDC  0E00               	movlw	0
   405  007EDE  6E11               	movwf	main@rd0end+1,c
   406  007EE0  0E01               	movlw	1
   407  007EE2  6E10               	movwf	main@rd0end,c
   408                           
   409                           ;main.c: 54: rd1end = 1;
   410  007EE4  0E00               	movlw	0
   411  007EE6  6E13               	movwf	main@rd1end+1,c
   412  007EE8  0E01               	movlw	1
   413  007EEA  6E12               	movwf	main@rd1end,c
   414                           
   415                           ;main.c: 55: rd2end = 1;
   416  007EEC  0E00               	movlw	0
   417  007EEE  6E15               	movwf	main@rd2end+1,c
   418  007EF0  0E01               	movlw	1
   419  007EF2  6E14               	movwf	main@rd2end,c
   420                           
   421                           ;main.c: 56: _delay((unsigned long)((2000)*(4000000/4000.0)));
   422  007EF4  0E0B               	movlw	11
   423  007EF6  6E07               	movwf	(??_main+1)& (0+255),c
   424  007EF8  0E26               	movlw	38
   425  007EFA  6E06               	movwf	??_main& (0+255),c
   426  007EFC  0E5E               	movlw	94
   427  007EFE                     u457:
   428  007EFE  2EE8               	decfsz	wreg,f,c
   429  007F00  D7FE               	bra	u457
   430  007F02  2E06               	decfsz	??_main& (0+255),f,c
   431  007F04  D7FC               	bra	u457
   432  007F06  2E07               	decfsz	(??_main+1)& (0+255),f,c
   433  007F08  D7FA               	bra	u457
   434  007F0A                     l33:
   435                           
   436                           ;main.c: 58: }
   437                           ;main.c: 59: }
   438                           ;main.c: 61: if(PORTDbits.RD1 == 1 && rd1end == 1) {
   439  007F0A  A283               	btfss	3971,1,c	;volatile
   440  007F0C  D03B               	goto	l38
   441  007F0E  0412               	decf	main@rd1end,w,c
   442  007F10  1013               	iorwf	main@rd1end+1,w,c
   443  007F12  A4D8               	btfss	status,2,c
   444  007F14  D037               	goto	l38
   445                           
   446                           ;main.c: 62: rd1end = 0;
   447  007F16  0E00               	movlw	0
   448  007F18  6E13               	movwf	main@rd1end+1,c
   449  007F1A  0E00               	movlw	0
   450  007F1C  6E12               	movwf	main@rd1end,c
   451                           
   452                           ;main.c: 63: if(order[0] == (0)) {
   453  007F1E  5016               	movf	main@order,w,c
   454  007F20  A4D8               	btfss	status,2,c
   455  007F22  D003               	goto	l35
   456                           
   457                           ;main.c: 64: order[0] = 'L';
   458  007F24  0E4C               	movlw	76
   459  007F26  6E16               	movwf	main@order,c
   460                           
   461                           ;main.c: 65: }
   462  007F28  D02D               	goto	l38
   463  007F2A                     l35:
   464                           
   465                           ;main.c: 66: else if(order[1] == (0)) {
   466  007F2A  5017               	movf	main@order+1,w,c
   467  007F2C  A4D8               	btfss	status,2,c
   468  007F2E  D003               	goto	l37
   469                           
   470                           ;main.c: 67: order[1] = 'L';
   471  007F30  0E4C               	movlw	76
   472  007F32  6E17               	movwf	main@order+1,c
   473                           
   474                           ;main.c: 68: }
   475  007F34  D027               	goto	l38
   476  007F36                     l37:
   477                           
   478                           ;main.c: 69: else {
   479                           ;main.c: 70: order[2] = 'L';
   480  007F36  0E4C               	movlw	76
   481  007F38  6E18               	movwf	main@order+2,c
   482                           
   483                           ;main.c: 71: init_XLCD();
   484  007F3A  ECFB  F03D         	call	_init_XLCD	;wreg free
   485                           
   486                           ;main.c: 72: putrsXLCD(order);
   487  007F3E  0E16               	movlw	low main@order
   488  007F40  6E02               	movwf	putrsXLCD@buffer,c
   489  007F42  0E00               	movlw	high main@order
   490  007F44  6E03               	movwf	putrsXLCD@buffer+1,c
   491  007F46  EC0A  F03E         	call	_putrsXLCD	;wreg free
   492                           
   493                           ;main.c: 73: order[0] = (0);
   494  007F4A  0E00               	movlw	0
   495  007F4C  6E16               	movwf	main@order,c
   496                           
   497                           ;main.c: 74: order[1] = (0);
   498  007F4E  0E00               	movlw	0
   499  007F50  6E17               	movwf	main@order+1,c
   500                           
   501                           ;main.c: 75: order[2] = (0);
   502  007F52  0E00               	movlw	0
   503  007F54  6E18               	movwf	main@order+2,c
   504                           
   505                           ;main.c: 76: rd0end = 1;
   506  007F56  0E00               	movlw	0
   507  007F58  6E11               	movwf	main@rd0end+1,c
   508  007F5A  0E01               	movlw	1
   509  007F5C  6E10               	movwf	main@rd0end,c
   510                           
   511                           ;main.c: 77: rd1end = 1;
   512  007F5E  0E00               	movlw	0
   513  007F60  6E13               	movwf	main@rd1end+1,c
   514  007F62  0E01               	movlw	1
   515  007F64  6E12               	movwf	main@rd1end,c
   516                           
   517                           ;main.c: 78: rd2end = 1;
   518  007F66  0E00               	movlw	0
   519  007F68  6E15               	movwf	main@rd2end+1,c
   520  007F6A  0E01               	movlw	1
   521  007F6C  6E14               	movwf	main@rd2end,c
   522                           
   523                           ;main.c: 79: _delay((unsigned long)((2000)*(4000000/4000.0)));
   524  007F6E  0E0B               	movlw	11
   525  007F70  6E07               	movwf	(??_main+1)& (0+255),c
   526  007F72  0E26               	movlw	38
   527  007F74  6E06               	movwf	??_main& (0+255),c
   528  007F76  0E5E               	movlw	94
   529  007F78                     u467:
   530  007F78  2EE8               	decfsz	wreg,f,c
   531  007F7A  D7FE               	bra	u467
   532  007F7C  2E06               	decfsz	??_main& (0+255),f,c
   533  007F7E  D7FC               	bra	u467
   534  007F80  2E07               	decfsz	(??_main+1)& (0+255),f,c
   535  007F82  D7FA               	bra	u467
   536  007F84                     l38:
   537                           
   538                           ;main.c: 81: }
   539                           ;main.c: 82: }
   540                           ;main.c: 84: if(PORTDbits.RD2 == 1 && rd2end == 1) {
   541  007F84  A483               	btfss	3971,2,c	;volatile
   542  007F86  D758               	goto	l27
   543  007F88  0414               	decf	main@rd2end,w,c
   544  007F8A  1015               	iorwf	main@rd2end+1,w,c
   545  007F8C  A4D8               	btfss	status,2,c
   546  007F8E  D754               	goto	l27
   547                           
   548                           ;main.c: 85: rd2end = 0;
   549  007F90  0E00               	movlw	0
   550  007F92  6E15               	movwf	main@rd2end+1,c
   551  007F94  0E00               	movlw	0
   552  007F96  6E14               	movwf	main@rd2end,c
   553                           
   554                           ;main.c: 86: if(order[0] == (0)) {
   555  007F98  5016               	movf	main@order,w,c
   556  007F9A  A4D8               	btfss	status,2,c
   557  007F9C  D003               	goto	l40
   558                           
   559                           ;main.c: 87: order[0] = 'R';
   560  007F9E  0E52               	movlw	82
   561  007FA0  6E16               	movwf	main@order,c
   562                           
   563                           ;main.c: 88: }
   564  007FA2  D74A               	goto	l27
   565  007FA4                     l40:
   566                           
   567                           ;main.c: 89: else if(order[1] == (0)) {
   568  007FA4  5017               	movf	main@order+1,w,c
   569  007FA6  A4D8               	btfss	status,2,c
   570  007FA8  D003               	goto	l42
   571                           
   572                           ;main.c: 90: order[1] = 'R';
   573  007FAA  0E52               	movlw	82
   574  007FAC  6E17               	movwf	main@order+1,c
   575                           
   576                           ;main.c: 91: }
   577  007FAE  D744               	goto	l27
   578  007FB0                     l42:
   579                           
   580                           ;main.c: 92: else {
   581                           ;main.c: 93: order[2] = 'R';
   582  007FB0  0E52               	movlw	82
   583  007FB2  6E18               	movwf	main@order+2,c
   584                           
   585                           ;main.c: 94: init_XLCD();
   586  007FB4  ECFB  F03D         	call	_init_XLCD	;wreg free
   587                           
   588                           ;main.c: 95: putrsXLCD(order);
   589  007FB8  0E16               	movlw	low main@order
   590  007FBA  6E02               	movwf	putrsXLCD@buffer,c
   591  007FBC  0E00               	movlw	high main@order
   592  007FBE  6E03               	movwf	putrsXLCD@buffer+1,c
   593  007FC0  EC0A  F03E         	call	_putrsXLCD	;wreg free
   594                           
   595                           ;main.c: 96: order[0] = (0);
   596  007FC4  0E00               	movlw	0
   597  007FC6  6E16               	movwf	main@order,c
   598                           
   599                           ;main.c: 97: order[1] = (0);
   600  007FC8  0E00               	movlw	0
   601  007FCA  6E17               	movwf	main@order+1,c
   602                           
   603                           ;main.c: 98: order[2] = (0);
   604  007FCC  0E00               	movlw	0
   605  007FCE  6E18               	movwf	main@order+2,c
   606                           
   607                           ;main.c: 99: rd0end = 1;
   608  007FD0  0E00               	movlw	0
   609  007FD2  6E11               	movwf	main@rd0end+1,c
   610  007FD4  0E01               	movlw	1
   611  007FD6  6E10               	movwf	main@rd0end,c
   612                           
   613                           ;main.c: 100: rd1end = 1;
   614  007FD8  0E00               	movlw	0
   615  007FDA  6E13               	movwf	main@rd1end+1,c
   616  007FDC  0E01               	movlw	1
   617  007FDE  6E12               	movwf	main@rd1end,c
   618                           
   619                           ;main.c: 101: rd2end = 1;
   620  007FE0  0E00               	movlw	0
   621  007FE2  6E15               	movwf	main@rd2end+1,c
   622  007FE4  0E01               	movlw	1
   623  007FE6  6E14               	movwf	main@rd2end,c
   624                           
   625                           ;main.c: 102: _delay((unsigned long)((2000)*(4000000/4000.0)));
   626  007FE8  0E0B               	movlw	11
   627  007FEA  6E07               	movwf	(??_main+1)& (0+255),c
   628  007FEC  0E26               	movlw	38
   629  007FEE  6E06               	movwf	??_main& (0+255),c
   630  007FF0  0E5E               	movlw	94
   631  007FF2                     u477:
   632  007FF2  2EE8               	decfsz	wreg,f,c
   633  007FF4  D7FE               	bra	u477
   634  007FF6  2E06               	decfsz	??_main& (0+255),f,c
   635  007FF8  D7FC               	bra	u477
   636  007FFA  2E07               	decfsz	(??_main+1)& (0+255),f,c
   637  007FFC  D7FA               	bra	u477
   638  007FFE  D71C               	goto	l27
   639  008000                     __end_of_main:
   640                           	opt stack 0
   641                           wreg	equ	0xFE8
   642                           status	equ	0xFD8
   643                           
   644 ;; *************** function _putrsXLCD *****************
   645 ;; Defined at:
   646 ;;		line 16 in file "putrxlcd.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;  buffer          2    1[COMRAM] PTR const unsigned char 
   649 ;;		 -> main@order(3), 
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   661 ;;      Params:         2       0       0       0       0       0       0
   662 ;;      Locals:         0       0       0       0       0       0       0
   663 ;;      Temps:          0       0       0       0       0       0       0
   664 ;;      Totals:         2       0       0       0       0       0       0
   665 ;;Total ram usage:        2 bytes
   666 ;; Hardware stack levels used:    1
   667 ;; Hardware stack levels required when called:    2
   668 ;; This function calls:
   669 ;;		_BusyXLCD
   670 ;;		_WriteDataXLCD
   671 ;; This function is called by:
   672 ;;		_main
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text1
   677  007C14                     __ptext1:
   678                           	opt stack 0
   679  007C14                     _putrsXLCD:
   680                           	opt stack 28
   681                           
   682                           ;putrxlcd.c: 18: while(*buffer)
   683                           
   684                           ;incstack = 0
   685  007C14  D00E               	goto	l121
   686  007C16                     
   687                           ;putrxlcd.c: 19: {
   688                           ;putrxlcd.c: 20: while(BusyXLCD());
   689  007C16  EC21  F03E         	call	_BusyXLCD	;wreg free
   690  007C1A  0900               	iorlw	0
   691  007C1C  A4D8               	btfss	status,2,c
   692  007C1E  D7FB               	goto	l122
   693                           
   694                           ;putrxlcd.c: 21: WriteDataXLCD(*buffer);
   695  007C20  C002  FFD9         	movff	putrsXLCD@buffer,fsr2l
   696  007C24  C003  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
   697  007C28  50DF               	movf	indf2,w,c
   698  007C2A  EC5D  F03E         	call	_WriteDataXLCD
   699                           
   700                           ;putrxlcd.c: 22: buffer++;
   701  007C2E  4A02               	infsnz	putrsXLCD@buffer,f,c
   702  007C30  2A03               	incf	putrsXLCD@buffer+1,f,c
   703  007C32                     l121:
   704  007C32  C002  FFD9         	movff	putrsXLCD@buffer,fsr2l
   705  007C36  C003  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
   706  007C3A  50DF               	movf	indf2,w,c
   707  007C3C  B4D8               	btfsc	status,2,c
   708  007C3E  0012               	return	
   709  007C40  D7EA               	goto	l122
   710  007C42                     __end_of_putrsXLCD:
   711                           	opt stack 0
   712                           wreg	equ	0xFE8
   713                           indf2	equ	0xFDF
   714                           fsr2h	equ	0xFDA
   715                           fsr2l	equ	0xFD9
   716                           status	equ	0xFD8
   717                           
   718 ;; *************** function _WriteDataXLCD *****************
   719 ;; Defined at:
   720 ;;		line 16 in file "writdata.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  data            1    wreg     unsigned char 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  data            1    0[COMRAM] unsigned char 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   734 ;;      Params:         0       0       0       0       0       0       0
   735 ;;      Locals:         1       0       0       0       0       0       0
   736 ;;      Temps:          0       0       0       0       0       0       0
   737 ;;      Totals:         1       0       0       0       0       0       0
   738 ;;Total ram usage:        1 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; Hardware stack levels required when called:    1
   741 ;; This function calls:
   742 ;;		_DelayFor18TCY
   743 ;; This function is called by:
   744 ;;		_putrsXLCD
   745 ;;		_putsXLCD
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text2
   750  007CBA                     __ptext2:
   751                           	opt stack 0
   752  007CBA                     _WriteDataXLCD:
   753                           	opt stack 28
   754                           
   755                           ;incstack = 0
   756                           ;WriteDataXLCD@data stored from wreg
   757  007CBA  6E01               	movwf	WriteDataXLCD@data,c
   758                           
   759                           ;writdata.c: 35: TRISB &= 0xf0;
   760  007CBC  0EF0               	movlw	240
   761  007CBE  1693               	andwf	3987,f,c	;volatile
   762                           
   763                           ;writdata.c: 36: PORTB &= 0xf0;
   764  007CC0  0EF0               	movlw	240
   765  007CC2  1681               	andwf	3969,f,c	;volatile
   766                           
   767                           ;writdata.c: 37: PORTB |= ((data>>4)&0x0f);
   768  007CC4  3801               	swapf	WriteDataXLCD@data,w,c
   769  007CC6  0B0F               	andlw	15
   770  007CC8  0B0F               	andlw	15
   771  007CCA  1281               	iorwf	3969,f,c	;volatile
   772                           
   773                           ;writdata.c: 39: LATAbits.LATA3 = 1;
   774  007CCC  8689               	bsf	3977,3,c	;volatile
   775                           
   776                           ;writdata.c: 40: LATAbits.LATA2 = 0;
   777  007CCE  9489               	bcf	3977,2,c	;volatile
   778                           
   779                           ;writdata.c: 41: DelayFor18TCY();
   780  007CD0  ECE3  F03D         	call	_DelayFor18TCY	;wreg free
   781                           
   782                           ;writdata.c: 42: LATAbits.LATA1 = 1;
   783  007CD4  8289               	bsf	3977,1,c	;volatile
   784                           
   785                           ;writdata.c: 43: DelayFor18TCY();
   786  007CD6  ECE3  F03D         	call	_DelayFor18TCY	;wreg free
   787                           
   788                           ;writdata.c: 44: LATAbits.LATA1 = 0;
   789  007CDA  9289               	bcf	3977,1,c	;volatile
   790                           
   791                           ;writdata.c: 49: PORTB &= 0xf0;
   792  007CDC  0EF0               	movlw	240
   793  007CDE  1681               	andwf	3969,f,c	;volatile
   794                           
   795                           ;writdata.c: 50: PORTB |= (data&0x0f);
   796  007CE0  5001               	movf	WriteDataXLCD@data,w,c
   797  007CE2  0B0F               	andlw	15
   798  007CE4  1281               	iorwf	3969,f,c	;volatile
   799                           
   800                           ;writdata.c: 52: DelayFor18TCY();
   801  007CE6  ECE3  F03D         	call	_DelayFor18TCY	;wreg free
   802                           
   803                           ;writdata.c: 53: LATAbits.LATA1 = 1;
   804  007CEA  8289               	bsf	3977,1,c	;volatile
   805                           
   806                           ;writdata.c: 54: DelayFor18TCY();
   807  007CEC  ECE3  F03D         	call	_DelayFor18TCY	;wreg free
   808                           
   809                           ;writdata.c: 55: LATAbits.LATA1 = 0;
   810  007CF0  9289               	bcf	3977,1,c	;volatile
   811                           
   812                           ;writdata.c: 59: TRISB |= 0x0f;
   813  007CF2  0E0F               	movlw	15
   814  007CF4  1293               	iorwf	3987,f,c	;volatile
   815  007CF6  0012               	return	
   816  007CF8                     __end_of_WriteDataXLCD:
   817                           	opt stack 0
   818                           wreg	equ	0xFE8
   819                           indf2	equ	0xFDF
   820                           fsr2h	equ	0xFDA
   821                           fsr2l	equ	0xFD9
   822                           status	equ	0xFD8
   823                           
   824 ;; *************** function _init_XLCD *****************
   825 ;; Defined at:
   826 ;;		line 129 in file "main.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   840 ;;      Params:         0       0       0       0       0       0       0
   841 ;;      Locals:         0       0       0       0       0       0       0
   842 ;;      Temps:          0       0       0       0       0       0       0
   843 ;;      Totals:         0       0       0       0       0       0       0
   844 ;;Total ram usage:        0 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:    3
   847 ;; This function calls:
   848 ;;		_BusyXLCD
   849 ;;		_OpenXLCD
   850 ;;		_WriteCmdXLCD
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text3
   857  007BF6                     __ptext3:
   858                           	opt stack 0
   859  007BF6                     _init_XLCD:
   860                           	opt stack 27
   861                           
   862                           ;main.c: 131: OpenXLCD(0b00101100&0b00111000);
   863                           
   864                           ;incstack = 0
   865  007BF6  0E28               	movlw	40
   866  007BF8  ECA5  F03E         	call	_OpenXLCD
   867  007BFC  EC21  F03E         	call	_BusyXLCD	;wreg free
   868  007C00  0900               	iorlw	0
   869  007C02  A4D8               	btfss	status,2,c
   870  007C04  D7FB               	goto	l59
   871                           
   872                           ;main.c: 135: WriteCmdXLCD(0x06);
   873  007C06  0E06               	movlw	6
   874  007C08  EC3E  F03E         	call	_WriteCmdXLCD
   875                           
   876                           ;main.c: 136: WriteCmdXLCD(0x0C);
   877  007C0C  0E0C               	movlw	12
   878  007C0E  EC3E  F03E         	call	_WriteCmdXLCD
   879  007C12  0012               	return		;funcret
   880  007C14                     __end_of_init_XLCD:
   881                           	opt stack 0
   882                           wreg	equ	0xFE8
   883                           indf2	equ	0xFDF
   884                           fsr2h	equ	0xFDA
   885                           fsr2l	equ	0xFD9
   886                           status	equ	0xFD8
   887                           
   888 ;; *************** function _OpenXLCD *****************
   889 ;; Defined at:
   890 ;;		line 19 in file "openxlcd.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  lcdtype         1    wreg     unsigned char 
   893 ;; Auto vars:     Size  Location     Type
   894 ;;  lcdtype         1    4[COMRAM] unsigned char 
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, status,2, status,0, cstack
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   904 ;;      Params:         0       0       0       0       0       0       0
   905 ;;      Locals:         1       0       0       0       0       0       0
   906 ;;      Temps:          0       0       0       0       0       0       0
   907 ;;      Totals:         1       0       0       0       0       0       0
   908 ;;Total ram usage:        1 bytes
   909 ;; Hardware stack levels used:    1
   910 ;; Hardware stack levels required when called:    2
   911 ;; This function calls:
   912 ;;		_BusyXLCD
   913 ;;		_Delay10KTCYx
   914 ;;		_DelayPORXLCD
   915 ;;		_SetDDRamAddr
   916 ;;		_WriteCmdXLCD
   917 ;; This function is called by:
   918 ;;		_init_XLCD
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text4
   923  007D4A                     __ptext4:
   924                           	opt stack 0
   925  007D4A                     _OpenXLCD:
   926                           	opt stack 27
   927                           
   928                           ;incstack = 0
   929                           ;OpenXLCD@lcdtype stored from wreg
   930  007D4A  6E05               	movwf	OpenXLCD@lcdtype,c
   931                           
   932                           ;openxlcd.c: 31: PORTB &= 0xf0;
   933  007D4C  0EF0               	movlw	240
   934  007D4E  1681               	andwf	3969,f,c	;volatile
   935                           
   936                           ;openxlcd.c: 32: TRISB &= 0xF0;
   937  007D50  0EF0               	movlw	240
   938  007D52  1693               	andwf	3987,f,c	;volatile
   939                           
   940                           ;openxlcd.c: 35: TRISAbits.TRISA2 = 0;
   941  007D54  9492               	bcf	3986,2,c	;volatile
   942                           
   943                           ;openxlcd.c: 36: TRISAbits.TRISA3 = 0;
   944  007D56  9692               	bcf	3986,3,c	;volatile
   945                           
   946                           ;openxlcd.c: 37: TRISAbits.TRISA1 = 0;
   947  007D58  9292               	bcf	3986,1,c	;volatile
   948                           
   949                           ;openxlcd.c: 38: LATAbits.LATA2 = 0;
   950  007D5A  9489               	bcf	3977,2,c	;volatile
   951                           
   952                           ;openxlcd.c: 39: LATAbits.LATA3 = 0;
   953  007D5C  9689               	bcf	3977,3,c	;volatile
   954                           
   955                           ;openxlcd.c: 40: LATAbits.LATA1 = 0;
   956  007D5E  9289               	bcf	3977,1,c	;volatile
   957                           
   958                           ;openxlcd.c: 43: DelayPORXLCD();
   959  007D60  ECE8  F03D         	call	_DelayPORXLCD	;wreg free
   960                           
   961                           ;openxlcd.c: 45: WriteCmdXLCD(0x30);
   962  007D64  0E30               	movlw	48
   963  007D66  EC3E  F03E         	call	_WriteCmdXLCD
   964                           
   965                           ;openxlcd.c: 46: Delay10KTCYx(0x05);
   966  007D6A  0E05               	movlw	5
   967  007D6C  ECF0  F03D         	call	_Delay10KTCYx
   968                           
   969                           ;openxlcd.c: 48: WriteCmdXLCD(0x30);
   970  007D70  0E30               	movlw	48
   971  007D72  EC3E  F03E         	call	_WriteCmdXLCD
   972                           
   973                           ;openxlcd.c: 49: Delay10KTCYx(0x01);
   974  007D76  0E01               	movlw	1
   975  007D78  ECF0  F03D         	call	_Delay10KTCYx
   976                           
   977                           ;openxlcd.c: 52: WriteCmdXLCD(0x32);
   978  007D7C  0E32               	movlw	50
   979  007D7E  EC3E  F03E         	call	_WriteCmdXLCD
   980  007D82  EC21  F03E         	call	_BusyXLCD	;wreg free
   981  007D86  0900               	iorlw	0
   982  007D88  A4D8               	btfss	status,2,c
   983  007D8A  D7FB               	goto	l94
   984  007D8C                     u30:
   985                           
   986                           ;openxlcd.c: 58: while(BusyXLCD());
   987  007D8C  EC21  F03E         	call	_BusyXLCD	;wreg free
   988  007D90  0900               	iorlw	0
   989  007D92  A4D8               	btfss	status,2,c
   990  007D94  D7FB               	goto	u30
   991                           
   992                           ;openxlcd.c: 59: WriteCmdXLCD(lcdtype);
   993  007D96  5005               	movf	OpenXLCD@lcdtype,w,c
   994  007D98  EC3E  F03E         	call	_WriteCmdXLCD
   995  007D9C  EC21  F03E         	call	_BusyXLCD	;wreg free
   996  007DA0  0900               	iorlw	0
   997  007DA2  A4D8               	btfss	status,2,c
   998  007DA4  D7FB               	goto	l100
   999                           
  1000                           ;openxlcd.c: 63: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  1001  007DA6  0E08               	movlw	8
  1002  007DA8  EC3E  F03E         	call	_WriteCmdXLCD
  1003  007DAC  EC21  F03E         	call	_BusyXLCD	;wreg free
  1004  007DB0  0900               	iorlw	0
  1005  007DB2  A4D8               	btfss	status,2,c
  1006  007DB4  D7FB               	goto	l103
  1007                           
  1008                           ;openxlcd.c: 65: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  1009  007DB6  0E0F               	movlw	15
  1010  007DB8  EC3E  F03E         	call	_WriteCmdXLCD
  1011  007DBC  EC21  F03E         	call	_BusyXLCD	;wreg free
  1012  007DC0  0900               	iorlw	0
  1013  007DC2  A4D8               	btfss	status,2,c
  1014  007DC4  D7FB               	goto	l106
  1015                           
  1016                           ;openxlcd.c: 69: WriteCmdXLCD(0x01);
  1017  007DC6  0E01               	movlw	1
  1018  007DC8  EC3E  F03E         	call	_WriteCmdXLCD
  1019  007DCC  EC21  F03E         	call	_BusyXLCD	;wreg free
  1020  007DD0  0900               	iorlw	0
  1021  007DD2  A4D8               	btfss	status,2,c
  1022  007DD4  D7FB               	goto	l109
  1023                           
  1024                           ;openxlcd.c: 73: WriteCmdXLCD(0b00000100);
  1025  007DD6  0E04               	movlw	4
  1026  007DD8  EC3E  F03E         	call	_WriteCmdXLCD
  1027  007DDC  EC21  F03E         	call	_BusyXLCD	;wreg free
  1028  007DE0  0900               	iorlw	0
  1029  007DE2  A4D8               	btfss	status,2,c
  1030  007DE4  D7FB               	goto	l112
  1031                           
  1032                           ;openxlcd.c: 77: SetDDRamAddr(0x80);
  1033  007DE6  0E80               	movlw	128
  1034  007DE8  EC7C  F03E         	call	_SetDDRamAddr
  1035  007DEC  0012               	return	
  1036  007DEE                     __end_of_OpenXLCD:
  1037                           	opt stack 0
  1038                           wreg	equ	0xFE8
  1039                           indf2	equ	0xFDF
  1040                           fsr2h	equ	0xFDA
  1041                           fsr2l	equ	0xFD9
  1042                           status	equ	0xFD8
  1043                           
  1044 ;; *************** function _WriteCmdXLCD *****************
  1045 ;; Defined at:
  1046 ;;		line 13 in file "wcmdxlcd.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  cmd             1    wreg     unsigned char 
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  cmd             1    0[COMRAM] unsigned char 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1060 ;;      Params:         0       0       0       0       0       0       0
  1061 ;;      Locals:         1       0       0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0       0       0
  1063 ;;      Totals:         1       0       0       0       0       0       0
  1064 ;;Total ram usage:        1 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    1
  1067 ;; This function calls:
  1068 ;;		_DelayFor18TCY
  1069 ;; This function is called by:
  1070 ;;		_init_XLCD
  1071 ;;		_OpenXLCD
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text5
  1076  007C7C                     __ptext5:
  1077                           	opt stack 0
  1078  007C7C                     _WriteCmdXLCD:
  1079                           	opt stack 28
  1080                           
  1081                           ;incstack = 0
  1082                           ;WriteCmdXLCD@cmd stored from wreg
  1083  007C7C  6E01               	movwf	WriteCmdXLCD@cmd,c
  1084                           
  1085                           ;wcmdxlcd.c: 32: TRISB &= 0xf0;
  1086  007C7E  0EF0               	movlw	240
  1087  007C80  1693               	andwf	3987,f,c	;volatile
  1088                           
  1089                           ;wcmdxlcd.c: 33: PORTB &= 0xf0;
  1090  007C82  0EF0               	movlw	240
  1091  007C84  1681               	andwf	3969,f,c	;volatile
  1092                           
  1093                           ;wcmdxlcd.c: 34: PORTB |= (cmd>>4)&0x0f;
  1094  007C86  3801               	swapf	WriteCmdXLCD@cmd,w,c
  1095  007C88  0B0F               	andlw	15
  1096  007C8A  0B0F               	andlw	15
  1097  007C8C  1281               	iorwf	3969,f,c	;volatile
  1098                           
  1099                           ;wcmdxlcd.c: 36: LATAbits.LATA2 = 0;
  1100  007C8E  9489               	bcf	3977,2,c	;volatile
  1101                           
  1102                           ;wcmdxlcd.c: 37: LATAbits.LATA3 = 0;
  1103  007C90  9689               	bcf	3977,3,c	;volatile
  1104                           
  1105                           ;wcmdxlcd.c: 38: DelayFor18TCY();
  1106  007C92  ECE3  F03D         	call	_DelayFor18TCY	;wreg free
  1107                           
  1108                           ;wcmdxlcd.c: 39: LATAbits.LATA1 = 1;
  1109  007C96  8289               	bsf	3977,1,c	;volatile
  1110                           
  1111                           ;wcmdxlcd.c: 40: DelayFor18TCY();
  1112  007C98  ECE3  F03D         	call	_DelayFor18TCY	;wreg free
  1113                           
  1114                           ;wcmdxlcd.c: 41: LATAbits.LATA1 = 0;
  1115  007C9C  9289               	bcf	3977,1,c	;volatile
  1116                           
  1117                           ;wcmdxlcd.c: 46: PORTB &= 0xf0;
  1118  007C9E  0EF0               	movlw	240
  1119  007CA0  1681               	andwf	3969,f,c	;volatile
  1120                           
  1121                           ;wcmdxlcd.c: 47: PORTB |= cmd&0x0f;
  1122  007CA2  5001               	movf	WriteCmdXLCD@cmd,w,c
  1123  007CA4  0B0F               	andlw	15
  1124  007CA6  1281               	iorwf	3969,f,c	;volatile
  1125                           
  1126                           ;wcmdxlcd.c: 49: DelayFor18TCY();
  1127  007CA8  ECE3  F03D         	call	_DelayFor18TCY	;wreg free
  1128                           
  1129                           ;wcmdxlcd.c: 50: LATAbits.LATA1 = 1;
  1130  007CAC  8289               	bsf	3977,1,c	;volatile
  1131                           
  1132                           ;wcmdxlcd.c: 51: DelayFor18TCY();
  1133  007CAE  ECE3  F03D         	call	_DelayFor18TCY	;wreg free
  1134                           
  1135                           ;wcmdxlcd.c: 52: LATAbits.LATA1 = 0;
  1136  007CB2  9289               	bcf	3977,1,c	;volatile
  1137                           
  1138                           ;wcmdxlcd.c: 56: TRISB |= 0x0f;
  1139  007CB4  0E0F               	movlw	15
  1140  007CB6  1293               	iorwf	3987,f,c	;volatile
  1141  007CB8  0012               	return	
  1142  007CBA                     __end_of_WriteCmdXLCD:
  1143                           	opt stack 0
  1144                           wreg	equ	0xFE8
  1145                           indf2	equ	0xFDF
  1146                           fsr2h	equ	0xFDA
  1147                           fsr2l	equ	0xFD9
  1148                           status	equ	0xFD8
  1149                           
  1150 ;; *************** function _SetDDRamAddr *****************
  1151 ;; Defined at:
  1152 ;;		line 13 in file "setddram.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  DDaddr          1    wreg     unsigned char 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  DDaddr          1    3[COMRAM] unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1166 ;;      Params:         0       0       0       0       0       0       0
  1167 ;;      Locals:         1       0       0       0       0       0       0
  1168 ;;      Temps:          3       0       0       0       0       0       0
  1169 ;;      Totals:         4       0       0       0       0       0       0
  1170 ;;Total ram usage:        4 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    1
  1173 ;; This function calls:
  1174 ;;		_DelayFor18TCY
  1175 ;; This function is called by:
  1176 ;;		_OpenXLCD
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text6
  1181  007CF8                     __ptext6:
  1182                           	opt stack 0
  1183  007CF8                     _SetDDRamAddr:
  1184                           	opt stack 27
  1185                           
  1186                           ;incstack = 0
  1187                           ;SetDDRamAddr@DDaddr stored from wreg
  1188  007CF8  6E04               	movwf	SetDDRamAddr@DDaddr,c
  1189                           
  1190                           ;setddram.c: 32: TRISB &= 0xf0;
  1191  007CFA  0EF0               	movlw	240
  1192  007CFC  1693               	andwf	3987,f,c	;volatile
  1193                           
  1194                           ;setddram.c: 33: PORTB &= 0xf0;
  1195  007CFE  0EF0               	movlw	240
  1196  007D00  1681               	andwf	3969,f,c	;volatile
  1197                           
  1198                           ;setddram.c: 34: PORTB |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  1199  007D02  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1200  007D04  6E01               	movwf	??_SetDDRamAddr& (0+255),c
  1201  007D06  6A02               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  1202  007D08  8E01               	bsf	??_SetDDRamAddr,7,c
  1203  007D0A  0E04               	movlw	4
  1204  007D0C  6E03               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  1205  007D0E                     u25:
  1206  007D0E  3402               	rlcf	??_SetDDRamAddr+1,w,c
  1207  007D10  3202               	rrcf	??_SetDDRamAddr+1,f,c
  1208  007D12  3201               	rrcf	??_SetDDRamAddr,f,c
  1209  007D14  2E03               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  1210  007D16  D7FB               	goto	u25
  1211  007D18  5001               	movf	??_SetDDRamAddr,w,c
  1212  007D1A  0B0F               	andlw	15
  1213  007D1C  1281               	iorwf	3969,f,c	;volatile
  1214                           
  1215                           ;setddram.c: 36: LATAbits.LATA2 = 0;
  1216  007D1E  9489               	bcf	3977,2,c	;volatile
  1217                           
  1218                           ;setddram.c: 37: LATAbits.LATA3 = 0;
  1219  007D20  9689               	bcf	3977,3,c	;volatile
  1220                           
  1221                           ;setddram.c: 38: DelayFor18TCY();
  1222  007D22  ECE3  F03D         	call	_DelayFor18TCY	;wreg free
  1223                           
  1224                           ;setddram.c: 39: LATAbits.LATA1 = 1;
  1225  007D26  8289               	bsf	3977,1,c	;volatile
  1226                           
  1227                           ;setddram.c: 40: DelayFor18TCY();
  1228  007D28  ECE3  F03D         	call	_DelayFor18TCY	;wreg free
  1229                           
  1230                           ;setddram.c: 41: LATAbits.LATA1 = 0;
  1231  007D2C  9289               	bcf	3977,1,c	;volatile
  1232                           
  1233                           ;setddram.c: 46: PORTB &= 0xf0;
  1234  007D2E  0EF0               	movlw	240
  1235  007D30  1681               	andwf	3969,f,c	;volatile
  1236                           
  1237                           ;setddram.c: 47: PORTB |= (DDaddr&0x0f);
  1238  007D32  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1239  007D34  0B0F               	andlw	15
  1240  007D36  1281               	iorwf	3969,f,c	;volatile
  1241                           
  1242                           ;setddram.c: 49: DelayFor18TCY();
  1243  007D38  ECE3  F03D         	call	_DelayFor18TCY	;wreg free
  1244                           
  1245                           ;setddram.c: 50: LATAbits.LATA1 = 1;
  1246  007D3C  8289               	bsf	3977,1,c	;volatile
  1247                           
  1248                           ;setddram.c: 51: DelayFor18TCY();
  1249  007D3E  ECE3  F03D         	call	_DelayFor18TCY	;wreg free
  1250                           
  1251                           ;setddram.c: 52: LATAbits.LATA1 = 0;
  1252  007D42  9289               	bcf	3977,1,c	;volatile
  1253                           
  1254                           ;setddram.c: 56: TRISB |= 0x0f;
  1255  007D44  0E0F               	movlw	15
  1256  007D46  1293               	iorwf	3987,f,c	;volatile
  1257  007D48  0012               	return	
  1258  007D4A                     __end_of_SetDDRamAddr:
  1259                           	opt stack 0
  1260                           wreg	equ	0xFE8
  1261                           indf2	equ	0xFDF
  1262                           fsr2h	equ	0xFDA
  1263                           fsr2l	equ	0xFD9
  1264                           status	equ	0xFD8
  1265                           
  1266 ;; *************** function _DelayPORXLCD *****************
  1267 ;; Defined at:
  1268 ;;		line 116 in file "main.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1282 ;;      Params:         0       0       0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0       0       0
  1284 ;;      Temps:          1       0       0       0       0       0       0
  1285 ;;      Totals:         1       0       0       0       0       0       0
  1286 ;;Total ram usage:        1 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_OpenXLCD
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text7
  1296  007BD0                     __ptext7:
  1297                           	opt stack 0
  1298  007BD0                     _DelayPORXLCD:
  1299                           	opt stack 28
  1300                           
  1301                           ;main.c: 118: _delay((unsigned long)((15)*(4000000/4000.0)));
  1302                           
  1303                           ;incstack = 0
  1304  007BD0  0E14               	movlw	20
  1305  007BD2  6E01               	movwf	??_DelayPORXLCD& (0+255),c
  1306  007BD4  0E7A               	movlw	122
  1307  007BD6                     u487:
  1308  007BD6  2EE8               	decfsz	wreg,f,c
  1309  007BD8  D7FE               	bra	u487
  1310  007BDA  2E01               	decfsz	??_DelayPORXLCD& (0+255),f,c
  1311  007BDC  D7FC               	bra	u487
  1312  007BDE  0012               	return		;funcret
  1313  007BE0                     __end_of_DelayPORXLCD:
  1314                           	opt stack 0
  1315                           wreg	equ	0xFE8
  1316                           indf2	equ	0xFDF
  1317                           fsr2h	equ	0xFDA
  1318                           fsr2l	equ	0xFD9
  1319                           status	equ	0xFD8
  1320                           
  1321 ;; *************** function _Delay10KTCYx *****************
  1322 ;; Defined at:
  1323 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\pic18\d10ktcyx.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  unit            1    wreg     unsigned char 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  unit            1    1[COMRAM] unsigned char 
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1337 ;;      Params:         0       0       0       0       0       0       0
  1338 ;;      Locals:         1       0       0       0       0       0       0
  1339 ;;      Temps:          1       0       0       0       0       0       0
  1340 ;;      Totals:         2       0       0       0       0       0       0
  1341 ;;Total ram usage:        2 bytes
  1342 ;; Hardware stack levels used:    1
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_OpenXLCD
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text8
  1351  007BE0                     __ptext8:
  1352                           	opt stack 0
  1353  007BE0                     _Delay10KTCYx:
  1354                           	opt stack 28
  1355                           
  1356                           ;incstack = 0
  1357                           ;Delay10KTCYx@unit stored from wreg
  1358  007BE0  6E02               	movwf	Delay10KTCYx@unit,c
  1359  007BE2                     l458:
  1360  007BE2  0E0D               	movlw	13
  1361  007BE4  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  1362  007BE6  0EFC               	movlw	252
  1363  007BE8                     u497:
  1364  007BE8  2EE8               	decfsz	wreg,f,c
  1365  007BEA  D7FE               	bra	u497
  1366  007BEC  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1367  007BEE  D7FC               	bra	u497
  1368  007BF0  2E02               	decfsz	Delay10KTCYx@unit,f,c
  1369  007BF2  D7F7               	goto	l458
  1370  007BF4  0012               	return	
  1371  007BF6                     __end_of_Delay10KTCYx:
  1372                           	opt stack 0
  1373                           wreg	equ	0xFE8
  1374                           indf2	equ	0xFDF
  1375                           fsr2h	equ	0xFDA
  1376                           fsr2l	equ	0xFD9
  1377                           status	equ	0xFD8
  1378                           
  1379 ;; *************** function _BusyXLCD *****************
  1380 ;; Defined at:
  1381 ;;		line 11 in file "busyxlcd.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      unsigned char 
  1388 ;; Registers used:
  1389 ;;		wreg, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1395 ;;      Params:         0       0       0       0       0       0       0
  1396 ;;      Locals:         0       0       0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0
  1398 ;;      Totals:         0       0       0       0       0       0       0
  1399 ;;Total ram usage:        0 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    1
  1402 ;; This function calls:
  1403 ;;		_DelayFor18TCY
  1404 ;; This function is called by:
  1405 ;;		_init_XLCD
  1406 ;;		_OpenXLCD
  1407 ;;		_putrsXLCD
  1408 ;;		_putsXLCD
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text9
  1413  007C42                     __ptext9:
  1414                           	opt stack 0
  1415  007C42                     _BusyXLCD:
  1416                           	opt stack 28
  1417                           
  1418                           ;busyxlcd.c: 13: LATAbits.LATA2 = 1;
  1419                           
  1420                           ;incstack = 0
  1421  007C42  8489               	bsf	3977,2,c	;volatile
  1422                           
  1423                           ;busyxlcd.c: 14: LATAbits.LATA3 = 0;
  1424  007C44  9689               	bcf	3977,3,c	;volatile
  1425                           
  1426                           ;busyxlcd.c: 15: DelayFor18TCY();
  1427  007C46  ECE3  F03D         	call	_DelayFor18TCY	;wreg free
  1428                           
  1429                           ;busyxlcd.c: 16: LATAbits.LATA1 = 1;
  1430  007C4A  8289               	bsf	3977,1,c	;volatile
  1431                           
  1432                           ;busyxlcd.c: 17: DelayFor18TCY();
  1433  007C4C  ECE3  F03D         	call	_DelayFor18TCY	;wreg free
  1434                           
  1435                           ;busyxlcd.c: 35: if(PORTB&0x08)
  1436  007C50  A681               	btfss	3969,3,c	;volatile
  1437  007C52  D00A               	goto	l70
  1438                           
  1439                           ;busyxlcd.c: 37: {
  1440                           ;busyxlcd.c: 38: LATAbits.LATA1 = 0;
  1441  007C54  9289               	bcf	3977,1,c	;volatile
  1442                           
  1443                           ;busyxlcd.c: 39: DelayFor18TCY();
  1444  007C56  ECE3  F03D         	call	_DelayFor18TCY	;wreg free
  1445                           
  1446                           ;busyxlcd.c: 40: LATAbits.LATA1 = 1;
  1447  007C5A  8289               	bsf	3977,1,c	;volatile
  1448                           
  1449                           ;busyxlcd.c: 41: DelayFor18TCY();
  1450  007C5C  ECE3  F03D         	call	_DelayFor18TCY	;wreg free
  1451                           
  1452                           ;busyxlcd.c: 42: LATAbits.LATA1 = 0;
  1453  007C60  9289               	bcf	3977,1,c	;volatile
  1454                           
  1455                           ;busyxlcd.c: 43: LATAbits.LATA2 = 0;
  1456  007C62  9489               	bcf	3977,2,c	;volatile
  1457                           
  1458                           ;busyxlcd.c: 44: return 1;
  1459  007C64  0E01               	movlw	1
  1460                           
  1461                           ;busyxlcd.c: 45: }
  1462  007C66  0012               	return	
  1463  007C68                     l70:
  1464                           
  1465                           ;busyxlcd.c: 46: else
  1466                           ;busyxlcd.c: 47: {
  1467                           ;busyxlcd.c: 48: LATAbits.LATA1 = 0;
  1468  007C68  9289               	bcf	3977,1,c	;volatile
  1469                           
  1470                           ;busyxlcd.c: 49: DelayFor18TCY();
  1471  007C6A  ECE3  F03D         	call	_DelayFor18TCY	;wreg free
  1472                           
  1473                           ;busyxlcd.c: 50: LATAbits.LATA1 = 1;
  1474  007C6E  8289               	bsf	3977,1,c	;volatile
  1475                           
  1476                           ;busyxlcd.c: 51: DelayFor18TCY();
  1477  007C70  ECE3  F03D         	call	_DelayFor18TCY	;wreg free
  1478                           
  1479                           ;busyxlcd.c: 52: LATAbits.LATA1 = 0;
  1480  007C74  9289               	bcf	3977,1,c	;volatile
  1481                           
  1482                           ;busyxlcd.c: 53: LATAbits.LATA2 = 0;
  1483  007C76  9489               	bcf	3977,2,c	;volatile
  1484                           
  1485                           ;busyxlcd.c: 54: return 0;
  1486  007C78  0E00               	movlw	0
  1487  007C7A  0012               	return	
  1488  007C7C                     __end_of_BusyXLCD:
  1489                           	opt stack 0
  1490                           wreg	equ	0xFE8
  1491                           indf2	equ	0xFDF
  1492                           fsr2h	equ	0xFDA
  1493                           fsr2l	equ	0xFD9
  1494                           status	equ	0xFD8
  1495                           
  1496 ;; *************** function _DelayFor18TCY *****************
  1497 ;; Defined at:
  1498 ;;		line 111 in file "main.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1512 ;;      Params:         0       0       0       0       0       0       0
  1513 ;;      Locals:         0       0       0       0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0       0       0
  1515 ;;      Totals:         0       0       0       0       0       0       0
  1516 ;;Total ram usage:        0 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_BusyXLCD
  1522 ;;		_SetDDRamAddr
  1523 ;;		_WriteCmdXLCD
  1524 ;;		_WriteDataXLCD
  1525 ;;		_ReadAddrXLCD
  1526 ;;		_ReadDataXLCD
  1527 ;;		_SetCGRamAddr
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text10
  1532  007BC6                     __ptext10:
  1533                           	opt stack 0
  1534  007BC6                     _DelayFor18TCY:
  1535                           	opt stack 28
  1536                           
  1537                           ;incstack = 0
  1538  007BC6  0E06               	movlw	6
  1539  007BC8                     u507:
  1540  007BC8  2EE8               	decfsz	wreg,f,c
  1541  007BCA  D7FE               	bra	u507
  1542  007BCC  D000               	nop2	
  1543  007BCE  0012               	return	
  1544  007BD0                     __end_of_DelayFor18TCY:
  1545                           	opt stack 0
  1546  0000                     wreg	equ	0xFE8
  1547                           indf2	equ	0xFDF
  1548                           fsr2h	equ	0xFDA
  1549                           fsr2l	equ	0xFD9
  1550                           status	equ	0xFD8
  1551                           wreg	equ	0xFE8
  1552                           indf2	equ	0xFDF
  1553                           fsr2h	equ	0xFDA
  1554                           fsr2l	equ	0xFD9
  1555                           status	equ	0xFD8
  1556                           
  1557                           	psect	rparam
  1558  0000                     wreg	equ	0xFE8
  1559                           indf2	equ	0xFDF
  1560                           fsr2h	equ	0xFDA
  1561                           fsr2l	equ	0xFD9
  1562                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     24      24
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 3
		 -> main@order(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _putrsXLCD->_WriteDataXLCD
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0    1080
                                              5 COMRAM    19    19      0
                          _init_XLCD
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            2     0      2     303
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     120
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0      90
                                              4 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      30
                                              0 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _Delay10KTCYx
       _DelayPORXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _putrsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     18      18       1       18.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Oct 30 14:22:21 2017

                     l30 7EB0                       l40 7FA4                       l32 7EBC  
                     l33 7F0A                       l42 7FB0                       l35 7F2A  
                     l27 7E38                       l28 7E90                       l37 7F36  
                     l70 7C68                       l38 7F84                       l59 7BFC  
                     l94 7D82                       u30 7D8C                       u25 7D0E  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$XT 000000  
            __CFG_LVP$ON 000000                      l100 7D9C                      l103 7DAC  
                    l112 7DDC                      l121 7C32                      l106 7DBC  
                    l122 7C16                      l109 7DCC                      l458 7BE2  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000                      u507 7BC8  
                    u457 7EFE                      u467 7F78                      u477 7FF2  
                    u487 7BD6                      u497 7BE8    __size_of_WriteCmdXLCD 003E  
                    wreg 000FE8             __CFG_WDT$OFF 000000                     l1379 7E90  
                   _LATA 000F89                     _LATB 000F8A             __CFG_PWRT$ON 000000  
                   _main 7DEE                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9   __size_of_WriteDataXLCD 003E                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
           _WriteCmdXLCD 7C7C            ?_SetDDRamAddr 0001                    ?_main 0001  
                  _PORTB 000F81                    _TRISB 000F93                    _TRISD 000F95  
  __size_of_Delay10KTCYx 0016            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
           main@recorded 0008            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
         __CFG_BOREN$OFF 000000                    status 000FD8          __initialization 7BC0  
           __end_of_main 8000         __end_of_BusyXLCD 7C7C             _Delay10KTCYx 7BE0  
  __size_of_DelayPORXLCD 0010           ??_SetDDRamAddr 0001         __end_of_OpenXLCD 7DEE  
                 ??_main 0006            __activetblptr 000000            _WriteDataXLCD 7CBA  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3             _DelayPORXLCD 7BD0  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000           ?_WriteDataXLCD 0001  
             __accesstop 0080  __end_of__initialization 7BC0          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001   __size_of_DelayFor18TCY 000A  
              ?_BusyXLCD 0001          WriteCmdXLCD@cmd 0001     __end_of_SetDDRamAddr 7D4A  
     __size_of_init_XLCD 001E                ?_OpenXLCD 0001        WriteDataXLCD@data 0001  
        ??_WriteDataXLCD 0001       __size_of_putrsXLCD 002E               ??_BusyXLCD 0001  
             ??_OpenXLCD 0005                  __Hparam 0000                  __Lparam 0000  
          _DelayFor18TCY 7BC6                  __pcinit 7BC0          putrsXLCD@buffer 0002  
                __ramtop 0600                  __ptext0 7DEE                  __ptext1 7C14  
                __ptext2 7CBA                  __ptext3 7BF6                  __ptext4 7D4A  
                __ptext5 7C7C                  __ptext6 7CF8                  __ptext7 7BD0  
                __ptext8 7BE0                  __ptext9 7C42        __end_of_init_XLCD 7C14  
   end_of_initialization 7BC0           ?_DelayFor18TCY 0001        __end_of_putrsXLCD 7C42  
         main@startcount 000A                _PORTDbits 000F83                _TRISAbits 000F92  
              _TRISDbits 000F95    __size_of_SetDDRamAddr 0052               main@rd0end 0010  
             main@rd1end 0012               main@rd2end 0014             _SetDDRamAddr 7CF8  
     SetDDRamAddr@DDaddr 0004      start_initialization 7BC0        __size_of_BusyXLCD 003A  
        ??_DelayFor18TCY 0001        __size_of_OpenXLCD 00A4            ?_WriteCmdXLCD 0001  
       __CFG_LPT1OSC$OFF 000000        __CFG_CCP2MX$PORTC 000000           ??_WriteCmdXLCD 0001  
          ?_Delay10KTCYx 0001    __end_of_WriteDataXLCD 7CF8                _init_XLCD 7BF6  
               _LATAbits 000F89                 _PIE1bits 000F9D            ?_DelayPORXLCD 0001  
               _PIR1bits 000F9E          OpenXLCD@lcdtype 0005         __CFG_WDTPS$32768 000000  
         ??_Delay10KTCYx 0001               _ADCON0bits 000FC2                _putrsXLCD 7C14  
              main@count 000C                main@order 0016         Delay10KTCYx@unit 0002  
             ?_init_XLCD 0001                 _BusyXLCD 7C42           ??_DelayPORXLCD 0001  
               _OpenXLCD 7D4A                 __Hrparam 0000                 __Lrparam 0000  
             ?_putrsXLCD 0002                 __ptext10 7BC6     __end_of_WriteCmdXLCD 7CBA  
          __size_of_main 0212               _INTCONbits 000FF2              ??_init_XLCD 0006  
   __end_of_Delay10KTCYx 7BF6    __end_of_DelayFor18TCY 7BD0     __end_of_DelayPORXLCD 7BE0  
            ??_putrsXLCD 0004  
